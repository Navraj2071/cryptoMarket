const market_place_contract = {
  abi: [
    {
      inputs: [],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "uint256",
          name: "_productId",
          type: "uint256",
        },
      ],
      name: "productCreated",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "uint256",
          name: "_productId",
          type: "uint256",
        },
      ],
      name: "saleCreated",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "uint256",
          name: "_productId",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "address",
          name: "_winner",
          type: "address",
        },
      ],
      name: "winnerDeclared",
      type: "event",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_productId",
          type: "uint256",
        },
      ],
      name: "closeBid",
      outputs: [],
      stateMutability: "payable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "string",
          name: "_name",
          type: "string",
        },
        {
          internalType: "string",
          name: "_description",
          type: "string",
        },
        {
          internalType: "uint256",
          name: "_quantity",
          type: "uint256",
        },
      ],
      name: "createProduct",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_productId",
          type: "uint256",
        },
      ],
      name: "getProductData",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
        {
          internalType: "string",
          name: "",
          type: "string",
        },
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_productId",
          type: "uint256",
        },
      ],
      name: "getProductSaleData",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_productId",
          type: "uint256",
        },
      ],
      name: "placeBid",
      outputs: [],
      stateMutability: "payable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      name: "productIdToAvailability",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      name: "productIdToDescription",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      name: "productIdToFloorPrice",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      name: "productIdToLaunchTime",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      name: "productIdToName",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      name: "productIdToOwner",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      name: "productIdToQuantity",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "productNumber",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_productId",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "_floorPrice",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "_launchtime",
          type: "uint256",
        },
      ],
      name: "putUpForSale",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  allSourcePaths: {
    0: "contracts/MarketPlace2.sol",
  },
  ast: {
    absolutePath: "contracts/MarketPlace2.sol",
    exportedSymbols: {
      MarketPlace: [438],
    },
    id: 439,
    license: "MIT",
    nodeType: "SourceUnit",
    nodes: [
      {
        id: 1,
        literals: ["solidity", "^", "0.8", ".0"],
        nodeType: "PragmaDirective",
        src: "32:23:0",
      },
      {
        abstract: false,
        baseContracts: [],
        canonicalName: "MarketPlace",
        contractDependencies: [],
        contractKind: "contract",
        fullyImplemented: true,
        id: 438,
        linearizedBaseContracts: [438],
        name: "MarketPlace",
        nameLocation: "65:11:0",
        nodeType: "ContractDefinition",
        nodes: [
          {
            constant: false,
            functionSelector: "5034735d",
            id: 3,
            mutability: "mutable",
            name: "productNumber",
            nameLocation: "120:13:0",
            nodeType: "VariableDeclaration",
            scope: 438,
            src: "105:28:0",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 2,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "105:7:0",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "b3302c02",
            id: 7,
            mutability: "mutable",
            name: "productIdToName",
            nameLocation: "173:15:0",
            nodeType: "VariableDeclaration",
            scope: 438,
            src: "139:49:0",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_string_storage_$",
              typeString: "mapping(uint256 => string)",
            },
            typeName: {
              id: 6,
              keyType: {
                id: 4,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "147:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "139:26:0",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_string_storage_$",
                typeString: "mapping(uint256 => string)",
              },
              valueType: {
                id: 5,
                name: "string",
                nodeType: "ElementaryTypeName",
                src: "158:6:0",
                typeDescriptions: {
                  typeIdentifier: "t_string_storage_ptr",
                  typeString: "string",
                },
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "9ac6ed1f",
            id: 11,
            mutability: "mutable",
            name: "productIdToDescription",
            nameLocation: "228:22:0",
            nodeType: "VariableDeclaration",
            scope: 438,
            src: "194:56:0",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_string_storage_$",
              typeString: "mapping(uint256 => string)",
            },
            typeName: {
              id: 10,
              keyType: {
                id: 8,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "202:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "194:26:0",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_string_storage_$",
                typeString: "mapping(uint256 => string)",
              },
              valueType: {
                id: 9,
                name: "string",
                nodeType: "ElementaryTypeName",
                src: "213:6:0",
                typeDescriptions: {
                  typeIdentifier: "t_string_storage_ptr",
                  typeString: "string",
                },
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "c3d10014",
            id: 15,
            mutability: "mutable",
            name: "productIdToQuantity",
            nameLocation: "291:19:0",
            nodeType: "VariableDeclaration",
            scope: 438,
            src: "256:54:0",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 14,
              keyType: {
                id: 12,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "264:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "256:27:0",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 13,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "275:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "28b5ad4b",
            id: 19,
            mutability: "mutable",
            name: "productIdToOwner",
            nameLocation: "355:16:0",
            nodeType: "VariableDeclaration",
            scope: 438,
            src: "320:51:0",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_address_$",
              typeString: "mapping(uint256 => address)",
            },
            typeName: {
              id: 18,
              keyType: {
                id: 16,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "328:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "320:27:0",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_address_$",
                typeString: "mapping(uint256 => address)",
              },
              valueType: {
                id: 17,
                name: "address",
                nodeType: "ElementaryTypeName",
                src: "339:7:0",
                stateMutability: "nonpayable",
                typeDescriptions: {
                  typeIdentifier: "t_address",
                  typeString: "address",
                },
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "f4aed6ef",
            id: 23,
            mutability: "mutable",
            name: "productIdToAvailability",
            nameLocation: "409:23:0",
            nodeType: "VariableDeclaration",
            scope: 438,
            src: "377:55:0",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_bool_$",
              typeString: "mapping(uint256 => bool)",
            },
            typeName: {
              id: 22,
              keyType: {
                id: 20,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "385:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "377:24:0",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_bool_$",
                typeString: "mapping(uint256 => bool)",
              },
              valueType: {
                id: 21,
                name: "bool",
                nodeType: "ElementaryTypeName",
                src: "396:4:0",
                typeDescriptions: {
                  typeIdentifier: "t_bool",
                  typeString: "bool",
                },
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            functionSelector: "fcfe8076",
            id: 27,
            mutability: "mutable",
            name: "productIdToFloorPrice",
            nameLocation: "473:21:0",
            nodeType: "VariableDeclaration",
            scope: 438,
            src: "438:56:0",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 26,
              keyType: {
                id: 24,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "446:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "438:27:0",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 25,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "457:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            id: 31,
            mutability: "mutable",
            name: "productIdToHighestBidId",
            nameLocation: "528:23:0",
            nodeType: "VariableDeclaration",
            scope: 438,
            src: "500:51:0",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 30,
              keyType: {
                id: 28,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "508:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "500:27:0",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 29,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "519:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            functionSelector: "2ea4a858",
            id: 35,
            mutability: "mutable",
            name: "productIdToLaunchTime",
            nameLocation: "592:21:0",
            nodeType: "VariableDeclaration",
            scope: 438,
            src: "557:56:0",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 34,
              keyType: {
                id: 32,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "565:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "557:27:0",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 33,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "576:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "public",
          },
          {
            constant: false,
            id: 37,
            mutability: "mutable",
            name: "bidNumber",
            nameLocation: "645:9:0",
            nodeType: "VariableDeclaration",
            scope: 438,
            src: "637:17:0",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 36,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "637:7:0",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 41,
            mutability: "mutable",
            name: "bidIdToProductId",
            nameLocation: "688:16:0",
            nodeType: "VariableDeclaration",
            scope: 438,
            src: "660:44:0",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 40,
              keyType: {
                id: 38,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "668:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "660:27:0",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 39,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "679:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 44,
            mutability: "mutable",
            name: "bidders",
            nameLocation: "728:7:0",
            nodeType: "VariableDeclaration",
            scope: 438,
            src: "710:25:0",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_array$_t_address_payable_$dyn_storage",
              typeString: "address payable[]",
            },
            typeName: {
              baseType: {
                id: 42,
                name: "address",
                nodeType: "ElementaryTypeName",
                src: "710:15:0",
                stateMutability: "payable",
                typeDescriptions: {
                  typeIdentifier: "t_address_payable",
                  typeString: "address payable",
                },
              },
              id: 43,
              nodeType: "ArrayTypeName",
              src: "710:17:0",
              typeDescriptions: {
                typeIdentifier: "t_array$_t_address_payable_$dyn_storage_ptr",
                typeString: "address payable[]",
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 48,
            mutability: "mutable",
            name: "bidIdToBidAmount",
            nameLocation: "769:16:0",
            nodeType: "VariableDeclaration",
            scope: 438,
            src: "741:44:0",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
              typeString: "mapping(uint256 => uint256)",
            },
            typeName: {
              id: 47,
              keyType: {
                id: 45,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "749:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "741:27:0",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                typeString: "mapping(uint256 => uint256)",
              },
              valueType: {
                id: 46,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "760:7:0",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
            },
            visibility: "internal",
          },
          {
            anonymous: false,
            id: 52,
            name: "productCreated",
            nameLocation: "812:14:0",
            nodeType: "EventDefinition",
            parameters: {
              id: 51,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 50,
                  indexed: false,
                  mutability: "mutable",
                  name: "_productId",
                  nameLocation: "835:10:0",
                  nodeType: "VariableDeclaration",
                  scope: 52,
                  src: "827:18:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 49,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "827:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "826:20:0",
            },
            src: "806:41:0",
          },
          {
            anonymous: false,
            id: 56,
            name: "saleCreated",
            nameLocation: "858:11:0",
            nodeType: "EventDefinition",
            parameters: {
              id: 55,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 54,
                  indexed: false,
                  mutability: "mutable",
                  name: "_productId",
                  nameLocation: "878:10:0",
                  nodeType: "VariableDeclaration",
                  scope: 56,
                  src: "870:18:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 53,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "870:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "869:20:0",
            },
            src: "852:38:0",
          },
          {
            anonymous: false,
            id: 62,
            name: "winnerDeclared",
            nameLocation: "901:14:0",
            nodeType: "EventDefinition",
            parameters: {
              id: 61,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 58,
                  indexed: false,
                  mutability: "mutable",
                  name: "_productId",
                  nameLocation: "924:10:0",
                  nodeType: "VariableDeclaration",
                  scope: 62,
                  src: "916:18:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 57,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "916:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 60,
                  indexed: false,
                  mutability: "mutable",
                  name: "_winner",
                  nameLocation: "944:7:0",
                  nodeType: "VariableDeclaration",
                  scope: 62,
                  src: "936:15:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 59,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "936:7:0",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "915:38:0",
            },
            src: "895:59:0",
          },
          {
            body: {
              id: 73,
              nodeType: "Block",
              src: "976:57:0",
              statements: [
                {
                  expression: {
                    id: 67,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 65,
                      name: "productNumber",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 3,
                      src: "986:13:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "30",
                      id: 66,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "1002:1:0",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "986:17:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 68,
                  nodeType: "ExpressionStatement",
                  src: "986:17:0",
                },
                {
                  expression: {
                    id: 71,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 69,
                      name: "bidNumber",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 37,
                      src: "1013:9:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "30",
                      id: 70,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "1025:1:0",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "1013:13:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 72,
                  nodeType: "ExpressionStatement",
                  src: "1013:13:0",
                },
              ],
            },
            id: 74,
            implemented: true,
            kind: "constructor",
            modifiers: [],
            name: "",
            nameLocation: "-1:-1:-1",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 63,
              nodeType: "ParameterList",
              parameters: [],
              src: "973:2:0",
            },
            returnParameters: {
              id: 64,
              nodeType: "ParameterList",
              parameters: [],
              src: "976:0:0",
            },
            scope: 438,
            src: "961:72:0",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 136,
              nodeType: "Block",
              src: "1140:498:0",
              statements: [
                {
                  expression: {
                    id: 87,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 83,
                      name: "productNumber",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 3,
                      src: "1150:13:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 86,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 84,
                        name: "productNumber",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 3,
                        src: "1166:13:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "+",
                      rightExpression: {
                        hexValue: "31",
                        id: 85,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "1182:1:0",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_1_by_1",
                          typeString: "int_const 1",
                        },
                        value: "1",
                      },
                      src: "1166:17:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "1150:33:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 88,
                  nodeType: "ExpressionStatement",
                  src: "1150:33:0",
                },
                {
                  expression: {
                    id: 93,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 89,
                        name: "productIdToName",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 7,
                        src: "1193:15:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_string_storage_$",
                          typeString: "mapping(uint256 => string storage ref)",
                        },
                      },
                      id: 91,
                      indexExpression: {
                        id: 90,
                        name: "productNumber",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 3,
                        src: "1209:13:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "1193:30:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 92,
                      name: "_name",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 76,
                      src: "1226:5:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_memory_ptr",
                        typeString: "string memory",
                      },
                    },
                    src: "1193:38:0",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage",
                      typeString: "string storage ref",
                    },
                  },
                  id: 94,
                  nodeType: "ExpressionStatement",
                  src: "1193:38:0",
                },
                {
                  expression: {
                    id: 99,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 95,
                        name: "productIdToDescription",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 11,
                        src: "1241:22:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_string_storage_$",
                          typeString: "mapping(uint256 => string storage ref)",
                        },
                      },
                      id: 97,
                      indexExpression: {
                        id: 96,
                        name: "productNumber",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 3,
                        src: "1264:13:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "1241:37:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_storage",
                        typeString: "string storage ref",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 98,
                      name: "_description",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 78,
                      src: "1281:12:0",
                      typeDescriptions: {
                        typeIdentifier: "t_string_memory_ptr",
                        typeString: "string memory",
                      },
                    },
                    src: "1241:52:0",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage",
                      typeString: "string storage ref",
                    },
                  },
                  id: 100,
                  nodeType: "ExpressionStatement",
                  src: "1241:52:0",
                },
                {
                  expression: {
                    id: 105,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 101,
                        name: "productIdToQuantity",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 15,
                        src: "1303:19:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 103,
                      indexExpression: {
                        id: 102,
                        name: "productNumber",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 3,
                        src: "1323:13:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "1303:34:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 104,
                      name: "_quantity",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 80,
                      src: "1340:9:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "1303:46:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 106,
                  nodeType: "ExpressionStatement",
                  src: "1303:46:0",
                },
                {
                  expression: {
                    id: 111,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 107,
                        name: "productIdToFloorPrice",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 27,
                        src: "1359:21:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 109,
                      indexExpression: {
                        id: 108,
                        name: "productNumber",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 3,
                        src: "1381:13:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "1359:36:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "30",
                      id: 110,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "1398:1:0",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "1359:40:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 112,
                  nodeType: "ExpressionStatement",
                  src: "1359:40:0",
                },
                {
                  expression: {
                    id: 117,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 113,
                        name: "productIdToAvailability",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 23,
                        src: "1409:23:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_bool_$",
                          typeString: "mapping(uint256 => bool)",
                        },
                      },
                      id: 115,
                      indexExpression: {
                        id: 114,
                        name: "productNumber",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 3,
                        src: "1433:13:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "1409:38:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "66616c7365",
                      id: 116,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "1450:5:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "false",
                    },
                    src: "1409:46:0",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 118,
                  nodeType: "ExpressionStatement",
                  src: "1409:46:0",
                },
                {
                  expression: {
                    id: 124,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 119,
                        name: "productIdToOwner",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 19,
                        src: "1473:16:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_address_$",
                          typeString: "mapping(uint256 => address)",
                        },
                      },
                      id: 121,
                      indexExpression: {
                        id: 120,
                        name: "productNumber",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 3,
                        src: "1490:13:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "1473:31:0",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      expression: {
                        id: 122,
                        name: "msg",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: "1507:3:0",
                        typeDescriptions: {
                          typeIdentifier: "t_magic_message",
                          typeString: "msg",
                        },
                      },
                      id: 123,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "sender",
                      nodeType: "MemberAccess",
                      src: "1507:10:0",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "1473:44:0",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 125,
                  nodeType: "ExpressionStatement",
                  src: "1473:44:0",
                },
                {
                  expression: {
                    id: 130,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 126,
                        name: "productIdToHighestBidId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 31,
                        src: "1527:23:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 128,
                      indexExpression: {
                        id: 127,
                        name: "productNumber",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 3,
                        src: "1551:13:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "1527:38:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "30",
                      id: 129,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "1568:1:0",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "1527:42:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 131,
                  nodeType: "ExpressionStatement",
                  src: "1527:42:0",
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 133,
                        name: "productNumber",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 3,
                        src: "1617:13:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 132,
                      name: "productCreated",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 52,
                      src: "1602:14:0",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 134,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1602:29:0",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 135,
                  nodeType: "EmitStatement",
                  src: "1597:34:0",
                },
              ],
            },
            functionSelector: "a1422209",
            id: 137,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "createProduct",
            nameLocation: "1051:13:0",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 81,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 76,
                  mutability: "mutable",
                  name: "_name",
                  nameLocation: "1079:5:0",
                  nodeType: "VariableDeclaration",
                  scope: 137,
                  src: "1065:19:0",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 75,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "1065:6:0",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 78,
                  mutability: "mutable",
                  name: "_description",
                  nameLocation: "1100:12:0",
                  nodeType: "VariableDeclaration",
                  scope: 137,
                  src: "1086:26:0",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 77,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "1086:6:0",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 80,
                  mutability: "mutable",
                  name: "_quantity",
                  nameLocation: "1122:9:0",
                  nodeType: "VariableDeclaration",
                  scope: 137,
                  src: "1114:17:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 79,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1114:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1064:68:0",
            },
            returnParameters: {
              id: 82,
              nodeType: "ParameterList",
              parameters: [],
              src: "1140:0:0",
            },
            scope: 438,
            src: "1042:596:0",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 164,
              nodeType: "Block",
              src: "1761:152:0",
              statements: [
                {
                  expression: {
                    components: [
                      {
                        baseExpression: {
                          id: 150,
                          name: "productIdToName",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 7,
                          src: "1779:15:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_string_storage_$",
                            typeString:
                              "mapping(uint256 => string storage ref)",
                          },
                        },
                        id: 152,
                        indexExpression: {
                          id: 151,
                          name: "_productId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 139,
                          src: "1795:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "1779:27:0",
                        typeDescriptions: {
                          typeIdentifier: "t_string_storage",
                          typeString: "string storage ref",
                        },
                      },
                      {
                        baseExpression: {
                          id: 153,
                          name: "productIdToDescription",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 11,
                          src: "1808:22:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_string_storage_$",
                            typeString:
                              "mapping(uint256 => string storage ref)",
                          },
                        },
                        id: 155,
                        indexExpression: {
                          id: 154,
                          name: "_productId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 139,
                          src: "1831:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "1808:34:0",
                        typeDescriptions: {
                          typeIdentifier: "t_string_storage",
                          typeString: "string storage ref",
                        },
                      },
                      {
                        baseExpression: {
                          id: 156,
                          name: "productIdToQuantity",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 15,
                          src: "1844:19:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_uint256_$",
                            typeString: "mapping(uint256 => uint256)",
                          },
                        },
                        id: 158,
                        indexExpression: {
                          id: 157,
                          name: "_productId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 139,
                          src: "1864:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "1844:31:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        baseExpression: {
                          id: 159,
                          name: "productIdToOwner",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 19,
                          src: "1877:16:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_address_$",
                            typeString: "mapping(uint256 => address)",
                          },
                        },
                        id: 161,
                        indexExpression: {
                          id: 160,
                          name: "_productId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 139,
                          src: "1894:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "1877:28:0",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    id: 162,
                    isConstant: false,
                    isInlineArray: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "TupleExpression",
                    src: "1778:128:0",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_address_$",
                      typeString:
                        "tuple(string storage ref,string storage ref,uint256,address)",
                    },
                  },
                  functionReturnParameters: 149,
                  id: 163,
                  nodeType: "Return",
                  src: "1771:135:0",
                },
              ],
            },
            functionSelector: "d6d0be9f",
            id: 165,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getProductData",
            nameLocation: "1656:14:0",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 140,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 139,
                  mutability: "mutable",
                  name: "_productId",
                  nameLocation: "1680:10:0",
                  nodeType: "VariableDeclaration",
                  scope: 165,
                  src: "1672:18:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 138,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1672:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1671:20:0",
            },
            returnParameters: {
              id: 149,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 142,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 165,
                  src: "1713:13:0",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 141,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "1713:6:0",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 144,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 165,
                  src: "1728:13:0",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 143,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "1728:6:0",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 146,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 165,
                  src: "1743:7:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 145,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1743:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 148,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 165,
                  src: "1752:7:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 147,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1752:7:0",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1712:48:0",
            },
            scope: 438,
            src: "1647:266:0",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 187,
              nodeType: "Block",
              src: "2012:131:0",
              statements: [
                {
                  expression: {
                    components: [
                      {
                        baseExpression: {
                          id: 176,
                          name: "productIdToAvailability",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 23,
                          src: "2030:23:0",
                          typeDescriptions: {
                            typeIdentifier: "t_mapping$_t_uint256_$_t_bool_$",
                            typeString: "mapping(uint256 => bool)",
                          },
                        },
                        id: 178,
                        indexExpression: {
                          id: 177,
                          name: "_productId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 167,
                          src: "2054:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "2030:35:0",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        baseExpression: {
                          id: 179,
                          name: "productIdToFloorPrice",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 27,
                          src: "2067:21:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_uint256_$",
                            typeString: "mapping(uint256 => uint256)",
                          },
                        },
                        id: 181,
                        indexExpression: {
                          id: 180,
                          name: "_productId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 167,
                          src: "2089:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "2067:33:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        baseExpression: {
                          id: 182,
                          name: "productIdToLaunchTime",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 35,
                          src: "2102:21:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_uint256_$",
                            typeString: "mapping(uint256 => uint256)",
                          },
                        },
                        id: 184,
                        indexExpression: {
                          id: 183,
                          name: "_productId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 167,
                          src: "2124:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "2102:33:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    id: 185,
                    isConstant: false,
                    isInlineArray: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "TupleExpression",
                    src: "2029:107:0",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                      typeString: "tuple(bool,uint256,uint256)",
                    },
                  },
                  functionReturnParameters: 175,
                  id: 186,
                  nodeType: "Return",
                  src: "2022:114:0",
                },
              ],
            },
            functionSelector: "46b217a3",
            id: 188,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getProductSaleData",
            nameLocation: "1928:18:0",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 168,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 167,
                  mutability: "mutable",
                  name: "_productId",
                  nameLocation: "1955:10:0",
                  nodeType: "VariableDeclaration",
                  scope: 188,
                  src: "1947:18:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 166,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1947:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1946:20:0",
            },
            returnParameters: {
              id: 175,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 170,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 188,
                  src: "1988:4:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                  typeName: {
                    id: 169,
                    name: "bool",
                    nodeType: "ElementaryTypeName",
                    src: "1988:4:0",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 172,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 188,
                  src: "1994:7:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 171,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1994:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 174,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 188,
                  src: "2003:7:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 173,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2003:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1987:24:0",
            },
            scope: 438,
            src: "1919:224:0",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 229,
              nodeType: "Block",
              src: "2244:315:0",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        id: 203,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 198,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: -15,
                            src: "2262:3:0",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 199,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "2262:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          baseExpression: {
                            id: 200,
                            name: "productIdToOwner",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 19,
                            src: "2276:16:0",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_address_$",
                              typeString: "mapping(uint256 => address)",
                            },
                          },
                          id: 202,
                          indexExpression: {
                            id: 201,
                            name: "_productId",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 190,
                            src: "2293:10:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "2276:28:0",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        src: "2262:42:0",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "43616c6c6572206973206e6f7420746865206f776e6572206f6620746869732070726f64756374",
                        id: 204,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "2306:41:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_50aa6cff9d546bd338c962b23782fdf234ca0d965ef76ddbe442476428950d5b",
                          typeString:
                            'literal_string "Caller is not the owner of this product"',
                        },
                        value: "Caller is not the owner of this product",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_50aa6cff9d546bd338c962b23782fdf234ca0d965ef76ddbe442476428950d5b",
                          typeString:
                            'literal_string "Caller is not the owner of this product"',
                        },
                      ],
                      id: 197,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [-18, -18],
                      referencedDeclaration: -18,
                      src: "2254:7:0",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 205,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2254:94:0",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 206,
                  nodeType: "ExpressionStatement",
                  src: "2254:94:0",
                },
                {
                  expression: {
                    id: 211,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 207,
                        name: "productIdToAvailability",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 23,
                        src: "2358:23:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_bool_$",
                          typeString: "mapping(uint256 => bool)",
                        },
                      },
                      id: 209,
                      indexExpression: {
                        id: 208,
                        name: "_productId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 190,
                        src: "2382:10:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "2358:35:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "74727565",
                      id: 210,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2396:4:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    src: "2358:42:0",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 212,
                  nodeType: "ExpressionStatement",
                  src: "2358:42:0",
                },
                {
                  expression: {
                    id: 217,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 213,
                        name: "productIdToFloorPrice",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 27,
                        src: "2410:21:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 215,
                      indexExpression: {
                        id: 214,
                        name: "_productId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 190,
                        src: "2432:10:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "2410:33:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 216,
                      name: "_floorPrice",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 192,
                      src: "2446:11:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "2410:47:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 218,
                  nodeType: "ExpressionStatement",
                  src: "2410:47:0",
                },
                {
                  expression: {
                    id: 223,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 219,
                        name: "productIdToLaunchTime",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 35,
                        src: "2467:21:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 221,
                      indexExpression: {
                        id: 220,
                        name: "_productId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 190,
                        src: "2489:10:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "2467:33:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 222,
                      name: "_launchtime",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 194,
                      src: "2503:11:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "2467:47:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 224,
                  nodeType: "ExpressionStatement",
                  src: "2467:47:0",
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 226,
                        name: "_productId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 190,
                        src: "2541:10:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 225,
                      name: "saleCreated",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 56,
                      src: "2529:11:0",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 227,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2529:23:0",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 228,
                  nodeType: "EmitStatement",
                  src: "2524:28:0",
                },
              ],
            },
            functionSelector: "8a3292b1",
            id: 230,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "putUpForSale",
            nameLocation: "2162:12:0",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 195,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 190,
                  mutability: "mutable",
                  name: "_productId",
                  nameLocation: "2183:10:0",
                  nodeType: "VariableDeclaration",
                  scope: 230,
                  src: "2175:18:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 189,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2175:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 192,
                  mutability: "mutable",
                  name: "_floorPrice",
                  nameLocation: "2203:11:0",
                  nodeType: "VariableDeclaration",
                  scope: 230,
                  src: "2195:19:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 191,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2195:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 194,
                  mutability: "mutable",
                  name: "_launchtime",
                  nameLocation: "2224:11:0",
                  nodeType: "VariableDeclaration",
                  scope: 230,
                  src: "2216:19:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 193,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2216:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2174:62:0",
            },
            returnParameters: {
              id: 196,
              nodeType: "ParameterList",
              parameters: [],
              src: "2244:0:0",
            },
            scope: 438,
            src: "2153:406:0",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 303,
              nodeType: "Block",
              src: "2617:565:0",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        id: 254,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          commonType: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          id: 247,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            commonType: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                            id: 240,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              baseExpression: {
                                id: 236,
                                name: "productIdToAvailability",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 23,
                                src: "2635:23:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_bool_$",
                                  typeString: "mapping(uint256 => bool)",
                                },
                              },
                              id: 238,
                              indexExpression: {
                                id: 237,
                                name: "_productId",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 232,
                                src: "2659:10:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "2635:35:0",
                              typeDescriptions: {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "==",
                            rightExpression: {
                              hexValue: "74727565",
                              id: 239,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "bool",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "2674:4:0",
                              typeDescriptions: {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                              value: "true",
                            },
                            src: "2635:43:0",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "&&",
                          rightExpression: {
                            commonType: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            id: 246,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              expression: {
                                id: 241,
                                name: "block",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: -4,
                                src: "2682:5:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_block",
                                  typeString: "block",
                                },
                              },
                              id: 242,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "timestamp",
                              nodeType: "MemberAccess",
                              src: "2682:15:0",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "<",
                            rightExpression: {
                              baseExpression: {
                                id: 243,
                                name: "productIdToLaunchTime",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 35,
                                src: "2700:21:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_uint256_$",
                                  typeString: "mapping(uint256 => uint256)",
                                },
                              },
                              id: 245,
                              indexExpression: {
                                id: 244,
                                name: "_productId",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 232,
                                src: "2722:10:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "2700:33:0",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            src: "2682:51:0",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          src: "2635:98:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "&&",
                        rightExpression: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 253,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              id: 248,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: -15,
                              src: "2737:3:0",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 249,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "value",
                            nodeType: "MemberAccess",
                            src: "2737:9:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: ">=",
                          rightExpression: {
                            baseExpression: {
                              id: 250,
                              name: "productIdToFloorPrice",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 27,
                              src: "2750:21:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_uint256_$_t_uint256_$",
                                typeString: "mapping(uint256 => uint256)",
                              },
                            },
                            id: 252,
                            indexExpression: {
                              id: 251,
                              name: "_productId",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 232,
                              src: "2772:10:0",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "2750:33:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "2737:46:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        src: "2635:148:0",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "5265717565737465642070726f64756374206973206e6f742074616b696e672062696473206f722062696420707269636520746f6f206c6f77",
                        id: 255,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "2786:59:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_771711b11dfcf9d8f1d47c9c29911ff6022442d835beb7a7f9e1a5695b0e64e9",
                          typeString:
                            'literal_string "Requested product is not taking bids or bid price too low"',
                        },
                        value:
                          "Requested product is not taking bids or bid price too low",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_771711b11dfcf9d8f1d47c9c29911ff6022442d835beb7a7f9e1a5695b0e64e9",
                          typeString:
                            'literal_string "Requested product is not taking bids or bid price too low"',
                        },
                      ],
                      id: 235,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [-18, -18],
                      referencedDeclaration: -18,
                      src: "2627:7:0",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 256,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2627:219:0",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 257,
                  nodeType: "ExpressionStatement",
                  src: "2627:219:0",
                },
                {
                  expression: {
                    id: 262,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 258,
                      name: "bidNumber",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 37,
                      src: "2856:9:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 261,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 259,
                        name: "bidNumber",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 37,
                        src: "2868:9:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "+",
                      rightExpression: {
                        hexValue: "31",
                        id: 260,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "2880:1:0",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_1_by_1",
                          typeString: "int_const 1",
                        },
                        value: "1",
                      },
                      src: "2868:13:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "2856:25:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 263,
                  nodeType: "ExpressionStatement",
                  src: "2856:25:0",
                },
                {
                  expression: {
                    id: 268,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 264,
                        name: "bidIdToProductId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 41,
                        src: "2891:16:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 266,
                      indexExpression: {
                        id: 265,
                        name: "bidNumber",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 37,
                        src: "2908:9:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "2891:27:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 267,
                      name: "_productId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 232,
                      src: "2921:10:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "2891:40:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 269,
                  nodeType: "ExpressionStatement",
                  src: "2891:40:0",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            expression: {
                              id: 275,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: -15,
                              src: "2962:3:0",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 276,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "sender",
                            nodeType: "MemberAccess",
                            src: "2962:10:0",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 274,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "2954:8:0",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_payable_$",
                            typeString: "type(address payable)",
                          },
                          typeName: {
                            id: 273,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "2954:8:0",
                            stateMutability: "payable",
                            typeDescriptions: {},
                          },
                        },
                        id: 277,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "2954:19:0",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      ],
                      expression: {
                        id: 270,
                        name: "bidders",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44,
                        src: "2941:7:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_address_payable_$dyn_storage",
                          typeString: "address payable[] storage ref",
                        },
                      },
                      id: 272,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "push",
                      nodeType: "MemberAccess",
                      src: "2941:12:0",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                        typeString:
                          "function (address payable[] storage pointer,address payable)",
                      },
                    },
                    id: 278,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2941:33:0",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 279,
                  nodeType: "ExpressionStatement",
                  src: "2941:33:0",
                },
                {
                  expression: {
                    id: 285,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 280,
                        name: "bidIdToBidAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 48,
                        src: "2984:16:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 282,
                      indexExpression: {
                        id: 281,
                        name: "bidNumber",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 37,
                        src: "3001:9:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "2984:27:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      expression: {
                        id: 283,
                        name: "msg",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: "3014:3:0",
                        typeDescriptions: {
                          typeIdentifier: "t_magic_message",
                          typeString: "msg",
                        },
                      },
                      id: 284,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "value",
                      nodeType: "MemberAccess",
                      src: "3014:9:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "2984:39:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 286,
                  nodeType: "ExpressionStatement",
                  src: "2984:39:0",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 294,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 287,
                        name: "msg",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: -15,
                        src: "3037:3:0",
                        typeDescriptions: {
                          typeIdentifier: "t_magic_message",
                          typeString: "msg",
                        },
                      },
                      id: 288,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "value",
                      nodeType: "MemberAccess",
                      src: "3037:9:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">",
                    rightExpression: {
                      baseExpression: {
                        id: 289,
                        name: "bidIdToBidAmount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 48,
                        src: "3049:16:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 293,
                      indexExpression: {
                        baseExpression: {
                          id: 290,
                          name: "productIdToHighestBidId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 31,
                          src: "3066:23:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_uint256_$",
                            typeString: "mapping(uint256 => uint256)",
                          },
                        },
                        id: 292,
                        indexExpression: {
                          id: 291,
                          name: "_productId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 232,
                          src: "3090:10:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "3066:35:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "3049:53:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "3037:65:0",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 302,
                  nodeType: "IfStatement",
                  src: "3033:143:0",
                  trueBody: {
                    id: 301,
                    nodeType: "Block",
                    src: "3104:72:0",
                    statements: [
                      {
                        expression: {
                          id: 299,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftHandSide: {
                            baseExpression: {
                              id: 295,
                              name: "productIdToHighestBidId",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 31,
                              src: "3118:23:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_uint256_$_t_uint256_$",
                                typeString: "mapping(uint256 => uint256)",
                              },
                            },
                            id: 297,
                            indexExpression: {
                              id: 296,
                              name: "_productId",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 232,
                              src: "3142:10:0",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: true,
                            nodeType: "IndexAccess",
                            src: "3118:35:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "Assignment",
                          operator: "=",
                          rightHandSide: {
                            id: 298,
                            name: "bidNumber",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 37,
                            src: "3156:9:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "3118:47:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 300,
                        nodeType: "ExpressionStatement",
                        src: "3118:47:0",
                      },
                    ],
                  },
                },
              ],
            },
            functionSelector: "9979ef45",
            id: 304,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "placeBid",
            nameLocation: "2574:8:0",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 233,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 232,
                  mutability: "mutable",
                  name: "_productId",
                  nameLocation: "2591:10:0",
                  nodeType: "VariableDeclaration",
                  scope: 304,
                  src: "2583:18:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 231,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2583:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2582:20:0",
            },
            returnParameters: {
              id: 234,
              nodeType: "ParameterList",
              parameters: [],
              src: "2617:0:0",
            },
            scope: 438,
            src: "2565:617:0",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 436,
              nodeType: "Block",
              src: "3243:974:0",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        id: 330,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          commonType: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          id: 323,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            commonType: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                            id: 315,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              baseExpression: {
                                id: 310,
                                name: "productIdToOwner",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 19,
                                src: "3261:16:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_address_$",
                                  typeString: "mapping(uint256 => address)",
                                },
                              },
                              id: 312,
                              indexExpression: {
                                id: 311,
                                name: "_productId",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 306,
                                src: "3278:10:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "3261:28:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "==",
                            rightExpression: {
                              expression: {
                                id: 313,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: -15,
                                src: "3293:3:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 314,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "3293:10:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            src: "3261:42:0",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "&&",
                          rightExpression: {
                            commonType: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            id: 322,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              baseExpression: {
                                id: 316,
                                name: "bidIdToBidAmount",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 48,
                                src: "3307:16:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_uint256_$",
                                  typeString: "mapping(uint256 => uint256)",
                                },
                              },
                              id: 320,
                              indexExpression: {
                                baseExpression: {
                                  id: 317,
                                  name: "productIdToHighestBidId",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 31,
                                  src: "3324:23:0",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_mapping$_t_uint256_$_t_uint256_$",
                                    typeString: "mapping(uint256 => uint256)",
                                  },
                                },
                                id: 319,
                                indexExpression: {
                                  id: 318,
                                  name: "_productId",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 306,
                                  src: "3348:10:0",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "3324:35:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "3307:53:0",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: ">",
                            rightExpression: {
                              hexValue: "30",
                              id: 321,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "number",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "3363:1:0",
                              typeDescriptions: {
                                typeIdentifier: "t_rational_0_by_1",
                                typeString: "int_const 0",
                              },
                              value: "0",
                            },
                            src: "3307:57:0",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          src: "3261:103:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "&&",
                        rightExpression: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 329,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              id: 324,
                              name: "block",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: -4,
                              src: "3368:5:0",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_block",
                                typeString: "block",
                              },
                            },
                            id: 325,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "timestamp",
                            nodeType: "MemberAccess",
                            src: "3368:15:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: ">",
                          rightExpression: {
                            baseExpression: {
                              id: 326,
                              name: "productIdToLaunchTime",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 35,
                              src: "3386:21:0",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_mapping$_t_uint256_$_t_uint256_$",
                                typeString: "mapping(uint256 => uint256)",
                              },
                            },
                            id: 328,
                            indexExpression: {
                              id: 327,
                              name: "_productId",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 306,
                              src: "3408:10:0",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "3386:33:0",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "3368:51:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        src: "3261:158:0",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "43616c6c6572206973206e6f7420746865206f776e6572206f6620746869732070726f64756374",
                        id: 331,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "3421:41:0",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_50aa6cff9d546bd338c962b23782fdf234ca0d965ef76ddbe442476428950d5b",
                          typeString:
                            'literal_string "Caller is not the owner of this product"',
                        },
                        value: "Caller is not the owner of this product",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_50aa6cff9d546bd338c962b23782fdf234ca0d965ef76ddbe442476428950d5b",
                          typeString:
                            'literal_string "Caller is not the owner of this product"',
                        },
                      ],
                      id: 309,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [-18, -18],
                      referencedDeclaration: -18,
                      src: "3253:7:0",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 332,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3253:210:0",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 333,
                  nodeType: "ExpressionStatement",
                  src: "3253:210:0",
                },
                {
                  assignments: [335],
                  declarations: [
                    {
                      constant: false,
                      id: 335,
                      mutability: "mutable",
                      name: "winnerBidId",
                      nameLocation: "3481:11:0",
                      nodeType: "VariableDeclaration",
                      scope: 436,
                      src: "3473:19:0",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 334,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "3473:7:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 339,
                  initialValue: {
                    baseExpression: {
                      id: 336,
                      name: "productIdToHighestBidId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 31,
                      src: "3495:23:0",
                      typeDescriptions: {
                        typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                        typeString: "mapping(uint256 => uint256)",
                      },
                    },
                    id: 338,
                    indexExpression: {
                      id: 337,
                      name: "_productId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 306,
                      src: "3519:10:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "3495:35:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3473:57:0",
                },
                {
                  assignments: [341],
                  declarations: [
                    {
                      constant: false,
                      id: 341,
                      mutability: "mutable",
                      name: "winner",
                      nameLocation: "3548:6:0",
                      nodeType: "VariableDeclaration",
                      scope: 436,
                      src: "3540:14:0",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                      typeName: {
                        id: 340,
                        name: "address",
                        nodeType: "ElementaryTypeName",
                        src: "3540:7:0",
                        stateMutability: "nonpayable",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 347,
                  initialValue: {
                    baseExpression: {
                      id: 342,
                      name: "bidders",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 44,
                      src: "3557:7:0",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_address_payable_$dyn_storage",
                        typeString: "address payable[] storage ref",
                      },
                    },
                    id: 346,
                    indexExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 345,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 343,
                        name: "winnerBidId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 335,
                        src: "3565:11:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "-",
                      rightExpression: {
                        hexValue: "31",
                        id: 344,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "3579:1:0",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_1_by_1",
                          typeString: "int_const 1",
                        },
                        value: "1",
                      },
                      src: "3565:15:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "3557:24:0",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3540:41:0",
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 349,
                        name: "_productId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 306,
                        src: "3611:10:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 350,
                        name: "winner",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 341,
                        src: "3623:6:0",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 348,
                      name: "winnerDeclared",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 62,
                      src: "3596:14:0",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        typeString: "function (uint256,address)",
                      },
                    },
                    id: 351,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3596:34:0",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 352,
                  nodeType: "EmitStatement",
                  src: "3591:39:0",
                },
                {
                  assignments: [354],
                  declarations: [
                    {
                      constant: false,
                      id: 354,
                      mutability: "mutable",
                      name: "owner",
                      nameLocation: "3656:5:0",
                      nodeType: "VariableDeclaration",
                      scope: 436,
                      src: "3640:21:0",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                      typeName: {
                        id: 353,
                        name: "address",
                        nodeType: "ElementaryTypeName",
                        src: "3640:15:0",
                        stateMutability: "payable",
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 360,
                  initialValue: {
                    arguments: [
                      {
                        expression: {
                          id: 357,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: "3672:3:0",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 358,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "3672:10:0",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      id: 356,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "ElementaryTypeNameExpression",
                      src: "3664:8:0",
                      typeDescriptions: {
                        typeIdentifier: "t_type$_t_address_payable_$",
                        typeString: "type(address payable)",
                      },
                      typeName: {
                        id: 355,
                        name: "address",
                        nodeType: "ElementaryTypeName",
                        src: "3664:8:0",
                        stateMutability: "payable",
                        typeDescriptions: {},
                      },
                    },
                    id: 359,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "typeConversion",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3664:19:0",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3640:43:0",
                },
                {
                  expression: {
                    arguments: [
                      {
                        baseExpression: {
                          id: 364,
                          name: "bidIdToBidAmount",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 48,
                          src: "3709:16:0",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_uint256_$",
                            typeString: "mapping(uint256 => uint256)",
                          },
                        },
                        id: 366,
                        indexExpression: {
                          id: 365,
                          name: "winnerBidId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 335,
                          src: "3726:11:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "3709:29:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 361,
                        name: "owner",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 354,
                        src: "3694:5:0",
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 363,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "3694:14:0",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 367,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3694:45:0",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 368,
                  nodeType: "ExpressionStatement",
                  src: "3694:45:0",
                },
                {
                  body: {
                    id: 410,
                    nodeType: "Block",
                    src: "3790:215:0",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          id: 391,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            commonType: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            id: 383,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              baseExpression: {
                                id: 379,
                                name: "bidIdToProductId",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 41,
                                src: "3808:16:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_uint256_$",
                                  typeString: "mapping(uint256 => uint256)",
                                },
                              },
                              id: 381,
                              indexExpression: {
                                id: 380,
                                name: "i",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 370,
                                src: "3825:1:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "3808:19:0",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "==",
                            rightExpression: {
                              id: 382,
                              name: "_productId",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 306,
                              src: "3831:10:0",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            src: "3808:33:0",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "&&",
                          rightExpression: {
                            commonType: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                            id: 390,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            leftExpression: {
                              baseExpression: {
                                id: 384,
                                name: "bidders",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 44,
                                src: "3845:7:0",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_array$_t_address_payable_$dyn_storage",
                                  typeString: "address payable[] storage ref",
                                },
                              },
                              id: 388,
                              indexExpression: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 387,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 385,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 370,
                                  src: "3853:1:0",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "-",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 386,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "3855:1:0",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "3853:3:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "3845:12:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address_payable",
                                typeString: "address payable",
                              },
                            },
                            nodeType: "BinaryOperation",
                            operator: "!=",
                            rightExpression: {
                              id: 389,
                              name: "winner",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 341,
                              src: "3861:6:0",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            src: "3845:22:0",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          src: "3808:59:0",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 409,
                        nodeType: "IfStatement",
                        src: "3804:191:0",
                        trueBody: {
                          id: 408,
                          nodeType: "Block",
                          src: "3869:126:0",
                          statements: [
                            {
                              assignments: [393],
                              declarations: [
                                {
                                  constant: false,
                                  id: 393,
                                  mutability: "mutable",
                                  name: "bidder",
                                  nameLocation: "3903:6:0",
                                  nodeType: "VariableDeclaration",
                                  scope: 408,
                                  src: "3887:22:0",
                                  stateVariable: false,
                                  storageLocation: "default",
                                  typeDescriptions: {
                                    typeIdentifier: "t_address_payable",
                                    typeString: "address payable",
                                  },
                                  typeName: {
                                    id: 392,
                                    name: "address",
                                    nodeType: "ElementaryTypeName",
                                    src: "3887:15:0",
                                    stateMutability: "payable",
                                    typeDescriptions: {
                                      typeIdentifier: "t_address_payable",
                                      typeString: "address payable",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              id: 399,
                              initialValue: {
                                baseExpression: {
                                  id: 394,
                                  name: "bidders",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 44,
                                  src: "3912:7:0",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_array$_t_address_payable_$dyn_storage",
                                    typeString: "address payable[] storage ref",
                                  },
                                },
                                id: 398,
                                indexExpression: {
                                  commonType: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  id: 397,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  leftExpression: {
                                    id: 395,
                                    name: "i",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 370,
                                    src: "3920:1:0",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  nodeType: "BinaryOperation",
                                  operator: "-",
                                  rightExpression: {
                                    hexValue: "31",
                                    id: 396,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: true,
                                    kind: "number",
                                    lValueRequested: false,
                                    nodeType: "Literal",
                                    src: "3924:1:0",
                                    typeDescriptions: {
                                      typeIdentifier: "t_rational_1_by_1",
                                      typeString: "int_const 1",
                                    },
                                    value: "1",
                                  },
                                  src: "3920:5:0",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "3912:14:0",
                                typeDescriptions: {
                                  typeIdentifier: "t_address_payable",
                                  typeString: "address payable",
                                },
                              },
                              nodeType: "VariableDeclarationStatement",
                              src: "3887:39:0",
                            },
                            {
                              expression: {
                                arguments: [
                                  {
                                    baseExpression: {
                                      id: 403,
                                      name: "bidIdToBidAmount",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 48,
                                      src: "3960:16:0",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_mapping$_t_uint256_$_t_uint256_$",
                                        typeString:
                                          "mapping(uint256 => uint256)",
                                      },
                                    },
                                    id: 405,
                                    indexExpression: {
                                      id: 404,
                                      name: "i",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 370,
                                      src: "3977:1:0",
                                      typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                      },
                                    },
                                    isConstant: false,
                                    isLValue: true,
                                    isPure: false,
                                    lValueRequested: false,
                                    nodeType: "IndexAccess",
                                    src: "3960:19:0",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  ],
                                  expression: {
                                    id: 400,
                                    name: "bidder",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 393,
                                    src: "3944:6:0",
                                    typeDescriptions: {
                                      typeIdentifier: "t_address_payable",
                                      typeString: "address payable",
                                    },
                                  },
                                  id: 402,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "transfer",
                                  nodeType: "MemberAccess",
                                  src: "3944:15:0",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    typeString: "function (uint256)",
                                  },
                                },
                                id: 406,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                names: [],
                                nodeType: "FunctionCall",
                                src: "3944:36:0",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 407,
                              nodeType: "ExpressionStatement",
                              src: "3944:36:0",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 375,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 373,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 370,
                      src: "3769:1:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<=",
                    rightExpression: {
                      id: 374,
                      name: "bidNumber",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 37,
                      src: "3774:9:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "3769:14:0",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 411,
                  initializationExpression: {
                    assignments: [370],
                    declarations: [
                      {
                        constant: false,
                        id: 370,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "3762:1:0",
                        nodeType: "VariableDeclaration",
                        scope: 411,
                        src: "3754:9:0",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 369,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "3754:7:0",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 372,
                    initialValue: {
                      hexValue: "31",
                      id: 371,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "3766:1:0",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_1_by_1",
                        typeString: "int_const 1",
                      },
                      value: "1",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "3754:13:0",
                  },
                  loopExpression: {
                    expression: {
                      id: 377,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "3785:3:0",
                      subExpression: {
                        id: 376,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 370,
                        src: "3785:1:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 378,
                    nodeType: "ExpressionStatement",
                    src: "3785:3:0",
                  },
                  nodeType: "ForStatement",
                  src: "3749:256:0",
                },
                {
                  expression: {
                    id: 416,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 412,
                        name: "productIdToFloorPrice",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 27,
                        src: "4015:21:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 414,
                      indexExpression: {
                        id: 413,
                        name: "_productId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 306,
                        src: "4037:10:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "4015:33:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "30",
                      id: 415,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4051:1:0",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "4015:37:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 417,
                  nodeType: "ExpressionStatement",
                  src: "4015:37:0",
                },
                {
                  expression: {
                    id: 422,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 418,
                        name: "productIdToAvailability",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 23,
                        src: "4062:23:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_bool_$",
                          typeString: "mapping(uint256 => bool)",
                        },
                      },
                      id: 420,
                      indexExpression: {
                        id: 419,
                        name: "_productId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 306,
                        src: "4086:10:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "4062:35:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "66616c7365",
                      id: 421,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4100:5:0",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "false",
                    },
                    src: "4062:43:0",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 423,
                  nodeType: "ExpressionStatement",
                  src: "4062:43:0",
                },
                {
                  expression: {
                    id: 428,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 424,
                        name: "productIdToOwner",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 19,
                        src: "4123:16:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_address_$",
                          typeString: "mapping(uint256 => address)",
                        },
                      },
                      id: 426,
                      indexExpression: {
                        id: 425,
                        name: "_productId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 306,
                        src: "4140:10:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "4123:28:0",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 427,
                      name: "winner",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 341,
                      src: "4154:6:0",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "4123:37:0",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  id: 429,
                  nodeType: "ExpressionStatement",
                  src: "4123:37:0",
                },
                {
                  expression: {
                    id: 434,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 430,
                        name: "productIdToHighestBidId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 31,
                        src: "4170:23:0",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_uint256_$_t_uint256_$",
                          typeString: "mapping(uint256 => uint256)",
                        },
                      },
                      id: 432,
                      indexExpression: {
                        id: 431,
                        name: "_productId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 306,
                        src: "4194:10:0",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "4170:35:0",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "30",
                      id: 433,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4208:1:0",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "4170:39:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 435,
                  nodeType: "ExpressionStatement",
                  src: "4170:39:0",
                },
              ],
            },
            functionSelector: "f6a89810",
            id: 437,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "closeBid",
            nameLocation: "3200:8:0",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 307,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 306,
                  mutability: "mutable",
                  name: "_productId",
                  nameLocation: "3217:10:0",
                  nodeType: "VariableDeclaration",
                  scope: 437,
                  src: "3209:18:0",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 305,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3209:7:0",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3208:20:0",
            },
            returnParameters: {
              id: 308,
              nodeType: "ParameterList",
              parameters: [],
              src: "3243:0:0",
            },
            scope: 438,
            src: "3191:1026:0",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
        ],
        scope: 439,
        src: "56:4164:0",
        usedErrors: [],
      },
    ],
    src: "32:4188:0",
  },
  bytecode:
    "608060405234801561001057600080fd5b506000808055600955610ead806100286000396000f3fe6080604052600436106100dd5760003560e01c8063a14222091161007f578063d6d0be9f11610059578063d6d0be9f146102ba578063f4aed6ef146102ea578063f6a898101461032a578063fcfe80761461033d57600080fd5b8063a14222091461024d578063b3302c021461026d578063c3d100141461028d57600080fd5b80635034735d116100bb5780635034735d146101d55780638a3292b1146101eb5780639979ef451461020d5780639ac6ed1f1461022057600080fd5b806328b5ad4b146100e25780632ea4a8581461013557806346b217a314610170575b600080fd5b3480156100ee57600080fd5b506101186100fd366004610b7c565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014157600080fd5b50610162610150366004610b7c565b60086020526000908152604090205481565b60405190815260200161012c565b34801561017c57600080fd5b506101b861018b366004610b7c565b6000818152600560209081526040808320546006835281842054600890935292205460ff90921693909250565b60408051931515845260208401929092529082015260600161012c565b3480156101e157600080fd5b5061016260005481565b3480156101f757600080fd5b5061020b610206366004610b95565b61036a565b005b61020b61021b366004610b7c565b610410565b34801561022c57600080fd5b5061024061023b366004610b7c565b61056f565b60405161012c9190610c0e565b34801561025957600080fd5b5061020b610268366004610ccb565b610609565b34801561027957600080fd5b50610240610288366004610b7c565b6106e9565b34801561029957600080fd5b506101626102a8366004610b7c565b60036020526000908152604090205481565b3480156102c657600080fd5b506102da6102d5366004610b7c565b610702565b60405161012c9493929190610d38565b3480156102f657600080fd5b5061031a610305366004610b7c565b60056020526000908152604090205460ff1681565b604051901515815260200161012c565b61020b610338366004610b7c565b61086b565b34801561034957600080fd5b50610162610358366004610b7c565b60066020526000908152604090205481565b6000838152600460205260409020546001600160a01b031633146103a95760405162461bcd60e51b81526004016103a090610d7f565b60405180910390fd5b6000838152600560209081526040808320805460ff1916600117905560068252808320859055600882529182902083905590518481527f026fd32143a7fa27bd01f8308942378e76c81185c2979c6bbe1aebf9a59bd86191015b60405180910390a1505050565b60008181526005602052604090205460ff1615156001148015610440575060008181526008602052604090205442105b801561045a57506000818152600660205260409020543410155b6104cc5760405162461bcd60e51b815260206004820152603960248201527f5265717565737465642070726f64756374206973206e6f742074616b696e672060448201527f62696473206f722062696420707269636520746f6f206c6f770000000000000060648201526084016103a0565b6009546104da906001610ddc565b60098181556000918252600a60209081526040808420859055600b8054600181019091557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b0319163317905591548352600c8082528284203490819055858552600783528385205485529152912054101561056c576009546000828152600760205260409020555b50565b6002602052600090815260409020805461058890610df4565b80601f01602080910402602001604051908101604052809291908181526020018280546105b490610df4565b80156106015780601f106105d657610100808354040283529160200191610601565b820191906000526020600020905b8154815290600101906020018083116105e457829003601f168201915b505050505081565b600054610617906001610ddc565b6000818155908152600160209081526040909120845161063992860190610ae3565b50600080548152600260209081526040909120835161065a92850190610ae3565b5060008054815260036020908152604080832084905582548352600682528083208390558254835260058252808320805460ff19169055825483526004825280832080546001600160a01b031916331790558254835260078252808320839055915491519182527f20c578752af1d484981236c2162b1209554dcd31e8144357a880d134c99643ae9101610403565b6001602052600090815260409020805461058890610df4565b600081815260016020908152604080832060028352818420600384528285205460049094529184205481546060958695909485949390926001600160a01b0390911690849061075090610df4565b80601f016020809104026020016040519081016040528092919081815260200182805461077c90610df4565b80156107c95780601f1061079e576101008083540402835291602001916107c9565b820191906000526020600020905b8154815290600101906020018083116107ac57829003601f168201915b505050505093508280546107dc90610df4565b80601f016020809104026020016040519081016040528092919081815260200182805461080890610df4565b80156108555780601f1061082a57610100808354040283529160200191610855565b820191906000526020600020905b81548152906001019060200180831161083857829003601f168201915b5050505050925093509350935093509193509193565b6000818152600460205260409020546001600160a01b0316331480156108ab57506000818152600760209081526040808320548352600c90915290205415155b80156108c4575060008181526008602052604090205442115b6108e05760405162461bcd60e51b81526004016103a090610d7f565b60008181526007602052604081205490600b6108fd600184610e2f565b8154811061090d5761090d610e46565b60009182526020918290200154604080518681526001600160a01b039092169282018390529192507f973f33de850171ef71730e5289657abafc3d4a1ba7971acfee9014227f8c9404910160405180910390a16000828152600c60205260408082205490513392839280156108fc02929091818181858888f1935050505015801561099c573d6000803e3d6000fd5b5060015b6009548111610a8b576000818152600a602052604090205485148015610a0057506001600160a01b038316600b6109d8600184610e2f565b815481106109e8576109e8610e46565b6000918252602090912001546001600160a01b031614155b15610a79576000600b610a14600184610e2f565b81548110610a2457610a24610e46565b6000918252602080832090910154848352600c90915260408083205490516001600160a01b039092169350839281156108fc029290818181858888f19350505050158015610a76573d6000803e3d6000fd5b50505b80610a8381610e5c565b9150506109a0565b5050600092835260066020908152604080852085905560058252808520805460ff191690556004825280852080546001600160a01b0319166001600160a01b0394909416939093179092556007905282209190915550565b828054610aef90610df4565b90600052602060002090601f016020900481019282610b115760008555610b57565b82601f10610b2a57805160ff1916838001178555610b57565b82800160010185558215610b57579182015b82811115610b57578251825591602001919060010190610b3c565b50610b63929150610b67565b5090565b5b80821115610b635760008155600101610b68565b600060208284031215610b8e57600080fd5b5035919050565b600080600060608486031215610baa57600080fd5b505081359360208301359350604090920135919050565b6000815180845260005b81811015610be757602081850181015186830182015201610bcb565b81811115610bf9576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c216020830184610bc1565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c4f57600080fd5b813567ffffffffffffffff80821115610c6a57610c6a610c28565b604051601f8301601f19908116603f01168101908282118183101715610c9257610c92610c28565b81604052838152866020858801011115610cab57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610ce057600080fd5b833567ffffffffffffffff80821115610cf857600080fd5b610d0487838801610c3e565b94506020860135915080821115610d1a57600080fd5b50610d2786828701610c3e565b925050604084013590509250925092565b608081526000610d4b6080830187610bc1565b8281036020840152610d5d8187610bc1565b604084019590955250506001600160a01b039190911660609091015292915050565b60208082526027908201527f43616c6c6572206973206e6f7420746865206f776e6572206f662074686973206040820152661c1c9bd91d58dd60ca1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610def57610def610dc6565b500190565b600181811c90821680610e0857607f821691505b60208210811415610e2957634e487b7160e01b600052602260045260246000fd5b50919050565b600082821015610e4157610e41610dc6565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610e7057610e70610dc6565b506001019056fea264697066735822122048936a9c0c1953ea3ee3ef361f1cddd9098e89a5f10c3dd926e5fc2958a13d1e64736f6c634300080a0033",
  bytecodeSha1: "6d2674112fe818eae2344fccbeff169e99b3e8b8",
  compiler: {
    evm_version: "istanbul",
    optimizer: {
      enabled: true,
      runs: 200,
    },
    version: "0.8.10+commit.fc410830",
  },
  contractName: "MarketPlace",
  coverageMap: {
    branches: {
      0: {
        "MarketPlace.closeBid": {
          35: [3261, 3303, false],
          36: [3307, 3364, false],
          37: [3368, 3419, true],
          38: [3808, 3841, false],
          39: [3845, 3867, false],
        },
        "MarketPlace.placeBid": {
          32: [2635, 2678, false],
          33: [2682, 2733, false],
          34: [2737, 2783, true],
        },
        "MarketPlace.putUpForSale": {
          31: [2262, 2304, true],
        },
      },
    },
    statements: {
      0: {
        "MarketPlace.closeBid": {
          22: [3253, 3463],
          23: [3591, 3630],
          24: [3694, 3739],
          25: [3944, 3980],
          26: [3785, 3788],
          27: [4015, 4052],
          28: [4062, 4105],
          29: [4123, 4160],
          30: [4170, 4209],
        },
        "MarketPlace.createProduct": {
          12: [1150, 1183],
          13: [1193, 1231],
          14: [1241, 1293],
          15: [1303, 1349],
          16: [1359, 1399],
          17: [1409, 1455],
          18: [1473, 1517],
          19: [1527, 1569],
          20: [1597, 1631],
        },
        "MarketPlace.getProductData": {
          21: [1771, 1906],
        },
        "MarketPlace.getProductSaleData": {
          0: [2022, 2136],
        },
        "MarketPlace.placeBid": {
          6: [2627, 2846],
          7: [2856, 2881],
          8: [2891, 2931],
          9: [2941, 2974],
          10: [2984, 3023],
          11: [3118, 3165],
        },
        "MarketPlace.putUpForSale": {
          1: [2254, 2348],
          2: [2358, 2400],
          3: [2410, 2457],
          4: [2467, 2514],
          5: [2524, 2552],
        },
      },
    },
  },
  dependencies: [],
  deployedBytecode:
    "6080604052600436106100dd5760003560e01c8063a14222091161007f578063d6d0be9f11610059578063d6d0be9f146102ba578063f4aed6ef146102ea578063f6a898101461032a578063fcfe80761461033d57600080fd5b8063a14222091461024d578063b3302c021461026d578063c3d100141461028d57600080fd5b80635034735d116100bb5780635034735d146101d55780638a3292b1146101eb5780639979ef451461020d5780639ac6ed1f1461022057600080fd5b806328b5ad4b146100e25780632ea4a8581461013557806346b217a314610170575b600080fd5b3480156100ee57600080fd5b506101186100fd366004610b7c565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014157600080fd5b50610162610150366004610b7c565b60086020526000908152604090205481565b60405190815260200161012c565b34801561017c57600080fd5b506101b861018b366004610b7c565b6000818152600560209081526040808320546006835281842054600890935292205460ff90921693909250565b60408051931515845260208401929092529082015260600161012c565b3480156101e157600080fd5b5061016260005481565b3480156101f757600080fd5b5061020b610206366004610b95565b61036a565b005b61020b61021b366004610b7c565b610410565b34801561022c57600080fd5b5061024061023b366004610b7c565b61056f565b60405161012c9190610c0e565b34801561025957600080fd5b5061020b610268366004610ccb565b610609565b34801561027957600080fd5b50610240610288366004610b7c565b6106e9565b34801561029957600080fd5b506101626102a8366004610b7c565b60036020526000908152604090205481565b3480156102c657600080fd5b506102da6102d5366004610b7c565b610702565b60405161012c9493929190610d38565b3480156102f657600080fd5b5061031a610305366004610b7c565b60056020526000908152604090205460ff1681565b604051901515815260200161012c565b61020b610338366004610b7c565b61086b565b34801561034957600080fd5b50610162610358366004610b7c565b60066020526000908152604090205481565b6000838152600460205260409020546001600160a01b031633146103a95760405162461bcd60e51b81526004016103a090610d7f565b60405180910390fd5b6000838152600560209081526040808320805460ff1916600117905560068252808320859055600882529182902083905590518481527f026fd32143a7fa27bd01f8308942378e76c81185c2979c6bbe1aebf9a59bd86191015b60405180910390a1505050565b60008181526005602052604090205460ff1615156001148015610440575060008181526008602052604090205442105b801561045a57506000818152600660205260409020543410155b6104cc5760405162461bcd60e51b815260206004820152603960248201527f5265717565737465642070726f64756374206973206e6f742074616b696e672060448201527f62696473206f722062696420707269636520746f6f206c6f770000000000000060648201526084016103a0565b6009546104da906001610ddc565b60098181556000918252600a60209081526040808420859055600b8054600181019091557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b0319163317905591548352600c8082528284203490819055858552600783528385205485529152912054101561056c576009546000828152600760205260409020555b50565b6002602052600090815260409020805461058890610df4565b80601f01602080910402602001604051908101604052809291908181526020018280546105b490610df4565b80156106015780601f106105d657610100808354040283529160200191610601565b820191906000526020600020905b8154815290600101906020018083116105e457829003601f168201915b505050505081565b600054610617906001610ddc565b6000818155908152600160209081526040909120845161063992860190610ae3565b50600080548152600260209081526040909120835161065a92850190610ae3565b5060008054815260036020908152604080832084905582548352600682528083208390558254835260058252808320805460ff19169055825483526004825280832080546001600160a01b031916331790558254835260078252808320839055915491519182527f20c578752af1d484981236c2162b1209554dcd31e8144357a880d134c99643ae9101610403565b6001602052600090815260409020805461058890610df4565b600081815260016020908152604080832060028352818420600384528285205460049094529184205481546060958695909485949390926001600160a01b0390911690849061075090610df4565b80601f016020809104026020016040519081016040528092919081815260200182805461077c90610df4565b80156107c95780601f1061079e576101008083540402835291602001916107c9565b820191906000526020600020905b8154815290600101906020018083116107ac57829003601f168201915b505050505093508280546107dc90610df4565b80601f016020809104026020016040519081016040528092919081815260200182805461080890610df4565b80156108555780601f1061082a57610100808354040283529160200191610855565b820191906000526020600020905b81548152906001019060200180831161083857829003601f168201915b5050505050925093509350935093509193509193565b6000818152600460205260409020546001600160a01b0316331480156108ab57506000818152600760209081526040808320548352600c90915290205415155b80156108c4575060008181526008602052604090205442115b6108e05760405162461bcd60e51b81526004016103a090610d7f565b60008181526007602052604081205490600b6108fd600184610e2f565b8154811061090d5761090d610e46565b60009182526020918290200154604080518681526001600160a01b039092169282018390529192507f973f33de850171ef71730e5289657abafc3d4a1ba7971acfee9014227f8c9404910160405180910390a16000828152600c60205260408082205490513392839280156108fc02929091818181858888f1935050505015801561099c573d6000803e3d6000fd5b5060015b6009548111610a8b576000818152600a602052604090205485148015610a0057506001600160a01b038316600b6109d8600184610e2f565b815481106109e8576109e8610e46565b6000918252602090912001546001600160a01b031614155b15610a79576000600b610a14600184610e2f565b81548110610a2457610a24610e46565b6000918252602080832090910154848352600c90915260408083205490516001600160a01b039092169350839281156108fc029290818181858888f19350505050158015610a76573d6000803e3d6000fd5b50505b80610a8381610e5c565b9150506109a0565b5050600092835260066020908152604080852085905560058252808520805460ff191690556004825280852080546001600160a01b0319166001600160a01b0394909416939093179092556007905282209190915550565b828054610aef90610df4565b90600052602060002090601f016020900481019282610b115760008555610b57565b82601f10610b2a57805160ff1916838001178555610b57565b82800160010185558215610b57579182015b82811115610b57578251825591602001919060010190610b3c565b50610b63929150610b67565b5090565b5b80821115610b635760008155600101610b68565b600060208284031215610b8e57600080fd5b5035919050565b600080600060608486031215610baa57600080fd5b505081359360208301359350604090920135919050565b6000815180845260005b81811015610be757602081850181015186830182015201610bcb565b81811115610bf9576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c216020830184610bc1565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c4f57600080fd5b813567ffffffffffffffff80821115610c6a57610c6a610c28565b604051601f8301601f19908116603f01168101908282118183101715610c9257610c92610c28565b81604052838152866020858801011115610cab57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610ce057600080fd5b833567ffffffffffffffff80821115610cf857600080fd5b610d0487838801610c3e565b94506020860135915080821115610d1a57600080fd5b50610d2786828701610c3e565b925050604084013590509250925092565b608081526000610d4b6080830187610bc1565b8281036020840152610d5d8187610bc1565b604084019590955250506001600160a01b039190911660609091015292915050565b60208082526027908201527f43616c6c6572206973206e6f7420746865206f776e6572206f662074686973206040820152661c1c9bd91d58dd60ca1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610def57610def610dc6565b500190565b600181811c90821680610e0857607f821691505b60208210811415610e2957634e487b7160e01b600052602260045260246000fd5b50919050565b600082821015610e4157610e41610dc6565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610e7057610e70610dc6565b506001019056fea264697066735822122048936a9c0c1953ea3ee3ef361f1cddd9098e89a5f10c3dd926e5fc2958a13d1e64736f6c634300080a0033",
  deployedSourceMap:
    "56:4164:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;320:51;;;;;;;;;;-1:-1:-1;320:51:0;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;320:51:0;;;;;;-1:-1:-1;;;;;363:32:1;;;345:51;;333:2;318:18;320:51:0;;;;;;;;557:56;;;;;;;;;;-1:-1:-1;557:56:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;553:25:1;;;541:2;526:18;557:56:0;407:177:1;1919:224:0;;;;;;;;;;-1:-1:-1;1919:224:0;;;;;:::i;:::-;1988:4;2030:35;;;:23;:35;;;;;;;;;2067:21;:33;;;;;;2102:21;:33;;;;;;2030:35;;;;1919:224;;;;;;;;;810:14:1;;803:22;785:41;;857:2;842:18;;835:34;;;;885:18;;;878:34;773:2;758:18;1919:224:0;589:329:1;105:28:0;;;;;;;;;;;;;;;;2153:406;;;;;;;;;;-1:-1:-1;2153:406:0;;;;;:::i;:::-;;:::i;:::-;;2565:617;;;;;;:::i;:::-;;:::i;194:56::-;;;;;;;;;;-1:-1:-1;194:56:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1042:596::-;;;;;;;;;;-1:-1:-1;1042:596:0;;;;;:::i;:::-;;:::i;139:49::-;;;;;;;;;;-1:-1:-1;139:49:0;;;;;:::i;:::-;;:::i;256:54::-;;;;;;;;;;-1:-1:-1;256:54:0;;;;;:::i;:::-;;;;;;;;;;;;;;1647:266;;;;;;;;;;-1:-1:-1;1647:266:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;377:55::-;;;;;;;;;;-1:-1:-1;377:55:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4141:14:1;;4134:22;4116:41;;4104:2;4089:18;377:55:0;3976:187:1;3191:1026:0;;;;;;:::i;:::-;;:::i;438:56::-;;;;;;;;;;-1:-1:-1;438:56:0;;;;;:::i;:::-;;;;;;;;;;;;;;2153:406;2276:28;;;;:16;:28;;;;;;-1:-1:-1;;;;;2276:28:0;2262:10;:42;2254:94;;;;-1:-1:-1;;;2254:94:0;;;;;;;:::i;:::-;;;;;;;;;2358:35;;;;:23;:35;;;;;;;;:42;;-1:-1:-1;;2358:42:0;2396:4;2358:42;;;2410:21;:33;;;;;:47;;;2467:21;:33;;;;;;:47;;;2529:23;;553:25:1;;;2529:23:0;;526:18:1;2529:23:0;;;;;;;;2153:406;;;:::o;2565:617::-;2635:35;;;;:23;:35;;;;;;;;:43;;:35;:43;:98;;;;-1:-1:-1;2700:33:0;;;;:21;:33;;;;;;2682:15;:51;2635:98;:148;;;;-1:-1:-1;2750:33:0;;;;:21;:33;;;;;;2737:9;:46;;2635:148;2627:219;;;;-1:-1:-1;;;2627:219:0;;4778:2:1;2627:219:0;;;4760:21:1;4817:2;4797:18;;;4790:30;4856:34;4836:18;;;4829:62;4927:27;4907:18;;;4900:55;4972:19;;2627:219:0;4576:421:1;2627:219:0;2868:9;;:13;;2880:1;2868:13;:::i;:::-;2856:9;:25;;;2891:27;;;;:16;:27;;;;;;;;:40;;;2941:7;:33;;;;;;;;;;;;-1:-1:-1;;;;;;2941:33:0;2962:10;2941:33;;;3001:9;;2984:27;;:16;:27;;;;;;3014:9;2984:39;;;;3066:35;;;:23;:35;;;;;;3049:53;;;;;;;-1:-1:-1;3033:143:0;;;3156:9;;3118:35;;;;:23;:35;;;;;:47;3033:143;2565:617;:::o;194:56::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1042:596::-;1166:13;;:17;;1182:1;1166:17;:::i;:::-;1150:13;:33;;;1193:30;;;:15;:30;;;;;;;;:38;;;;;;;;:::i;:::-;-1:-1:-1;1241:37:0;1264:13;;1241:37;;:22;:37;;;;;;;;:52;;;;;;;;:::i;:::-;-1:-1:-1;1303:34:0;1323:13;;1303:34;;:19;:34;;;;;;;;:46;;;1381:13;;1359:36;;:21;:36;;;;;:40;;;1433:13;;1409:38;;:23;:38;;;;;:46;;-1:-1:-1;;1409:46:0;;;1490:13;;1473:31;;:16;:31;;;;;:44;;-1:-1:-1;;;;;;1473:44:0;1507:10;1473:44;;;1551:13;;1527:38;;:23;:38;;;;;:42;;;1617:13;;1602:29;;553:25:1;;;1602:29:0;;526:18:1;1602:29:0;407:177:1;139:49:0;;;;;;;;;;;;;;;;:::i;1647:266::-;1743:7;1779:27;;;:15;:27;;;;;;;;1808:22;:34;;;;;1844:19;:31;;;;;;1877:16;:28;;;;;;;1771:135;;1713:13;;;;1743:7;;;;1779:27;1808:34;;-1:-1:-1;;;;;1877:28:0;;;;1779:27;;1771:135;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1647:266;;;;;:::o;3191:1026::-;3261:28;;;;:16;:28;;;;;;-1:-1:-1;;;;;3261:28:0;3293:10;3261:42;:103;;;;-1:-1:-1;3363:1:0;3324:35;;;:23;:35;;;;;;;;;3307:53;;:16;:53;;;;;;:57;;3261:103;:158;;;;-1:-1:-1;3386:33:0;;;;:21;:33;;;;;;3368:15;:51;3261:158;3253:210;;;;-1:-1:-1;;;3253:210:0;;;;;;;:::i;:::-;3473:19;3495:35;;;:23;:35;;;;;;;3557:7;3565:15;3579:1;3495:35;3565:15;:::i;:::-;3557:24;;;;;;;;:::i;:::-;;;;;;;;;;;;3596:34;;;6088:25:1;;;-1:-1:-1;;;;;3557:24:0;;;6129:18:1;;;6122:60;;;3557:24:0;;-1:-1:-1;3596:34:0;;6061:18:1;3596:34:0;;;;;;;3640:21;3709:29;;;:16;:29;;;;;;;3694:45;;3672:10;;;;3694:45;;;;;3709:29;;3694:45;3640:21;3694:45;3709:29;3672:10;3694:45;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3766:1:0;3749:256;3774:9;;3769:1;:14;3749:256;;3808:19;;;;:16;:19;;;;;;:33;;:59;;;;-1:-1:-1;;;;;;3845:22:0;;:7;3853:3;3855:1;3853;:3;:::i;:::-;3845:12;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3845:12:0;:22;;3808:59;3804:191;;;3887:22;3912:7;3920:5;3924:1;3920;:5;:::i;:::-;3912:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;3960:19;;;:16;:19;;;;;;;;3944:36;;-1:-1:-1;;;;;3912:14:0;;;;-1:-1:-1;3912:14:0;;3944:36;;;;;;;3912:14;3944:36;3960:19;3912:14;3944:36;;;;;;;;;;;;;;;;;;;;;3869:126;3804:191;3785:3;;;;:::i;:::-;;;;3749:256;;;-1:-1:-1;;4051:1:0;4015:33;;;:21;:33;;;;;;;;:37;;;4062:23;:35;;;;;:43;;-1:-1:-1;;4062:43:0;;;4123:16;:28;;;;;:37;;-1:-1:-1;;;;;;4123:37:0;-1:-1:-1;;;;;4123:37:0;;;;;;;;;;;4170:23;:35;;;;:39;;;;-1:-1:-1;3191:1026:0:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:1;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;923:316::-;1000:6;1008;1016;1069:2;1057:9;1048:7;1044:23;1040:32;1037:52;;;1085:1;1082;1075:12;1037:52;-1:-1:-1;;1108:23:1;;;1178:2;1163:18;;1150:32;;-1:-1:-1;1229:2:1;1214:18;;;1201:32;;923:316;-1:-1:-1;923:316:1:o;1244:472::-;1286:3;1324:5;1318:12;1351:6;1346:3;1339:19;1376:1;1386:162;1400:6;1397:1;1394:13;1386:162;;;1462:4;1518:13;;;1514:22;;1508:29;1490:11;;;1486:20;;1479:59;1415:12;1386:162;;;1566:6;1563:1;1560:13;1557:87;;;1632:1;1625:4;1616:6;1611:3;1607:16;1603:27;1596:38;1557:87;-1:-1:-1;1698:2:1;1677:15;-1:-1:-1;;1673:29:1;1664:39;;;;1705:4;1660:50;;1244:472;-1:-1:-1;;1244:472:1:o;1721:220::-;1870:2;1859:9;1852:21;1833:4;1890:45;1931:2;1920:9;1916:18;1908:6;1890:45;:::i;:::-;1882:53;1721:220;-1:-1:-1;;;1721:220:1:o;1946:127::-;2007:10;2002:3;1998:20;1995:1;1988:31;2038:4;2035:1;2028:15;2062:4;2059:1;2052:15;2078:719;2121:5;2174:3;2167:4;2159:6;2155:17;2151:27;2141:55;;2192:1;2189;2182:12;2141:55;2228:6;2215:20;2254:18;2291:2;2287;2284:10;2281:36;;;2297:18;;:::i;:::-;2372:2;2366:9;2340:2;2426:13;;-1:-1:-1;;2422:22:1;;;2446:2;2418:31;2414:40;2402:53;;;2470:18;;;2490:22;;;2467:46;2464:72;;;2516:18;;:::i;:::-;2556:10;2552:2;2545:22;2591:2;2583:6;2576:18;2637:3;2630:4;2625:2;2617:6;2613:15;2609:26;2606:35;2603:55;;;2654:1;2651;2644:12;2603:55;2718:2;2711:4;2703:6;2699:17;2692:4;2684:6;2680:17;2667:54;2765:1;2758:4;2753:2;2745:6;2741:15;2737:26;2730:37;2785:6;2776:15;;;;;;2078:719;;;;:::o;2802:611::-;2899:6;2907;2915;2968:2;2956:9;2947:7;2943:23;2939:32;2936:52;;;2984:1;2981;2974:12;2936:52;3024:9;3011:23;3053:18;3094:2;3086:6;3083:14;3080:34;;;3110:1;3107;3100:12;3080:34;3133:50;3175:7;3166:6;3155:9;3151:22;3133:50;:::i;:::-;3123:60;;3236:2;3225:9;3221:18;3208:32;3192:48;;3265:2;3255:8;3252:16;3249:36;;;3281:1;3278;3271:12;3249:36;;3304:52;3348:7;3337:8;3326:9;3322:24;3304:52;:::i;:::-;3294:62;;;3403:2;3392:9;3388:18;3375:32;3365:42;;2802:611;;;;;:::o;3418:553::-;3671:3;3660:9;3653:22;3634:4;3698:46;3739:3;3728:9;3724:19;3716:6;3698:46;:::i;:::-;3792:9;3784:6;3780:22;3775:2;3764:9;3760:18;3753:50;3820:33;3846:6;3838;3820:33;:::i;:::-;3884:2;3869:18;;3862:34;;;;-1:-1:-1;;;;;;;3932:32:1;;;;3927:2;3912:18;;;3905:60;3812:41;3418:553;-1:-1:-1;;3418:553:1:o;4168:403::-;4370:2;4352:21;;;4409:2;4389:18;;;4382:30;4448:34;4443:2;4428:18;;4421:62;-1:-1:-1;;;4514:2:1;4499:18;;4492:37;4561:3;4546:19;;4168:403::o;5002:127::-;5063:10;5058:3;5054:20;5051:1;5044:31;5094:4;5091:1;5084:15;5118:4;5115:1;5108:15;5134:128;5174:3;5205:1;5201:6;5198:1;5195:13;5192:39;;;5211:18;;:::i;:::-;-1:-1:-1;5247:9:1;;5134:128::o;5267:380::-;5346:1;5342:12;;;;5389;;;5410:61;;5464:4;5456:6;5452:17;5442:27;;5410:61;5517:2;5509:6;5506:14;5486:18;5483:38;5480:161;;;5563:10;5558:3;5554:20;5551:1;5544:31;5598:4;5595:1;5588:15;5626:4;5623:1;5616:15;5480:161;;5267:380;;;:::o;5652:125::-;5692:4;5720:1;5717;5714:8;5711:34;;;5725:18;;:::i;:::-;-1:-1:-1;5762:9:1;;5652:125::o;5782:127::-;5843:10;5838:3;5834:20;5831:1;5824:31;5874:4;5871:1;5864:15;5898:4;5895:1;5888:15;6193:135;6232:3;-1:-1:-1;;6253:17:1;;6250:43;;;6273:18;;:::i;:::-;-1:-1:-1;6320:1:1;6309:13;;6193:135::o",
  language: "Solidity",
  natspec: {
    kind: "dev",
    methods: {},
    version: 1,
  },
  offset: [56, 4220],
  opcodes:
    "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA1422209 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD6D0BE9F GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD6D0BE9F EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xF4AED6EF EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xF6A89810 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xFCFE8076 EQ PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA1422209 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xB3302C02 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xC3D10014 EQ PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5034735D GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x5034735D EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x8A3292B1 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x9979EF45 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x9AC6ED1F EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x28B5AD4B EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x2EA4A858 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x46B217A3 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x8 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x12C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20B PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x56F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD38 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31A PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST PUSH2 0x20B PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A0 SWAP1 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x8 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x26FD32143A7FA27BD01F8308942378E76C81185C2979C6BBE1AEBF9A59BD861 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x440 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT JUMPDEST DUP1 ISZERO PUSH2 0x45A JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x4CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737465642070726F64756374206973206E6F742074616B696E6720 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x62696473206F722062696420707269636520746F6F206C6F7700000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x4DA SWAP1 PUSH1 0x1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SWAP2 SLOAD DUP4 MSTORE PUSH1 0xC DUP1 DUP3 MSTORE DUP3 DUP5 KECCAK256 CALLVALUE SWAP1 DUP2 SWAP1 SSTORE DUP6 DUP6 MSTORE PUSH1 0x7 DUP4 MSTORE DUP4 DUP6 KECCAK256 SLOAD DUP6 MSTORE SWAP2 MSTORE SWAP2 KECCAK256 SLOAD LT ISZERO PUSH2 0x56C JUMPI PUSH1 0x9 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x588 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B4 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x601 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x601 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x617 SWAP1 PUSH1 0x1 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SSTORE SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP5 MLOAD PUSH2 0x639 SWAP3 DUP7 ADD SWAP1 PUSH2 0xAE3 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0x65A SWAP3 DUP6 ADD SWAP1 PUSH2 0xAE3 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE DUP3 SLOAD DUP4 MSTORE PUSH1 0x6 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE DUP3 SLOAD DUP4 MSTORE PUSH1 0x5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP3 SLOAD DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP3 SLOAD DUP4 MSTORE PUSH1 0x7 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE SWAP2 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x20C578752AF1D484981236C2162B1209554DCD31E8144357A880D134C99643AE SWAP2 ADD PUSH2 0x403 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x588 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 PUSH1 0x3 DUP5 MSTORE DUP3 DUP6 KECCAK256 SLOAD PUSH1 0x4 SWAP1 SWAP5 MSTORE SWAP2 DUP5 KECCAK256 SLOAD DUP2 SLOAD PUSH1 0x60 SWAP6 DUP7 SWAP6 SWAP1 SWAP5 DUP6 SWAP5 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 PUSH2 0x750 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77C SWAP1 PUSH2 0xDF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP DUP3 DUP1 SLOAD PUSH2 0x7DC SWAP1 PUSH2 0xDF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x808 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x855 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x855 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x838 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x8AB JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x8C4 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT JUMPDEST PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A0 SWAP1 PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0xB PUSH2 0x8FD PUSH1 0x1 DUP5 PUSH2 0xE2F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x90D JUMPI PUSH2 0x90D PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH32 0x973F33DE850171EF71730E5289657ABAFC3D4A1BA7971ACFEE9014227F8C9404 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD CALLER SWAP3 DUP4 SWAP3 DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x99C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x9 SLOAD DUP2 GT PUSH2 0xA8B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 EQ DUP1 ISZERO PUSH2 0xA00 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0xB PUSH2 0x9D8 PUSH1 0x1 DUP5 PUSH2 0xE2F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9E8 JUMPI PUSH2 0x9E8 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xA79 JUMPI PUSH1 0x0 PUSH1 0xB PUSH2 0xA14 PUSH1 0x1 DUP5 PUSH2 0xE2F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA24 JUMPI PUSH2 0xA24 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP5 DUP4 MSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP DUP4 SWAP3 DUP2 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST DUP1 PUSH2 0xA83 DUP2 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9A0 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE DUP1 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 SWAP1 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xAEF SWAP1 PUSH2 0xDF4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xB11 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xB57 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB2A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB57 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB57 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB57 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB3C JUMP JUMPDEST POP PUSH2 0xB63 SWAP3 SWAP2 POP PUSH2 0xB67 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB63 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBCB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC21 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC6A JUMPI PUSH2 0xC6A PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC92 JUMPI PUSH2 0xC92 PUSH2 0xC28 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD04 DUP8 DUP4 DUP9 ADD PUSH2 0xC3E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD27 DUP7 DUP3 DUP8 ADD PUSH2 0xC3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0xD4B PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xBC1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xD5D DUP2 DUP8 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572206F66207468697320 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x1C1C9BD91D58DD PUSH1 0xCA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEF PUSH2 0xDC6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE08 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xE29 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE41 JUMPI PUSH2 0xE41 PUSH2 0xDC6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xE70 JUMPI PUSH2 0xE70 PUSH2 0xDC6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE SWAP4 PUSH11 0x9C0C1953EA3EE3EF361F1C 0xDD 0xD9 MULMOD DUP15 DUP10 0xA5 CALL 0xC RETURNDATASIZE 0xD9 0x26 0xE5 0xFC 0x29 PC LOG1 RETURNDATASIZE 0x1E PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  pcMap: {
    0: {
      offset: [56, 4220],
      op: "PUSH1",
      path: "0",
      value: "0x80",
    },
    2: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    4: {
      fn: null,
      offset: [56, 4220],
      op: "MSTORE",
      path: "0",
    },
    5: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    7: {
      fn: null,
      offset: [56, 4220],
      op: "CALLDATASIZE",
      path: "0",
    },
    8: {
      fn: null,
      offset: [56, 4220],
      op: "LT",
      path: "0",
    },
    9: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0xDD",
    },
    12: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    13: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    15: {
      fn: null,
      offset: [56, 4220],
      op: "CALLDATALOAD",
      path: "0",
    },
    16: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH1",
      path: "0",
      value: "0xE0",
    },
    18: {
      fn: null,
      offset: [56, 4220],
      op: "SHR",
      path: "0",
    },
    19: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    20: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0xA1422209",
    },
    25: {
      fn: null,
      offset: [56, 4220],
      op: "GT",
      path: "0",
    },
    26: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x7F",
    },
    29: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    30: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    31: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0xD6D0BE9F",
    },
    36: {
      fn: null,
      offset: [56, 4220],
      op: "GT",
      path: "0",
    },
    37: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x59",
    },
    40: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    41: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    42: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0xD6D0BE9F",
    },
    47: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    48: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x2BA",
    },
    51: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    52: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    53: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0xF4AED6EF",
    },
    58: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    59: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x2EA",
    },
    62: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    63: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    64: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0xF6A89810",
    },
    69: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    70: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x32A",
    },
    73: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    74: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    75: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0xFCFE8076",
    },
    80: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    81: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x33D",
    },
    84: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    85: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    87: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    88: {
      fn: null,
      offset: [56, 4220],
      op: "REVERT",
      path: "0",
    },
    89: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPDEST",
      path: "0",
    },
    90: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    91: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0xA1422209",
    },
    96: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    97: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x24D",
    },
    100: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    101: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    102: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0xB3302C02",
    },
    107: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    108: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x26D",
    },
    111: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    112: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    113: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0xC3D10014",
    },
    118: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    119: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x28D",
    },
    122: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    123: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    125: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    126: {
      fn: null,
      offset: [56, 4220],
      op: "REVERT",
      path: "0",
    },
    127: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPDEST",
      path: "0",
    },
    128: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    129: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0x5034735D",
    },
    134: {
      fn: null,
      offset: [56, 4220],
      op: "GT",
      path: "0",
    },
    135: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0xBB",
    },
    138: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    139: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    140: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0x5034735D",
    },
    145: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    146: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x1D5",
    },
    149: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    150: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    151: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0x8A3292B1",
    },
    156: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    157: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x1EB",
    },
    160: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    161: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    162: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0x9979EF45",
    },
    167: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    168: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x20D",
    },
    171: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    172: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    173: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0x9AC6ED1F",
    },
    178: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    179: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x220",
    },
    182: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    183: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    185: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    186: {
      fn: null,
      offset: [56, 4220],
      op: "REVERT",
      path: "0",
    },
    187: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPDEST",
      path: "0",
    },
    188: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    189: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0x28B5AD4B",
    },
    194: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    195: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0xE2",
    },
    198: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    199: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    200: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0x2EA4A858",
    },
    205: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    206: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x135",
    },
    209: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    210: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    211: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH4",
      path: "0",
      value: "0x46B217A3",
    },
    216: {
      fn: null,
      offset: [56, 4220],
      op: "EQ",
      path: "0",
    },
    217: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH2",
      path: "0",
      value: "0x170",
    },
    220: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPI",
      path: "0",
    },
    221: {
      fn: null,
      offset: [56, 4220],
      op: "JUMPDEST",
      path: "0",
    },
    222: {
      fn: null,
      offset: [56, 4220],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    224: {
      fn: null,
      offset: [56, 4220],
      op: "DUP1",
      path: "0",
    },
    225: {
      first_revert: true,
      fn: null,
      offset: [56, 4220],
      op: "REVERT",
      path: "0",
    },
    226: {
      offset: [320, 371],
      op: "JUMPDEST",
      path: "0",
    },
    227: {
      fn: null,
      offset: [320, 371],
      op: "CALLVALUE",
      path: "0",
    },
    228: {
      fn: null,
      offset: [320, 371],
      op: "DUP1",
      path: "0",
    },
    229: {
      fn: null,
      offset: [320, 371],
      op: "ISZERO",
      path: "0",
    },
    230: {
      fn: null,
      offset: [320, 371],
      op: "PUSH2",
      path: "0",
      value: "0xEE",
    },
    233: {
      fn: null,
      offset: [320, 371],
      op: "JUMPI",
      path: "0",
    },
    234: {
      fn: null,
      offset: [320, 371],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    236: {
      fn: null,
      offset: [320, 371],
      op: "DUP1",
      path: "0",
    },
    237: {
      fn: null,
      offset: [320, 371],
      op: "REVERT",
      path: "0",
    },
    238: {
      fn: null,
      offset: [320, 371],
      op: "JUMPDEST",
      path: "0",
    },
    239: {
      op: "POP",
    },
    240: {
      offset: [320, 371],
      op: "PUSH2",
      path: "0",
      value: "0x118",
    },
    243: {
      fn: null,
      offset: [320, 371],
      op: "PUSH2",
      path: "0",
      value: "0xFD",
    },
    246: {
      fn: null,
      offset: [320, 371],
      op: "CALLDATASIZE",
      path: "0",
    },
    247: {
      fn: null,
      offset: [320, 371],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    249: {
      fn: null,
      offset: [320, 371],
      op: "PUSH2",
      path: "0",
      value: "0xB7C",
    },
    252: {
      fn: null,
      jump: "i",
      offset: [320, 371],
      op: "JUMP",
      path: "0",
    },
    253: {
      fn: null,
      offset: [320, 371],
      op: "JUMPDEST",
      path: "0",
    },
    254: {
      fn: null,
      offset: [320, 371],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    256: {
      fn: null,
      offset: [320, 371],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    258: {
      fn: null,
      offset: [320, 371],
      op: "MSTORE",
      path: "0",
    },
    259: {
      fn: null,
      offset: [320, 371],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    261: {
      fn: null,
      offset: [320, 371],
      op: "SWAP1",
      path: "0",
    },
    262: {
      fn: null,
      offset: [320, 371],
      op: "DUP2",
      path: "0",
    },
    263: {
      fn: null,
      offset: [320, 371],
      op: "MSTORE",
      path: "0",
    },
    264: {
      fn: null,
      offset: [320, 371],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    266: {
      fn: null,
      offset: [320, 371],
      op: "SWAP1",
      path: "0",
    },
    267: {
      fn: null,
      offset: [320, 371],
      op: "KECCAK256",
      path: "0",
    },
    268: {
      fn: null,
      offset: [320, 371],
      op: "SLOAD",
      path: "0",
    },
    269: {
      op: "PUSH1",
      value: "0x1",
    },
    271: {
      op: "PUSH1",
      value: "0x1",
    },
    273: {
      op: "PUSH1",
      value: "0xA0",
    },
    275: {
      op: "SHL",
    },
    276: {
      op: "SUB",
    },
    277: {
      offset: [320, 371],
      op: "AND",
      path: "0",
    },
    278: {
      fn: null,
      offset: [320, 371],
      op: "DUP2",
      path: "0",
    },
    279: {
      fn: null,
      offset: [320, 371],
      op: "JUMP",
      path: "0",
    },
    280: {
      fn: null,
      offset: [320, 371],
      op: "JUMPDEST",
      path: "0",
    },
    281: {
      fn: null,
      offset: [320, 371],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    283: {
      fn: null,
      offset: [320, 371],
      op: "MLOAD",
      path: "0",
    },
    284: {
      op: "PUSH1",
      value: "0x1",
    },
    286: {
      op: "PUSH1",
      value: "0x1",
    },
    288: {
      op: "PUSH1",
      value: "0xA0",
    },
    290: {
      op: "SHL",
    },
    291: {
      op: "SUB",
    },
    292: {
      op: "SWAP1",
    },
    293: {
      op: "SWAP2",
    },
    294: {
      op: "AND",
    },
    295: {
      op: "DUP2",
    },
    296: {
      op: "MSTORE",
    },
    297: {
      op: "PUSH1",
      value: "0x20",
    },
    299: {
      op: "ADD",
    },
    300: {
      offset: [320, 371],
      op: "JUMPDEST",
      path: "0",
    },
    301: {
      fn: null,
      offset: [320, 371],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    303: {
      fn: null,
      offset: [320, 371],
      op: "MLOAD",
      path: "0",
    },
    304: {
      fn: null,
      offset: [320, 371],
      op: "DUP1",
      path: "0",
    },
    305: {
      fn: null,
      offset: [320, 371],
      op: "SWAP2",
      path: "0",
    },
    306: {
      fn: null,
      offset: [320, 371],
      op: "SUB",
      path: "0",
    },
    307: {
      fn: null,
      offset: [320, 371],
      op: "SWAP1",
      path: "0",
    },
    308: {
      fn: null,
      offset: [320, 371],
      op: "RETURN",
      path: "0",
    },
    309: {
      offset: [557, 613],
      op: "JUMPDEST",
      path: "0",
    },
    310: {
      fn: null,
      offset: [557, 613],
      op: "CALLVALUE",
      path: "0",
    },
    311: {
      fn: null,
      offset: [557, 613],
      op: "DUP1",
      path: "0",
    },
    312: {
      fn: null,
      offset: [557, 613],
      op: "ISZERO",
      path: "0",
    },
    313: {
      fn: null,
      offset: [557, 613],
      op: "PUSH2",
      path: "0",
      value: "0x141",
    },
    316: {
      fn: null,
      offset: [557, 613],
      op: "JUMPI",
      path: "0",
    },
    317: {
      fn: null,
      offset: [557, 613],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    319: {
      fn: null,
      offset: [557, 613],
      op: "DUP1",
      path: "0",
    },
    320: {
      fn: null,
      offset: [557, 613],
      op: "REVERT",
      path: "0",
    },
    321: {
      fn: null,
      offset: [557, 613],
      op: "JUMPDEST",
      path: "0",
    },
    322: {
      op: "POP",
    },
    323: {
      offset: [557, 613],
      op: "PUSH2",
      path: "0",
      value: "0x162",
    },
    326: {
      fn: null,
      offset: [557, 613],
      op: "PUSH2",
      path: "0",
      value: "0x150",
    },
    329: {
      fn: null,
      offset: [557, 613],
      op: "CALLDATASIZE",
      path: "0",
    },
    330: {
      fn: null,
      offset: [557, 613],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    332: {
      fn: null,
      offset: [557, 613],
      op: "PUSH2",
      path: "0",
      value: "0xB7C",
    },
    335: {
      fn: null,
      jump: "i",
      offset: [557, 613],
      op: "JUMP",
      path: "0",
    },
    336: {
      fn: null,
      offset: [557, 613],
      op: "JUMPDEST",
      path: "0",
    },
    337: {
      fn: null,
      offset: [557, 613],
      op: "PUSH1",
      path: "0",
      value: "0x8",
    },
    339: {
      fn: null,
      offset: [557, 613],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    341: {
      fn: null,
      offset: [557, 613],
      op: "MSTORE",
      path: "0",
    },
    342: {
      fn: null,
      offset: [557, 613],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    344: {
      fn: null,
      offset: [557, 613],
      op: "SWAP1",
      path: "0",
    },
    345: {
      fn: null,
      offset: [557, 613],
      op: "DUP2",
      path: "0",
    },
    346: {
      fn: null,
      offset: [557, 613],
      op: "MSTORE",
      path: "0",
    },
    347: {
      fn: null,
      offset: [557, 613],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    349: {
      fn: null,
      offset: [557, 613],
      op: "SWAP1",
      path: "0",
    },
    350: {
      fn: null,
      offset: [557, 613],
      op: "KECCAK256",
      path: "0",
    },
    351: {
      fn: null,
      offset: [557, 613],
      op: "SLOAD",
      path: "0",
    },
    352: {
      fn: null,
      offset: [557, 613],
      op: "DUP2",
      path: "0",
    },
    353: {
      fn: null,
      offset: [557, 613],
      op: "JUMP",
      path: "0",
    },
    354: {
      fn: null,
      offset: [557, 613],
      op: "JUMPDEST",
      path: "0",
    },
    355: {
      fn: null,
      offset: [557, 613],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    357: {
      fn: null,
      offset: [557, 613],
      op: "MLOAD",
      path: "0",
    },
    358: {
      op: "SWAP1",
    },
    359: {
      op: "DUP2",
    },
    360: {
      op: "MSTORE",
    },
    361: {
      op: "PUSH1",
      value: "0x20",
    },
    363: {
      op: "ADD",
    },
    364: {
      offset: [557, 613],
      op: "PUSH2",
      path: "0",
      value: "0x12C",
    },
    367: {
      op: "JUMP",
    },
    368: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "JUMPDEST",
      path: "0",
    },
    369: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "CALLVALUE",
      path: "0",
    },
    370: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "DUP1",
      path: "0",
    },
    371: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "ISZERO",
      path: "0",
    },
    372: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "PUSH2",
      path: "0",
      value: "0x17C",
    },
    375: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "JUMPI",
      path: "0",
    },
    376: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    378: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "DUP1",
      path: "0",
    },
    379: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "REVERT",
      path: "0",
    },
    380: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "JUMPDEST",
      path: "0",
    },
    381: {
      op: "POP",
    },
    382: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "PUSH2",
      path: "0",
      value: "0x1B8",
    },
    385: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "PUSH2",
      path: "0",
      value: "0x18B",
    },
    388: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "CALLDATASIZE",
      path: "0",
    },
    389: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    391: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "PUSH2",
      path: "0",
      value: "0xB7C",
    },
    394: {
      fn: "MarketPlace.getProductSaleData",
      jump: "i",
      offset: [1919, 2143],
      op: "JUMP",
      path: "0",
    },
    395: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "JUMPDEST",
      path: "0",
    },
    396: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1988, 1992],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    398: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "DUP2",
      path: "0",
      statement: 0,
    },
    399: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "DUP2",
      path: "0",
    },
    400: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "MSTORE",
      path: "0",
    },
    401: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2053],
      op: "PUSH1",
      path: "0",
      value: "0x5",
    },
    403: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    405: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "SWAP1",
      path: "0",
    },
    406: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "DUP2",
      path: "0",
    },
    407: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "MSTORE",
      path: "0",
    },
    408: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    410: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "DUP1",
      path: "0",
    },
    411: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "DUP4",
      path: "0",
    },
    412: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "KECCAK256",
      path: "0",
    },
    413: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "SLOAD",
      path: "0",
    },
    414: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2067, 2088],
      op: "PUSH1",
      path: "0",
      value: "0x6",
    },
    416: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2067, 2100],
      op: "DUP4",
      path: "0",
    },
    417: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2067, 2100],
      op: "MSTORE",
      path: "0",
    },
    418: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2067, 2100],
      op: "DUP2",
      path: "0",
    },
    419: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2067, 2100],
      op: "DUP5",
      path: "0",
    },
    420: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2067, 2100],
      op: "KECCAK256",
      path: "0",
    },
    421: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2067, 2100],
      op: "SLOAD",
      path: "0",
    },
    422: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2102, 2123],
      op: "PUSH1",
      path: "0",
      value: "0x8",
    },
    424: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2102, 2135],
      op: "SWAP1",
      path: "0",
    },
    425: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2102, 2135],
      op: "SWAP4",
      path: "0",
    },
    426: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2102, 2135],
      op: "MSTORE",
      path: "0",
    },
    427: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2102, 2135],
      op: "SWAP3",
      path: "0",
    },
    428: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2102, 2135],
      op: "KECCAK256",
      path: "0",
    },
    429: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2102, 2135],
      op: "SLOAD",
      path: "0",
    },
    430: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "PUSH1",
      path: "0",
      value: "0xFF",
    },
    432: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "SWAP1",
      path: "0",
    },
    433: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "SWAP3",
      path: "0",
    },
    434: {
      fn: "MarketPlace.getProductSaleData",
      offset: [2030, 2065],
      op: "AND",
      path: "0",
    },
    435: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "SWAP4",
      path: "0",
    },
    436: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "SWAP1",
      path: "0",
    },
    437: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "SWAP3",
      path: "0",
    },
    438: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "POP",
      path: "0",
    },
    439: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "JUMP",
      path: "0",
    },
    440: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "JUMPDEST",
      path: "0",
    },
    441: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    443: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "DUP1",
      path: "0",
    },
    444: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "MLOAD",
      path: "0",
    },
    445: {
      op: "SWAP4",
    },
    446: {
      op: "ISZERO",
    },
    447: {
      op: "ISZERO",
    },
    448: {
      op: "DUP5",
    },
    449: {
      op: "MSTORE",
    },
    450: {
      op: "PUSH1",
      value: "0x20",
    },
    452: {
      op: "DUP5",
    },
    453: {
      op: "ADD",
    },
    454: {
      op: "SWAP3",
    },
    455: {
      op: "SWAP1",
    },
    456: {
      op: "SWAP3",
    },
    457: {
      op: "MSTORE",
    },
    458: {
      op: "SWAP1",
    },
    459: {
      op: "DUP3",
    },
    460: {
      op: "ADD",
    },
    461: {
      op: "MSTORE",
    },
    462: {
      op: "PUSH1",
      value: "0x60",
    },
    464: {
      op: "ADD",
    },
    465: {
      fn: "MarketPlace.getProductSaleData",
      offset: [1919, 2143],
      op: "PUSH2",
      path: "0",
      value: "0x12C",
    },
    468: {
      op: "JUMP",
    },
    469: {
      offset: [105, 133],
      op: "JUMPDEST",
      path: "0",
    },
    470: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "CALLVALUE",
      path: "0",
    },
    471: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "DUP1",
      path: "0",
    },
    472: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "ISZERO",
      path: "0",
    },
    473: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "PUSH2",
      path: "0",
      value: "0x1E1",
    },
    476: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "JUMPI",
      path: "0",
    },
    477: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    479: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "DUP1",
      path: "0",
    },
    480: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "REVERT",
      path: "0",
    },
    481: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "JUMPDEST",
      path: "0",
    },
    482: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "POP",
      path: "0",
    },
    483: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "PUSH2",
      path: "0",
      value: "0x162",
    },
    486: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    488: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "SLOAD",
      path: "0",
    },
    489: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "DUP2",
      path: "0",
    },
    490: {
      fn: "MarketPlace.getProductSaleData",
      offset: [105, 133],
      op: "JUMP",
      path: "0",
    },
    491: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "JUMPDEST",
      path: "0",
    },
    492: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "CALLVALUE",
      path: "0",
    },
    493: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "DUP1",
      path: "0",
    },
    494: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "ISZERO",
      path: "0",
    },
    495: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "PUSH2",
      path: "0",
      value: "0x1F7",
    },
    498: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "JUMPI",
      path: "0",
    },
    499: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    501: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "DUP1",
      path: "0",
    },
    502: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "REVERT",
      path: "0",
    },
    503: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "JUMPDEST",
      path: "0",
    },
    504: {
      op: "POP",
    },
    505: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "PUSH2",
      path: "0",
      value: "0x20B",
    },
    508: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "PUSH2",
      path: "0",
      value: "0x206",
    },
    511: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "CALLDATASIZE",
      path: "0",
    },
    512: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    514: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "PUSH2",
      path: "0",
      value: "0xB95",
    },
    517: {
      fn: "MarketPlace.putUpForSale",
      jump: "i",
      offset: [2153, 2559],
      op: "JUMP",
      path: "0",
    },
    518: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "JUMPDEST",
      path: "0",
    },
    519: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "PUSH2",
      path: "0",
      value: "0x36A",
    },
    522: {
      fn: "MarketPlace.putUpForSale",
      jump: "i",
      offset: [2153, 2559],
      op: "JUMP",
      path: "0",
    },
    523: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "JUMPDEST",
      path: "0",
    },
    524: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "STOP",
      path: "0",
    },
    525: {
      fn: "MarketPlace.placeBid",
      offset: [2565, 3182],
      op: "JUMPDEST",
      path: "0",
    },
    526: {
      fn: "MarketPlace.placeBid",
      offset: [2565, 3182],
      op: "PUSH2",
      path: "0",
      value: "0x20B",
    },
    529: {
      fn: "MarketPlace.placeBid",
      offset: [2565, 3182],
      op: "PUSH2",
      path: "0",
      value: "0x21B",
    },
    532: {
      fn: "MarketPlace.placeBid",
      offset: [2565, 3182],
      op: "CALLDATASIZE",
      path: "0",
    },
    533: {
      fn: "MarketPlace.placeBid",
      offset: [2565, 3182],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    535: {
      fn: "MarketPlace.placeBid",
      offset: [2565, 3182],
      op: "PUSH2",
      path: "0",
      value: "0xB7C",
    },
    538: {
      fn: "MarketPlace.placeBid",
      jump: "i",
      offset: [2565, 3182],
      op: "JUMP",
      path: "0",
    },
    539: {
      fn: "MarketPlace.placeBid",
      offset: [2565, 3182],
      op: "JUMPDEST",
      path: "0",
    },
    540: {
      fn: "MarketPlace.placeBid",
      offset: [2565, 3182],
      op: "PUSH2",
      path: "0",
      value: "0x410",
    },
    543: {
      fn: "MarketPlace.placeBid",
      jump: "i",
      offset: [2565, 3182],
      op: "JUMP",
      path: "0",
    },
    544: {
      offset: [194, 250],
      op: "JUMPDEST",
      path: "0",
    },
    545: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "CALLVALUE",
      path: "0",
    },
    546: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP1",
      path: "0",
    },
    547: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "ISZERO",
      path: "0",
    },
    548: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0x22C",
    },
    551: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "JUMPI",
      path: "0",
    },
    552: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    554: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP1",
      path: "0",
    },
    555: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "REVERT",
      path: "0",
    },
    556: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "JUMPDEST",
      path: "0",
    },
    557: {
      op: "POP",
    },
    558: {
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0x240",
    },
    561: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0x23B",
    },
    564: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "CALLDATASIZE",
      path: "0",
    },
    565: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    567: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0xB7C",
    },
    570: {
      fn: "MarketPlace.placeBid",
      jump: "i",
      offset: [194, 250],
      op: "JUMP",
      path: "0",
    },
    571: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "JUMPDEST",
      path: "0",
    },
    572: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0x56F",
    },
    575: {
      fn: "MarketPlace.placeBid",
      jump: "i",
      offset: [194, 250],
      op: "JUMP",
      path: "0",
    },
    576: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "JUMPDEST",
      path: "0",
    },
    577: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    579: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "MLOAD",
      path: "0",
    },
    580: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0x12C",
    },
    583: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP2",
      path: "0",
    },
    584: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP1",
      path: "0",
    },
    585: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0xC0E",
    },
    588: {
      fn: "MarketPlace.placeBid",
      jump: "i",
      offset: [194, 250],
      op: "JUMP",
      path: "0",
    },
    589: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "JUMPDEST",
      path: "0",
    },
    590: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "CALLVALUE",
      path: "0",
    },
    591: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "DUP1",
      path: "0",
    },
    592: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "ISZERO",
      path: "0",
    },
    593: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "PUSH2",
      path: "0",
      value: "0x259",
    },
    596: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "JUMPI",
      path: "0",
    },
    597: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    599: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "DUP1",
      path: "0",
    },
    600: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "REVERT",
      path: "0",
    },
    601: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "JUMPDEST",
      path: "0",
    },
    602: {
      op: "POP",
    },
    603: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "PUSH2",
      path: "0",
      value: "0x20B",
    },
    606: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "PUSH2",
      path: "0",
      value: "0x268",
    },
    609: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "CALLDATASIZE",
      path: "0",
    },
    610: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    612: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "PUSH2",
      path: "0",
      value: "0xCCB",
    },
    615: {
      fn: "MarketPlace.createProduct",
      jump: "i",
      offset: [1042, 1638],
      op: "JUMP",
      path: "0",
    },
    616: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "JUMPDEST",
      path: "0",
    },
    617: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "PUSH2",
      path: "0",
      value: "0x609",
    },
    620: {
      fn: "MarketPlace.createProduct",
      jump: "i",
      offset: [1042, 1638],
      op: "JUMP",
      path: "0",
    },
    621: {
      offset: [139, 188],
      op: "JUMPDEST",
      path: "0",
    },
    622: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "CALLVALUE",
      path: "0",
    },
    623: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "DUP1",
      path: "0",
    },
    624: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "ISZERO",
      path: "0",
    },
    625: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "PUSH2",
      path: "0",
      value: "0x279",
    },
    628: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "JUMPI",
      path: "0",
    },
    629: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    631: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "DUP1",
      path: "0",
    },
    632: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "REVERT",
      path: "0",
    },
    633: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "JUMPDEST",
      path: "0",
    },
    634: {
      op: "POP",
    },
    635: {
      offset: [139, 188],
      op: "PUSH2",
      path: "0",
      value: "0x240",
    },
    638: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "PUSH2",
      path: "0",
      value: "0x288",
    },
    641: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "CALLDATASIZE",
      path: "0",
    },
    642: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    644: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "PUSH2",
      path: "0",
      value: "0xB7C",
    },
    647: {
      fn: "MarketPlace.createProduct",
      jump: "i",
      offset: [139, 188],
      op: "JUMP",
      path: "0",
    },
    648: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "JUMPDEST",
      path: "0",
    },
    649: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "PUSH2",
      path: "0",
      value: "0x6E9",
    },
    652: {
      fn: "MarketPlace.createProduct",
      jump: "i",
      offset: [139, 188],
      op: "JUMP",
      path: "0",
    },
    653: {
      offset: [256, 310],
      op: "JUMPDEST",
      path: "0",
    },
    654: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "CALLVALUE",
      path: "0",
    },
    655: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "DUP1",
      path: "0",
    },
    656: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "ISZERO",
      path: "0",
    },
    657: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "PUSH2",
      path: "0",
      value: "0x299",
    },
    660: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "JUMPI",
      path: "0",
    },
    661: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    663: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "DUP1",
      path: "0",
    },
    664: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "REVERT",
      path: "0",
    },
    665: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "JUMPDEST",
      path: "0",
    },
    666: {
      op: "POP",
    },
    667: {
      offset: [256, 310],
      op: "PUSH2",
      path: "0",
      value: "0x162",
    },
    670: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "PUSH2",
      path: "0",
      value: "0x2A8",
    },
    673: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "CALLDATASIZE",
      path: "0",
    },
    674: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    676: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "PUSH2",
      path: "0",
      value: "0xB7C",
    },
    679: {
      fn: "MarketPlace.createProduct",
      jump: "i",
      offset: [256, 310],
      op: "JUMP",
      path: "0",
    },
    680: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "JUMPDEST",
      path: "0",
    },
    681: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "PUSH1",
      path: "0",
      value: "0x3",
    },
    683: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    685: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "MSTORE",
      path: "0",
    },
    686: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    688: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "SWAP1",
      path: "0",
    },
    689: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "DUP2",
      path: "0",
    },
    690: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "MSTORE",
      path: "0",
    },
    691: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    693: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "SWAP1",
      path: "0",
    },
    694: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "KECCAK256",
      path: "0",
    },
    695: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "SLOAD",
      path: "0",
    },
    696: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "DUP2",
      path: "0",
    },
    697: {
      fn: "MarketPlace.createProduct",
      offset: [256, 310],
      op: "JUMP",
      path: "0",
    },
    698: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "JUMPDEST",
      path: "0",
    },
    699: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "CALLVALUE",
      path: "0",
    },
    700: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "DUP1",
      path: "0",
    },
    701: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "ISZERO",
      path: "0",
    },
    702: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "PUSH2",
      path: "0",
      value: "0x2C6",
    },
    705: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "JUMPI",
      path: "0",
    },
    706: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    708: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "DUP1",
      path: "0",
    },
    709: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "REVERT",
      path: "0",
    },
    710: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "JUMPDEST",
      path: "0",
    },
    711: {
      op: "POP",
    },
    712: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "PUSH2",
      path: "0",
      value: "0x2DA",
    },
    715: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "PUSH2",
      path: "0",
      value: "0x2D5",
    },
    718: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "CALLDATASIZE",
      path: "0",
    },
    719: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    721: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "PUSH2",
      path: "0",
      value: "0xB7C",
    },
    724: {
      fn: "MarketPlace.getProductData",
      jump: "i",
      offset: [1647, 1913],
      op: "JUMP",
      path: "0",
    },
    725: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "JUMPDEST",
      path: "0",
    },
    726: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "PUSH2",
      path: "0",
      value: "0x702",
    },
    729: {
      fn: "MarketPlace.getProductData",
      jump: "i",
      offset: [1647, 1913],
      op: "JUMP",
      path: "0",
    },
    730: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "JUMPDEST",
      path: "0",
    },
    731: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    733: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "MLOAD",
      path: "0",
    },
    734: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "PUSH2",
      path: "0",
      value: "0x12C",
    },
    737: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "SWAP5",
      path: "0",
    },
    738: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "SWAP4",
      path: "0",
    },
    739: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "SWAP3",
      path: "0",
    },
    740: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "SWAP2",
      path: "0",
    },
    741: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "SWAP1",
      path: "0",
    },
    742: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "PUSH2",
      path: "0",
      value: "0xD38",
    },
    745: {
      fn: "MarketPlace.getProductData",
      jump: "i",
      offset: [1647, 1913],
      op: "JUMP",
      path: "0",
    },
    746: {
      offset: [377, 432],
      op: "JUMPDEST",
      path: "0",
    },
    747: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "CALLVALUE",
      path: "0",
    },
    748: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "DUP1",
      path: "0",
    },
    749: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "ISZERO",
      path: "0",
    },
    750: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "PUSH2",
      path: "0",
      value: "0x2F6",
    },
    753: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "JUMPI",
      path: "0",
    },
    754: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    756: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "DUP1",
      path: "0",
    },
    757: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "REVERT",
      path: "0",
    },
    758: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "JUMPDEST",
      path: "0",
    },
    759: {
      op: "POP",
    },
    760: {
      offset: [377, 432],
      op: "PUSH2",
      path: "0",
      value: "0x31A",
    },
    763: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "PUSH2",
      path: "0",
      value: "0x305",
    },
    766: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "CALLDATASIZE",
      path: "0",
    },
    767: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    769: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "PUSH2",
      path: "0",
      value: "0xB7C",
    },
    772: {
      fn: "MarketPlace.getProductData",
      jump: "i",
      offset: [377, 432],
      op: "JUMP",
      path: "0",
    },
    773: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "JUMPDEST",
      path: "0",
    },
    774: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "PUSH1",
      path: "0",
      value: "0x5",
    },
    776: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    778: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "MSTORE",
      path: "0",
    },
    779: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    781: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "SWAP1",
      path: "0",
    },
    782: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "DUP2",
      path: "0",
    },
    783: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "MSTORE",
      path: "0",
    },
    784: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    786: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "SWAP1",
      path: "0",
    },
    787: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "KECCAK256",
      path: "0",
    },
    788: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "SLOAD",
      path: "0",
    },
    789: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "PUSH1",
      path: "0",
      value: "0xFF",
    },
    791: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "AND",
      path: "0",
    },
    792: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "DUP2",
      path: "0",
    },
    793: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "JUMP",
      path: "0",
    },
    794: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "JUMPDEST",
      path: "0",
    },
    795: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    797: {
      fn: "MarketPlace.getProductData",
      offset: [377, 432],
      op: "MLOAD",
      path: "0",
    },
    798: {
      op: "SWAP1",
    },
    799: {
      op: "ISZERO",
    },
    800: {
      op: "ISZERO",
    },
    801: {
      op: "DUP2",
    },
    802: {
      op: "MSTORE",
    },
    803: {
      op: "PUSH1",
      value: "0x20",
    },
    805: {
      op: "ADD",
    },
    806: {
      offset: [377, 432],
      op: "PUSH2",
      path: "0",
      value: "0x12C",
    },
    809: {
      op: "JUMP",
    },
    810: {
      fn: "MarketPlace.closeBid",
      offset: [3191, 4217],
      op: "JUMPDEST",
      path: "0",
    },
    811: {
      fn: "MarketPlace.closeBid",
      offset: [3191, 4217],
      op: "PUSH2",
      path: "0",
      value: "0x20B",
    },
    814: {
      fn: "MarketPlace.closeBid",
      offset: [3191, 4217],
      op: "PUSH2",
      path: "0",
      value: "0x338",
    },
    817: {
      fn: "MarketPlace.closeBid",
      offset: [3191, 4217],
      op: "CALLDATASIZE",
      path: "0",
    },
    818: {
      fn: "MarketPlace.closeBid",
      offset: [3191, 4217],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    820: {
      fn: "MarketPlace.closeBid",
      offset: [3191, 4217],
      op: "PUSH2",
      path: "0",
      value: "0xB7C",
    },
    823: {
      fn: "MarketPlace.closeBid",
      jump: "i",
      offset: [3191, 4217],
      op: "JUMP",
      path: "0",
    },
    824: {
      fn: "MarketPlace.closeBid",
      offset: [3191, 4217],
      op: "JUMPDEST",
      path: "0",
    },
    825: {
      fn: "MarketPlace.closeBid",
      offset: [3191, 4217],
      op: "PUSH2",
      path: "0",
      value: "0x86B",
    },
    828: {
      fn: "MarketPlace.closeBid",
      jump: "i",
      offset: [3191, 4217],
      op: "JUMP",
      path: "0",
    },
    829: {
      offset: [438, 494],
      op: "JUMPDEST",
      path: "0",
    },
    830: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "CALLVALUE",
      path: "0",
    },
    831: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "DUP1",
      path: "0",
    },
    832: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "ISZERO",
      path: "0",
    },
    833: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "PUSH2",
      path: "0",
      value: "0x349",
    },
    836: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "JUMPI",
      path: "0",
    },
    837: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    839: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "DUP1",
      path: "0",
    },
    840: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "REVERT",
      path: "0",
    },
    841: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "JUMPDEST",
      path: "0",
    },
    842: {
      op: "POP",
    },
    843: {
      offset: [438, 494],
      op: "PUSH2",
      path: "0",
      value: "0x162",
    },
    846: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "PUSH2",
      path: "0",
      value: "0x358",
    },
    849: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "CALLDATASIZE",
      path: "0",
    },
    850: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    852: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "PUSH2",
      path: "0",
      value: "0xB7C",
    },
    855: {
      fn: "MarketPlace.closeBid",
      jump: "i",
      offset: [438, 494],
      op: "JUMP",
      path: "0",
    },
    856: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "JUMPDEST",
      path: "0",
    },
    857: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "PUSH1",
      path: "0",
      value: "0x6",
    },
    859: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    861: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "MSTORE",
      path: "0",
    },
    862: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    864: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "SWAP1",
      path: "0",
    },
    865: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "DUP2",
      path: "0",
    },
    866: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "MSTORE",
      path: "0",
    },
    867: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    869: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "SWAP1",
      path: "0",
    },
    870: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "KECCAK256",
      path: "0",
    },
    871: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "SLOAD",
      path: "0",
    },
    872: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "DUP2",
      path: "0",
    },
    873: {
      fn: "MarketPlace.closeBid",
      offset: [438, 494],
      op: "JUMP",
      path: "0",
    },
    874: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "JUMPDEST",
      path: "0",
    },
    875: {
      fn: "MarketPlace.putUpForSale",
      offset: [2276, 2304],
      op: "PUSH1",
      path: "0",
      statement: 1,
      value: "0x0",
    },
    877: {
      fn: "MarketPlace.putUpForSale",
      offset: [2276, 2304],
      op: "DUP4",
      path: "0",
    },
    878: {
      fn: "MarketPlace.putUpForSale",
      offset: [2276, 2304],
      op: "DUP2",
      path: "0",
    },
    879: {
      fn: "MarketPlace.putUpForSale",
      offset: [2276, 2304],
      op: "MSTORE",
      path: "0",
    },
    880: {
      fn: "MarketPlace.putUpForSale",
      offset: [2276, 2292],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    882: {
      fn: "MarketPlace.putUpForSale",
      offset: [2276, 2304],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    884: {
      fn: "MarketPlace.putUpForSale",
      offset: [2276, 2304],
      op: "MSTORE",
      path: "0",
    },
    885: {
      fn: "MarketPlace.putUpForSale",
      offset: [2276, 2304],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    887: {
      fn: "MarketPlace.putUpForSale",
      offset: [2276, 2304],
      op: "SWAP1",
      path: "0",
    },
    888: {
      fn: "MarketPlace.putUpForSale",
      offset: [2276, 2304],
      op: "KECCAK256",
      path: "0",
    },
    889: {
      fn: "MarketPlace.putUpForSale",
      offset: [2276, 2304],
      op: "SLOAD",
      path: "0",
    },
    890: {
      op: "PUSH1",
      value: "0x1",
    },
    892: {
      op: "PUSH1",
      value: "0x1",
    },
    894: {
      op: "PUSH1",
      value: "0xA0",
    },
    896: {
      op: "SHL",
    },
    897: {
      op: "SUB",
    },
    898: {
      fn: "MarketPlace.putUpForSale",
      offset: [2276, 2304],
      op: "AND",
      path: "0",
    },
    899: {
      fn: "MarketPlace.putUpForSale",
      offset: [2262, 2272],
      op: "CALLER",
      path: "0",
    },
    900: {
      branch: 31,
      fn: "MarketPlace.putUpForSale",
      offset: [2262, 2304],
      op: "EQ",
      path: "0",
    },
    901: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "PUSH2",
      path: "0",
      value: "0x3A9",
    },
    904: {
      branch: 31,
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "JUMPI",
      path: "0",
    },
    905: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    907: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "MLOAD",
      path: "0",
    },
    908: {
      op: "PUSH3",
      value: "0x461BCD",
    },
    912: {
      op: "PUSH1",
      value: "0xE5",
    },
    914: {
      op: "SHL",
    },
    915: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "DUP2",
      path: "0",
    },
    916: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "MSTORE",
      path: "0",
    },
    917: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    919: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "ADD",
      path: "0",
    },
    920: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "PUSH2",
      path: "0",
      value: "0x3A0",
    },
    923: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "SWAP1",
      path: "0",
    },
    924: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "PUSH2",
      path: "0",
      value: "0xD7F",
    },
    927: {
      fn: "MarketPlace.putUpForSale",
      jump: "i",
      offset: [2254, 2348],
      op: "JUMP",
      path: "0",
    },
    928: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "JUMPDEST",
      path: "0",
    },
    929: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    931: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "MLOAD",
      path: "0",
    },
    932: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "DUP1",
      path: "0",
    },
    933: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "SWAP2",
      path: "0",
    },
    934: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "SUB",
      path: "0",
    },
    935: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "SWAP1",
      path: "0",
    },
    936: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "REVERT",
      optimizer_revert: true,
      path: "0",
    },
    937: {
      fn: "MarketPlace.putUpForSale",
      offset: [2254, 2348],
      op: "JUMPDEST",
      path: "0",
    },
    938: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2393],
      op: "PUSH1",
      path: "0",
      statement: 2,
      value: "0x0",
    },
    940: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2393],
      op: "DUP4",
      path: "0",
    },
    941: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2393],
      op: "DUP2",
      path: "0",
    },
    942: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2393],
      op: "MSTORE",
      path: "0",
    },
    943: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2381],
      op: "PUSH1",
      path: "0",
      value: "0x5",
    },
    945: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2393],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    947: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2393],
      op: "SWAP1",
      path: "0",
    },
    948: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2393],
      op: "DUP2",
      path: "0",
    },
    949: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2393],
      op: "MSTORE",
      path: "0",
    },
    950: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2393],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    952: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2393],
      op: "DUP1",
      path: "0",
    },
    953: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2393],
      op: "DUP4",
      path: "0",
    },
    954: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2393],
      op: "KECCAK256",
      path: "0",
    },
    955: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2400],
      op: "DUP1",
      path: "0",
    },
    956: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2400],
      op: "SLOAD",
      path: "0",
    },
    957: {
      op: "PUSH1",
      value: "0xFF",
    },
    959: {
      op: "NOT",
    },
    960: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2400],
      op: "AND",
      path: "0",
    },
    961: {
      fn: "MarketPlace.putUpForSale",
      offset: [2396, 2400],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    963: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2400],
      op: "OR",
      path: "0",
    },
    964: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2400],
      op: "SWAP1",
      path: "0",
    },
    965: {
      fn: "MarketPlace.putUpForSale",
      offset: [2358, 2400],
      op: "SSTORE",
      path: "0",
    },
    966: {
      fn: "MarketPlace.putUpForSale",
      offset: [2410, 2431],
      op: "PUSH1",
      path: "0",
      statement: 3,
      value: "0x6",
    },
    968: {
      fn: "MarketPlace.putUpForSale",
      offset: [2410, 2443],
      op: "DUP3",
      path: "0",
    },
    969: {
      fn: "MarketPlace.putUpForSale",
      offset: [2410, 2443],
      op: "MSTORE",
      path: "0",
    },
    970: {
      fn: "MarketPlace.putUpForSale",
      offset: [2410, 2443],
      op: "DUP1",
      path: "0",
    },
    971: {
      fn: "MarketPlace.putUpForSale",
      offset: [2410, 2443],
      op: "DUP4",
      path: "0",
    },
    972: {
      fn: "MarketPlace.putUpForSale",
      offset: [2410, 2443],
      op: "KECCAK256",
      path: "0",
    },
    973: {
      fn: "MarketPlace.putUpForSale",
      offset: [2410, 2457],
      op: "DUP6",
      path: "0",
    },
    974: {
      fn: "MarketPlace.putUpForSale",
      offset: [2410, 2457],
      op: "SWAP1",
      path: "0",
    },
    975: {
      fn: "MarketPlace.putUpForSale",
      offset: [2410, 2457],
      op: "SSTORE",
      path: "0",
    },
    976: {
      fn: "MarketPlace.putUpForSale",
      offset: [2467, 2488],
      op: "PUSH1",
      path: "0",
      statement: 4,
      value: "0x8",
    },
    978: {
      fn: "MarketPlace.putUpForSale",
      offset: [2467, 2500],
      op: "DUP3",
      path: "0",
    },
    979: {
      fn: "MarketPlace.putUpForSale",
      offset: [2467, 2500],
      op: "MSTORE",
      path: "0",
    },
    980: {
      fn: "MarketPlace.putUpForSale",
      offset: [2467, 2500],
      op: "SWAP2",
      path: "0",
    },
    981: {
      fn: "MarketPlace.putUpForSale",
      offset: [2467, 2500],
      op: "DUP3",
      path: "0",
    },
    982: {
      fn: "MarketPlace.putUpForSale",
      offset: [2467, 2500],
      op: "SWAP1",
      path: "0",
    },
    983: {
      fn: "MarketPlace.putUpForSale",
      offset: [2467, 2500],
      op: "KECCAK256",
      path: "0",
    },
    984: {
      fn: "MarketPlace.putUpForSale",
      offset: [2467, 2514],
      op: "DUP4",
      path: "0",
    },
    985: {
      fn: "MarketPlace.putUpForSale",
      offset: [2467, 2514],
      op: "SWAP1",
      path: "0",
    },
    986: {
      fn: "MarketPlace.putUpForSale",
      offset: [2467, 2514],
      op: "SSTORE",
      path: "0",
    },
    987: {
      fn: "MarketPlace.putUpForSale",
      offset: [2529, 2552],
      op: "SWAP1",
      path: "0",
      statement: 5,
    },
    988: {
      fn: "MarketPlace.putUpForSale",
      offset: [2529, 2552],
      op: "MLOAD",
      path: "0",
    },
    989: {
      op: "DUP5",
    },
    990: {
      op: "DUP2",
    },
    991: {
      op: "MSTORE",
    },
    992: {
      fn: "MarketPlace.putUpForSale",
      offset: [2529, 2552],
      op: "PUSH32",
      path: "0",
      value:
        "0x26FD32143A7FA27BD01F8308942378E76C81185C2979C6BBE1AEBF9A59BD861",
    },
    1025: {
      fn: "MarketPlace.putUpForSale",
      offset: [2529, 2552],
      op: "SWAP2",
      path: "0",
    },
    1026: {
      op: "ADD",
    },
    1027: {
      fn: "MarketPlace.putUpForSale",
      offset: [2529, 2552],
      op: "JUMPDEST",
      path: "0",
    },
    1028: {
      fn: "MarketPlace.putUpForSale",
      offset: [2529, 2552],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1030: {
      fn: "MarketPlace.putUpForSale",
      offset: [2529, 2552],
      op: "MLOAD",
      path: "0",
    },
    1031: {
      fn: "MarketPlace.putUpForSale",
      offset: [2529, 2552],
      op: "DUP1",
      path: "0",
    },
    1032: {
      fn: "MarketPlace.putUpForSale",
      offset: [2529, 2552],
      op: "SWAP2",
      path: "0",
    },
    1033: {
      fn: "MarketPlace.putUpForSale",
      offset: [2529, 2552],
      op: "SUB",
      path: "0",
    },
    1034: {
      fn: "MarketPlace.putUpForSale",
      offset: [2529, 2552],
      op: "SWAP1",
      path: "0",
    },
    1035: {
      fn: "MarketPlace.putUpForSale",
      offset: [2529, 2552],
      op: "LOG1",
      path: "0",
    },
    1036: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "POP",
      path: "0",
    },
    1037: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "POP",
      path: "0",
    },
    1038: {
      fn: "MarketPlace.putUpForSale",
      offset: [2153, 2559],
      op: "POP",
      path: "0",
    },
    1039: {
      fn: "MarketPlace.putUpForSale",
      jump: "o",
      offset: [2153, 2559],
      op: "JUMP",
      path: "0",
    },
    1040: {
      fn: "MarketPlace.placeBid",
      offset: [2565, 3182],
      op: "JUMPDEST",
      path: "0",
    },
    1041: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2670],
      op: "PUSH1",
      path: "0",
      statement: 6,
      value: "0x0",
    },
    1043: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2670],
      op: "DUP2",
      path: "0",
    },
    1044: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2670],
      op: "DUP2",
      path: "0",
    },
    1045: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2670],
      op: "MSTORE",
      path: "0",
    },
    1046: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2658],
      op: "PUSH1",
      path: "0",
      value: "0x5",
    },
    1048: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2670],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1050: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2670],
      op: "MSTORE",
      path: "0",
    },
    1051: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2670],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1053: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2670],
      op: "SWAP1",
      path: "0",
    },
    1054: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2670],
      op: "KECCAK256",
      path: "0",
    },
    1055: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2670],
      op: "SLOAD",
      path: "0",
    },
    1056: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2670],
      op: "PUSH1",
      path: "0",
      value: "0xFF",
    },
    1058: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2670],
      op: "AND",
      path: "0",
    },
    1059: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2678],
      op: "ISZERO",
      path: "0",
    },
    1060: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2678],
      op: "ISZERO",
      path: "0",
    },
    1061: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2670],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    1063: {
      branch: 32,
      fn: "MarketPlace.placeBid",
      offset: [2635, 2678],
      op: "EQ",
      path: "0",
    },
    1064: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2733],
      op: "DUP1",
      path: "0",
    },
    1065: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2733],
      op: "ISZERO",
      path: "0",
    },
    1066: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2733],
      op: "PUSH2",
      path: "0",
      value: "0x440",
    },
    1069: {
      branch: 32,
      fn: "MarketPlace.placeBid",
      offset: [2635, 2733],
      op: "JUMPI",
      path: "0",
    },
    1070: {
      op: "POP",
    },
    1071: {
      fn: "MarketPlace.placeBid",
      offset: [2700, 2733],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    1073: {
      fn: "MarketPlace.placeBid",
      offset: [2700, 2733],
      op: "DUP2",
      path: "0",
    },
    1074: {
      fn: "MarketPlace.placeBid",
      offset: [2700, 2733],
      op: "DUP2",
      path: "0",
    },
    1075: {
      fn: "MarketPlace.placeBid",
      offset: [2700, 2733],
      op: "MSTORE",
      path: "0",
    },
    1076: {
      fn: "MarketPlace.placeBid",
      offset: [2700, 2721],
      op: "PUSH1",
      path: "0",
      value: "0x8",
    },
    1078: {
      fn: "MarketPlace.placeBid",
      offset: [2700, 2733],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1080: {
      fn: "MarketPlace.placeBid",
      offset: [2700, 2733],
      op: "MSTORE",
      path: "0",
    },
    1081: {
      fn: "MarketPlace.placeBid",
      offset: [2700, 2733],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1083: {
      fn: "MarketPlace.placeBid",
      offset: [2700, 2733],
      op: "SWAP1",
      path: "0",
    },
    1084: {
      fn: "MarketPlace.placeBid",
      offset: [2700, 2733],
      op: "KECCAK256",
      path: "0",
    },
    1085: {
      fn: "MarketPlace.placeBid",
      offset: [2700, 2733],
      op: "SLOAD",
      path: "0",
    },
    1086: {
      fn: "MarketPlace.placeBid",
      offset: [2682, 2697],
      op: "TIMESTAMP",
      path: "0",
    },
    1087: {
      branch: 33,
      fn: "MarketPlace.placeBid",
      offset: [2682, 2733],
      op: "LT",
      path: "0",
    },
    1088: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2733],
      op: "JUMPDEST",
      path: "0",
    },
    1089: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2783],
      op: "DUP1",
      path: "0",
    },
    1090: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2783],
      op: "ISZERO",
      path: "0",
    },
    1091: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2783],
      op: "PUSH2",
      path: "0",
      value: "0x45A",
    },
    1094: {
      branch: 33,
      fn: "MarketPlace.placeBid",
      offset: [2635, 2783],
      op: "JUMPI",
      path: "0",
    },
    1095: {
      op: "POP",
    },
    1096: {
      fn: "MarketPlace.placeBid",
      offset: [2750, 2783],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    1098: {
      fn: "MarketPlace.placeBid",
      offset: [2750, 2783],
      op: "DUP2",
      path: "0",
    },
    1099: {
      fn: "MarketPlace.placeBid",
      offset: [2750, 2783],
      op: "DUP2",
      path: "0",
    },
    1100: {
      fn: "MarketPlace.placeBid",
      offset: [2750, 2783],
      op: "MSTORE",
      path: "0",
    },
    1101: {
      fn: "MarketPlace.placeBid",
      offset: [2750, 2771],
      op: "PUSH1",
      path: "0",
      value: "0x6",
    },
    1103: {
      fn: "MarketPlace.placeBid",
      offset: [2750, 2783],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1105: {
      fn: "MarketPlace.placeBid",
      offset: [2750, 2783],
      op: "MSTORE",
      path: "0",
    },
    1106: {
      fn: "MarketPlace.placeBid",
      offset: [2750, 2783],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1108: {
      fn: "MarketPlace.placeBid",
      offset: [2750, 2783],
      op: "SWAP1",
      path: "0",
    },
    1109: {
      fn: "MarketPlace.placeBid",
      offset: [2750, 2783],
      op: "KECCAK256",
      path: "0",
    },
    1110: {
      fn: "MarketPlace.placeBid",
      offset: [2750, 2783],
      op: "SLOAD",
      path: "0",
    },
    1111: {
      fn: "MarketPlace.placeBid",
      offset: [2737, 2746],
      op: "CALLVALUE",
      path: "0",
    },
    1112: {
      fn: "MarketPlace.placeBid",
      offset: [2737, 2783],
      op: "LT",
      path: "0",
    },
    1113: {
      branch: 34,
      fn: "MarketPlace.placeBid",
      offset: [2737, 2783],
      op: "ISZERO",
      path: "0",
    },
    1114: {
      fn: "MarketPlace.placeBid",
      offset: [2635, 2783],
      op: "JUMPDEST",
      path: "0",
    },
    1115: {
      fn: "MarketPlace.placeBid",
      offset: [2627, 2846],
      op: "PUSH2",
      path: "0",
      value: "0x4CC",
    },
    1118: {
      branch: 34,
      fn: "MarketPlace.placeBid",
      offset: [2627, 2846],
      op: "JUMPI",
      path: "0",
    },
    1119: {
      fn: "MarketPlace.placeBid",
      offset: [2627, 2846],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1121: {
      fn: "MarketPlace.placeBid",
      offset: [2627, 2846],
      op: "MLOAD",
      path: "0",
    },
    1122: {
      op: "PUSH3",
      value: "0x461BCD",
    },
    1126: {
      op: "PUSH1",
      value: "0xE5",
    },
    1128: {
      op: "SHL",
    },
    1129: {
      fn: "MarketPlace.placeBid",
      offset: [2627, 2846],
      op: "DUP2",
      path: "0",
    },
    1130: {
      fn: "MarketPlace.placeBid",
      offset: [2627, 2846],
      op: "MSTORE",
      path: "0",
    },
    1131: {
      op: "PUSH1",
      value: "0x20",
    },
    1133: {
      fn: "MarketPlace.placeBid",
      offset: [2627, 2846],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    1135: {
      fn: "MarketPlace.placeBid",
      offset: [2627, 2846],
      op: "DUP3",
      path: "0",
    },
    1136: {
      fn: "MarketPlace.placeBid",
      offset: [2627, 2846],
      op: "ADD",
      path: "0",
    },
    1137: {
      op: "MSTORE",
    },
    1138: {
      op: "PUSH1",
      value: "0x39",
    },
    1140: {
      op: "PUSH1",
      value: "0x24",
    },
    1142: {
      op: "DUP3",
    },
    1143: {
      op: "ADD",
    },
    1144: {
      op: "MSTORE",
    },
    1145: {
      op: "PUSH32",
      value:
        "0x5265717565737465642070726F64756374206973206E6F742074616B696E6720",
    },
    1178: {
      op: "PUSH1",
      value: "0x44",
    },
    1180: {
      op: "DUP3",
    },
    1181: {
      op: "ADD",
    },
    1182: {
      op: "MSTORE",
    },
    1183: {
      op: "PUSH32",
      value:
        "0x62696473206F722062696420707269636520746F6F206C6F7700000000000000",
    },
    1216: {
      op: "PUSH1",
      value: "0x64",
    },
    1218: {
      op: "DUP3",
    },
    1219: {
      op: "ADD",
    },
    1220: {
      op: "MSTORE",
    },
    1221: {
      op: "PUSH1",
      value: "0x84",
    },
    1223: {
      op: "ADD",
    },
    1224: {
      fn: "MarketPlace.placeBid",
      offset: [2627, 2846],
      op: "PUSH2",
      path: "0",
      value: "0x3A0",
    },
    1227: {
      op: "JUMP",
    },
    1228: {
      fn: "MarketPlace.placeBid",
      offset: [2627, 2846],
      op: "JUMPDEST",
      path: "0",
    },
    1229: {
      fn: "MarketPlace.placeBid",
      offset: [2868, 2877],
      op: "PUSH1",
      path: "0",
      statement: 7,
      value: "0x9",
    },
    1231: {
      fn: "MarketPlace.placeBid",
      offset: [2868, 2877],
      op: "SLOAD",
      path: "0",
    },
    1232: {
      fn: "MarketPlace.placeBid",
      offset: [2868, 2881],
      op: "PUSH2",
      path: "0",
      value: "0x4DA",
    },
    1235: {
      fn: "MarketPlace.placeBid",
      offset: [2868, 2881],
      op: "SWAP1",
      path: "0",
    },
    1236: {
      fn: "MarketPlace.placeBid",
      offset: [2880, 2881],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    1238: {
      fn: "MarketPlace.placeBid",
      offset: [2868, 2881],
      op: "PUSH2",
      path: "0",
      value: "0xDDC",
    },
    1241: {
      fn: "MarketPlace.placeBid",
      jump: "i",
      offset: [2868, 2881],
      op: "JUMP",
      path: "0",
    },
    1242: {
      fn: "MarketPlace.placeBid",
      offset: [2868, 2881],
      op: "JUMPDEST",
      path: "0",
    },
    1243: {
      fn: "MarketPlace.placeBid",
      offset: [2856, 2865],
      op: "PUSH1",
      path: "0",
      value: "0x9",
    },
    1245: {
      fn: "MarketPlace.placeBid",
      offset: [2856, 2881],
      op: "DUP2",
      path: "0",
    },
    1246: {
      fn: "MarketPlace.placeBid",
      offset: [2856, 2881],
      op: "DUP2",
      path: "0",
    },
    1247: {
      fn: "MarketPlace.placeBid",
      offset: [2856, 2881],
      op: "SSTORE",
      path: "0",
    },
    1248: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2918],
      op: "PUSH1",
      path: "0",
      statement: 8,
      value: "0x0",
    },
    1250: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2918],
      op: "SWAP2",
      path: "0",
    },
    1251: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2918],
      op: "DUP3",
      path: "0",
    },
    1252: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2918],
      op: "MSTORE",
      path: "0",
    },
    1253: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2907],
      op: "PUSH1",
      path: "0",
      value: "0xA",
    },
    1255: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2918],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1257: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2918],
      op: "SWAP1",
      path: "0",
    },
    1258: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2918],
      op: "DUP2",
      path: "0",
    },
    1259: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2918],
      op: "MSTORE",
      path: "0",
    },
    1260: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2918],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1262: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2918],
      op: "DUP1",
      path: "0",
    },
    1263: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2918],
      op: "DUP5",
      path: "0",
    },
    1264: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2918],
      op: "KECCAK256",
      path: "0",
    },
    1265: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2931],
      op: "DUP6",
      path: "0",
    },
    1266: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2931],
      op: "SWAP1",
      path: "0",
    },
    1267: {
      fn: "MarketPlace.placeBid",
      offset: [2891, 2931],
      op: "SSTORE",
      path: "0",
    },
    1268: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2948],
      op: "PUSH1",
      path: "0",
      statement: 9,
      value: "0xB",
    },
    1270: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "DUP1",
      path: "0",
    },
    1271: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "SLOAD",
      path: "0",
    },
    1272: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    1274: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "DUP2",
      path: "0",
    },
    1275: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "ADD",
      path: "0",
    },
    1276: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "SWAP1",
      path: "0",
    },
    1277: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "SWAP2",
      path: "0",
    },
    1278: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "SSTORE",
      path: "0",
    },
    1279: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "PUSH32",
      path: "0",
      value:
        "0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9",
    },
    1312: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "ADD",
      path: "0",
    },
    1313: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "DUP1",
      path: "0",
    },
    1314: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "SLOAD",
      path: "0",
    },
    1315: {
      op: "PUSH1",
      value: "0x1",
    },
    1317: {
      op: "PUSH1",
      value: "0x1",
    },
    1319: {
      op: "PUSH1",
      value: "0xA0",
    },
    1321: {
      op: "SHL",
    },
    1322: {
      op: "SUB",
    },
    1323: {
      op: "NOT",
    },
    1324: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "AND",
      path: "0",
    },
    1325: {
      fn: "MarketPlace.placeBid",
      offset: [2962, 2972],
      op: "CALLER",
      path: "0",
    },
    1326: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "OR",
      path: "0",
    },
    1327: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "SWAP1",
      path: "0",
    },
    1328: {
      fn: "MarketPlace.placeBid",
      offset: [2941, 2974],
      op: "SSTORE",
      path: "0",
    },
    1329: {
      fn: "MarketPlace.placeBid",
      offset: [3001, 3010],
      op: "SWAP2",
      path: "0",
      statement: 10,
    },
    1330: {
      fn: "MarketPlace.placeBid",
      offset: [3001, 3010],
      op: "SLOAD",
      path: "0",
    },
    1331: {
      fn: "MarketPlace.placeBid",
      offset: [2984, 3011],
      op: "DUP4",
      path: "0",
    },
    1332: {
      fn: "MarketPlace.placeBid",
      offset: [2984, 3011],
      op: "MSTORE",
      path: "0",
    },
    1333: {
      fn: "MarketPlace.placeBid",
      offset: [2984, 3000],
      op: "PUSH1",
      path: "0",
      value: "0xC",
    },
    1335: {
      fn: "MarketPlace.placeBid",
      offset: [2984, 3011],
      op: "DUP1",
      path: "0",
    },
    1336: {
      fn: "MarketPlace.placeBid",
      offset: [2984, 3011],
      op: "DUP3",
      path: "0",
    },
    1337: {
      fn: "MarketPlace.placeBid",
      offset: [2984, 3011],
      op: "MSTORE",
      path: "0",
    },
    1338: {
      fn: "MarketPlace.placeBid",
      offset: [2984, 3011],
      op: "DUP3",
      path: "0",
    },
    1339: {
      fn: "MarketPlace.placeBid",
      offset: [2984, 3011],
      op: "DUP5",
      path: "0",
    },
    1340: {
      fn: "MarketPlace.placeBid",
      offset: [2984, 3011],
      op: "KECCAK256",
      path: "0",
    },
    1341: {
      fn: "MarketPlace.placeBid",
      offset: [3014, 3023],
      op: "CALLVALUE",
      path: "0",
    },
    1342: {
      fn: "MarketPlace.placeBid",
      offset: [2984, 3023],
      op: "SWAP1",
      path: "0",
    },
    1343: {
      fn: "MarketPlace.placeBid",
      offset: [2984, 3023],
      op: "DUP2",
      path: "0",
    },
    1344: {
      fn: "MarketPlace.placeBid",
      offset: [2984, 3023],
      op: "SWAP1",
      path: "0",
    },
    1345: {
      fn: "MarketPlace.placeBid",
      offset: [2984, 3023],
      op: "SSTORE",
      path: "0",
    },
    1346: {
      fn: "MarketPlace.placeBid",
      offset: [3066, 3101],
      op: "DUP6",
      path: "0",
    },
    1347: {
      fn: "MarketPlace.placeBid",
      offset: [3066, 3101],
      op: "DUP6",
      path: "0",
    },
    1348: {
      fn: "MarketPlace.placeBid",
      offset: [3066, 3101],
      op: "MSTORE",
      path: "0",
    },
    1349: {
      fn: "MarketPlace.placeBid",
      offset: [3066, 3089],
      op: "PUSH1",
      path: "0",
      value: "0x7",
    },
    1351: {
      fn: "MarketPlace.placeBid",
      offset: [3066, 3101],
      op: "DUP4",
      path: "0",
    },
    1352: {
      fn: "MarketPlace.placeBid",
      offset: [3066, 3101],
      op: "MSTORE",
      path: "0",
    },
    1353: {
      fn: "MarketPlace.placeBid",
      offset: [3066, 3101],
      op: "DUP4",
      path: "0",
    },
    1354: {
      fn: "MarketPlace.placeBid",
      offset: [3066, 3101],
      op: "DUP6",
      path: "0",
    },
    1355: {
      fn: "MarketPlace.placeBid",
      offset: [3066, 3101],
      op: "KECCAK256",
      path: "0",
    },
    1356: {
      fn: "MarketPlace.placeBid",
      offset: [3066, 3101],
      op: "SLOAD",
      path: "0",
    },
    1357: {
      fn: "MarketPlace.placeBid",
      offset: [3049, 3102],
      op: "DUP6",
      path: "0",
    },
    1358: {
      fn: "MarketPlace.placeBid",
      offset: [3049, 3102],
      op: "MSTORE",
      path: "0",
    },
    1359: {
      fn: "MarketPlace.placeBid",
      offset: [3049, 3102],
      op: "SWAP2",
      path: "0",
    },
    1360: {
      fn: "MarketPlace.placeBid",
      offset: [3049, 3102],
      op: "MSTORE",
      path: "0",
    },
    1361: {
      fn: "MarketPlace.placeBid",
      offset: [3049, 3102],
      op: "SWAP2",
      path: "0",
    },
    1362: {
      fn: "MarketPlace.placeBid",
      offset: [3049, 3102],
      op: "KECCAK256",
      path: "0",
    },
    1363: {
      fn: "MarketPlace.placeBid",
      offset: [3049, 3102],
      op: "SLOAD",
      path: "0",
    },
    1364: {
      op: "LT",
    },
    1365: {
      fn: "MarketPlace.placeBid",
      offset: [3033, 3176],
      op: "ISZERO",
      path: "0",
    },
    1366: {
      fn: "MarketPlace.placeBid",
      offset: [3033, 3176],
      op: "PUSH2",
      path: "0",
      value: "0x56C",
    },
    1369: {
      fn: "MarketPlace.placeBid",
      offset: [3033, 3176],
      op: "JUMPI",
      path: "0",
    },
    1370: {
      fn: "MarketPlace.placeBid",
      offset: [3156, 3165],
      op: "PUSH1",
      path: "0",
      statement: 11,
      value: "0x9",
    },
    1372: {
      fn: "MarketPlace.placeBid",
      offset: [3156, 3165],
      op: "SLOAD",
      path: "0",
    },
    1373: {
      fn: "MarketPlace.placeBid",
      offset: [3118, 3153],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    1375: {
      fn: "MarketPlace.placeBid",
      offset: [3118, 3153],
      op: "DUP3",
      path: "0",
    },
    1376: {
      fn: "MarketPlace.placeBid",
      offset: [3118, 3153],
      op: "DUP2",
      path: "0",
    },
    1377: {
      fn: "MarketPlace.placeBid",
      offset: [3118, 3153],
      op: "MSTORE",
      path: "0",
    },
    1378: {
      fn: "MarketPlace.placeBid",
      offset: [3118, 3141],
      op: "PUSH1",
      path: "0",
      value: "0x7",
    },
    1380: {
      fn: "MarketPlace.placeBid",
      offset: [3118, 3153],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1382: {
      fn: "MarketPlace.placeBid",
      offset: [3118, 3153],
      op: "MSTORE",
      path: "0",
    },
    1383: {
      fn: "MarketPlace.placeBid",
      offset: [3118, 3153],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1385: {
      fn: "MarketPlace.placeBid",
      offset: [3118, 3153],
      op: "SWAP1",
      path: "0",
    },
    1386: {
      fn: "MarketPlace.placeBid",
      offset: [3118, 3153],
      op: "KECCAK256",
      path: "0",
    },
    1387: {
      fn: "MarketPlace.placeBid",
      offset: [3118, 3165],
      op: "SSTORE",
      path: "0",
    },
    1388: {
      fn: "MarketPlace.placeBid",
      offset: [3033, 3176],
      op: "JUMPDEST",
      path: "0",
    },
    1389: {
      fn: "MarketPlace.placeBid",
      offset: [2565, 3182],
      op: "POP",
      path: "0",
    },
    1390: {
      fn: "MarketPlace.placeBid",
      jump: "o",
      offset: [2565, 3182],
      op: "JUMP",
      path: "0",
    },
    1391: {
      offset: [194, 250],
      op: "JUMPDEST",
      path: "0",
    },
    1392: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x2",
    },
    1394: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1396: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "MSTORE",
      path: "0",
    },
    1397: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    1399: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP1",
      path: "0",
    },
    1400: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP2",
      path: "0",
    },
    1401: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "MSTORE",
      path: "0",
    },
    1402: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1404: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP1",
      path: "0",
    },
    1405: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "KECCAK256",
      path: "0",
    },
    1406: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP1",
      path: "0",
    },
    1407: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SLOAD",
      path: "0",
    },
    1408: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0x588",
    },
    1411: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP1",
      path: "0",
    },
    1412: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0xDF4",
    },
    1415: {
      fn: "MarketPlace.placeBid",
      jump: "i",
      offset: [194, 250],
      op: "JUMP",
      path: "0",
    },
    1416: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "JUMPDEST",
      path: "0",
    },
    1417: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP1",
      path: "0",
    },
    1418: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x1F",
    },
    1420: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "ADD",
      path: "0",
    },
    1421: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1423: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP1",
      path: "0",
    },
    1424: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP2",
      path: "0",
    },
    1425: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DIV",
      path: "0",
    },
    1426: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "MUL",
      path: "0",
    },
    1427: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1429: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "ADD",
      path: "0",
    },
    1430: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1432: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "MLOAD",
      path: "0",
    },
    1433: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP1",
      path: "0",
    },
    1434: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP2",
      path: "0",
    },
    1435: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "ADD",
      path: "0",
    },
    1436: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1438: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "MSTORE",
      path: "0",
    },
    1439: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP1",
      path: "0",
    },
    1440: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP3",
      path: "0",
    },
    1441: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP2",
      path: "0",
    },
    1442: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP1",
      path: "0",
    },
    1443: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP2",
      path: "0",
    },
    1444: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP2",
      path: "0",
    },
    1445: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "MSTORE",
      path: "0",
    },
    1446: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1448: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "ADD",
      path: "0",
    },
    1449: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP3",
      path: "0",
    },
    1450: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP1",
      path: "0",
    },
    1451: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SLOAD",
      path: "0",
    },
    1452: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0x5B4",
    },
    1455: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP1",
      path: "0",
    },
    1456: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0xDF4",
    },
    1459: {
      fn: "MarketPlace.placeBid",
      jump: "i",
      offset: [194, 250],
      op: "JUMP",
      path: "0",
    },
    1460: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "JUMPDEST",
      path: "0",
    },
    1461: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP1",
      path: "0",
    },
    1462: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "ISZERO",
      path: "0",
    },
    1463: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0x601",
    },
    1466: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "JUMPI",
      path: "0",
    },
    1467: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP1",
      path: "0",
    },
    1468: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x1F",
    },
    1470: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "LT",
      path: "0",
    },
    1471: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0x5D6",
    },
    1474: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "JUMPI",
      path: "0",
    },
    1475: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0x100",
    },
    1478: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP1",
      path: "0",
    },
    1479: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP4",
      path: "0",
    },
    1480: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SLOAD",
      path: "0",
    },
    1481: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DIV",
      path: "0",
    },
    1482: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "MUL",
      path: "0",
    },
    1483: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP4",
      path: "0",
    },
    1484: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "MSTORE",
      path: "0",
    },
    1485: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP2",
      path: "0",
    },
    1486: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1488: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "ADD",
      path: "0",
    },
    1489: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP2",
      path: "0",
    },
    1490: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0x601",
    },
    1493: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "JUMP",
      path: "0",
    },
    1494: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "JUMPDEST",
      path: "0",
    },
    1495: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP3",
      path: "0",
    },
    1496: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "ADD",
      path: "0",
    },
    1497: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP2",
      path: "0",
    },
    1498: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP1",
      path: "0",
    },
    1499: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    1501: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "MSTORE",
      path: "0",
    },
    1502: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1504: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    1506: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "KECCAK256",
      path: "0",
    },
    1507: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP1",
      path: "0",
    },
    1508: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "JUMPDEST",
      path: "0",
    },
    1509: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP2",
      path: "0",
    },
    1510: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SLOAD",
      path: "0",
    },
    1511: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP2",
      path: "0",
    },
    1512: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "MSTORE",
      path: "0",
    },
    1513: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP1",
      path: "0",
    },
    1514: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    1516: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "ADD",
      path: "0",
    },
    1517: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP1",
      path: "0",
    },
    1518: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1520: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "ADD",
      path: "0",
    },
    1521: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP1",
      path: "0",
    },
    1522: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP4",
      path: "0",
    },
    1523: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "GT",
      path: "0",
    },
    1524: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH2",
      path: "0",
      value: "0x5E4",
    },
    1527: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "JUMPI",
      path: "0",
    },
    1528: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP3",
      path: "0",
    },
    1529: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP1",
      path: "0",
    },
    1530: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SUB",
      path: "0",
    },
    1531: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "PUSH1",
      path: "0",
      value: "0x1F",
    },
    1533: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "AND",
      path: "0",
    },
    1534: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP3",
      path: "0",
    },
    1535: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "ADD",
      path: "0",
    },
    1536: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "SWAP2",
      path: "0",
    },
    1537: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "JUMPDEST",
      path: "0",
    },
    1538: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "POP",
      path: "0",
    },
    1539: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "POP",
      path: "0",
    },
    1540: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "POP",
      path: "0",
    },
    1541: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "POP",
      path: "0",
    },
    1542: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "POP",
      path: "0",
    },
    1543: {
      fn: "MarketPlace.placeBid",
      offset: [194, 250],
      op: "DUP2",
      path: "0",
    },
    1544: {
      fn: "MarketPlace.placeBid",
      jump: "o",
      offset: [194, 250],
      op: "JUMP",
      path: "0",
    },
    1545: {
      fn: "MarketPlace.createProduct",
      offset: [1042, 1638],
      op: "JUMPDEST",
      path: "0",
    },
    1546: {
      fn: "MarketPlace.createProduct",
      offset: [1166, 1179],
      op: "PUSH1",
      path: "0",
      statement: 12,
      value: "0x0",
    },
    1548: {
      fn: "MarketPlace.createProduct",
      offset: [1166, 1179],
      op: "SLOAD",
      path: "0",
    },
    1549: {
      fn: "MarketPlace.createProduct",
      offset: [1166, 1183],
      op: "PUSH2",
      path: "0",
      value: "0x617",
    },
    1552: {
      fn: "MarketPlace.createProduct",
      offset: [1166, 1183],
      op: "SWAP1",
      path: "0",
    },
    1553: {
      fn: "MarketPlace.createProduct",
      offset: [1182, 1183],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    1555: {
      fn: "MarketPlace.createProduct",
      offset: [1166, 1183],
      op: "PUSH2",
      path: "0",
      value: "0xDDC",
    },
    1558: {
      fn: "MarketPlace.createProduct",
      jump: "i",
      offset: [1166, 1183],
      op: "JUMP",
      path: "0",
    },
    1559: {
      fn: "MarketPlace.createProduct",
      offset: [1166, 1183],
      op: "JUMPDEST",
      path: "0",
    },
    1560: {
      fn: "MarketPlace.createProduct",
      offset: [1150, 1163],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    1562: {
      fn: "MarketPlace.createProduct",
      offset: [1150, 1183],
      op: "DUP2",
      path: "0",
    },
    1563: {
      fn: "MarketPlace.createProduct",
      offset: [1150, 1183],
      op: "DUP2",
      path: "0",
    },
    1564: {
      fn: "MarketPlace.createProduct",
      offset: [1150, 1183],
      op: "SSTORE",
      path: "0",
    },
    1565: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1223],
      op: "SWAP1",
      path: "0",
      statement: 13,
    },
    1566: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1223],
      op: "DUP2",
      path: "0",
    },
    1567: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1223],
      op: "MSTORE",
      path: "0",
    },
    1568: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1208],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    1570: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1223],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1572: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1223],
      op: "SWAP1",
      path: "0",
    },
    1573: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1223],
      op: "DUP2",
      path: "0",
    },
    1574: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1223],
      op: "MSTORE",
      path: "0",
    },
    1575: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1223],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1577: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1223],
      op: "SWAP1",
      path: "0",
    },
    1578: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1223],
      op: "SWAP2",
      path: "0",
    },
    1579: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1223],
      op: "KECCAK256",
      path: "0",
    },
    1580: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1231],
      op: "DUP5",
      path: "0",
    },
    1581: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1231],
      op: "MLOAD",
      path: "0",
    },
    1582: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1231],
      op: "PUSH2",
      path: "0",
      value: "0x639",
    },
    1585: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1231],
      op: "SWAP3",
      path: "0",
    },
    1586: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1231],
      op: "DUP7",
      path: "0",
    },
    1587: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1231],
      op: "ADD",
      path: "0",
    },
    1588: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1231],
      op: "SWAP1",
      path: "0",
    },
    1589: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1231],
      op: "PUSH2",
      path: "0",
      value: "0xAE3",
    },
    1592: {
      fn: "MarketPlace.createProduct",
      jump: "i",
      offset: [1193, 1231],
      op: "JUMP",
      path: "0",
    },
    1593: {
      fn: "MarketPlace.createProduct",
      offset: [1193, 1231],
      op: "JUMPDEST",
      path: "0",
    },
    1594: {
      op: "POP",
    },
    1595: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1278],
      op: "PUSH1",
      path: "0",
      statement: 14,
      value: "0x0",
    },
    1597: {
      fn: "MarketPlace.createProduct",
      offset: [1264, 1277],
      op: "DUP1",
      path: "0",
    },
    1598: {
      fn: "MarketPlace.createProduct",
      offset: [1264, 1277],
      op: "SLOAD",
      path: "0",
    },
    1599: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1278],
      op: "DUP2",
      path: "0",
    },
    1600: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1278],
      op: "MSTORE",
      path: "0",
    },
    1601: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1263],
      op: "PUSH1",
      path: "0",
      value: "0x2",
    },
    1603: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1278],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1605: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1278],
      op: "SWAP1",
      path: "0",
    },
    1606: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1278],
      op: "DUP2",
      path: "0",
    },
    1607: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1278],
      op: "MSTORE",
      path: "0",
    },
    1608: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1278],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1610: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1278],
      op: "SWAP1",
      path: "0",
    },
    1611: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1278],
      op: "SWAP2",
      path: "0",
    },
    1612: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1278],
      op: "KECCAK256",
      path: "0",
    },
    1613: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1293],
      op: "DUP4",
      path: "0",
    },
    1614: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1293],
      op: "MLOAD",
      path: "0",
    },
    1615: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1293],
      op: "PUSH2",
      path: "0",
      value: "0x65A",
    },
    1618: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1293],
      op: "SWAP3",
      path: "0",
    },
    1619: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1293],
      op: "DUP6",
      path: "0",
    },
    1620: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1293],
      op: "ADD",
      path: "0",
    },
    1621: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1293],
      op: "SWAP1",
      path: "0",
    },
    1622: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1293],
      op: "PUSH2",
      path: "0",
      value: "0xAE3",
    },
    1625: {
      fn: "MarketPlace.createProduct",
      jump: "i",
      offset: [1241, 1293],
      op: "JUMP",
      path: "0",
    },
    1626: {
      fn: "MarketPlace.createProduct",
      offset: [1241, 1293],
      op: "JUMPDEST",
      path: "0",
    },
    1627: {
      op: "POP",
    },
    1628: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1337],
      op: "PUSH1",
      path: "0",
      statement: 15,
      value: "0x0",
    },
    1630: {
      fn: "MarketPlace.createProduct",
      offset: [1323, 1336],
      op: "DUP1",
      path: "0",
    },
    1631: {
      fn: "MarketPlace.createProduct",
      offset: [1323, 1336],
      op: "SLOAD",
      path: "0",
    },
    1632: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1337],
      op: "DUP2",
      path: "0",
    },
    1633: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1337],
      op: "MSTORE",
      path: "0",
    },
    1634: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1322],
      op: "PUSH1",
      path: "0",
      value: "0x3",
    },
    1636: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1337],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1638: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1337],
      op: "SWAP1",
      path: "0",
    },
    1639: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1337],
      op: "DUP2",
      path: "0",
    },
    1640: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1337],
      op: "MSTORE",
      path: "0",
    },
    1641: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1337],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1643: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1337],
      op: "DUP1",
      path: "0",
    },
    1644: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1337],
      op: "DUP4",
      path: "0",
    },
    1645: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1337],
      op: "KECCAK256",
      path: "0",
    },
    1646: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1349],
      op: "DUP5",
      path: "0",
    },
    1647: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1349],
      op: "SWAP1",
      path: "0",
    },
    1648: {
      fn: "MarketPlace.createProduct",
      offset: [1303, 1349],
      op: "SSTORE",
      path: "0",
    },
    1649: {
      fn: "MarketPlace.createProduct",
      offset: [1381, 1394],
      op: "DUP3",
      path: "0",
      statement: 16,
    },
    1650: {
      fn: "MarketPlace.createProduct",
      offset: [1381, 1394],
      op: "SLOAD",
      path: "0",
    },
    1651: {
      fn: "MarketPlace.createProduct",
      offset: [1359, 1395],
      op: "DUP4",
      path: "0",
    },
    1652: {
      fn: "MarketPlace.createProduct",
      offset: [1359, 1395],
      op: "MSTORE",
      path: "0",
    },
    1653: {
      fn: "MarketPlace.createProduct",
      offset: [1359, 1380],
      op: "PUSH1",
      path: "0",
      value: "0x6",
    },
    1655: {
      fn: "MarketPlace.createProduct",
      offset: [1359, 1395],
      op: "DUP3",
      path: "0",
    },
    1656: {
      fn: "MarketPlace.createProduct",
      offset: [1359, 1395],
      op: "MSTORE",
      path: "0",
    },
    1657: {
      fn: "MarketPlace.createProduct",
      offset: [1359, 1395],
      op: "DUP1",
      path: "0",
    },
    1658: {
      fn: "MarketPlace.createProduct",
      offset: [1359, 1395],
      op: "DUP4",
      path: "0",
    },
    1659: {
      fn: "MarketPlace.createProduct",
      offset: [1359, 1395],
      op: "KECCAK256",
      path: "0",
    },
    1660: {
      fn: "MarketPlace.createProduct",
      offset: [1359, 1399],
      op: "DUP4",
      path: "0",
    },
    1661: {
      fn: "MarketPlace.createProduct",
      offset: [1359, 1399],
      op: "SWAP1",
      path: "0",
    },
    1662: {
      fn: "MarketPlace.createProduct",
      offset: [1359, 1399],
      op: "SSTORE",
      path: "0",
    },
    1663: {
      fn: "MarketPlace.createProduct",
      offset: [1433, 1446],
      op: "DUP3",
      path: "0",
      statement: 17,
    },
    1664: {
      fn: "MarketPlace.createProduct",
      offset: [1433, 1446],
      op: "SLOAD",
      path: "0",
    },
    1665: {
      fn: "MarketPlace.createProduct",
      offset: [1409, 1447],
      op: "DUP4",
      path: "0",
    },
    1666: {
      fn: "MarketPlace.createProduct",
      offset: [1409, 1447],
      op: "MSTORE",
      path: "0",
    },
    1667: {
      fn: "MarketPlace.createProduct",
      offset: [1409, 1432],
      op: "PUSH1",
      path: "0",
      value: "0x5",
    },
    1669: {
      fn: "MarketPlace.createProduct",
      offset: [1409, 1447],
      op: "DUP3",
      path: "0",
    },
    1670: {
      fn: "MarketPlace.createProduct",
      offset: [1409, 1447],
      op: "MSTORE",
      path: "0",
    },
    1671: {
      fn: "MarketPlace.createProduct",
      offset: [1409, 1447],
      op: "DUP1",
      path: "0",
    },
    1672: {
      fn: "MarketPlace.createProduct",
      offset: [1409, 1447],
      op: "DUP4",
      path: "0",
    },
    1673: {
      fn: "MarketPlace.createProduct",
      offset: [1409, 1447],
      op: "KECCAK256",
      path: "0",
    },
    1674: {
      fn: "MarketPlace.createProduct",
      offset: [1409, 1455],
      op: "DUP1",
      path: "0",
    },
    1675: {
      fn: "MarketPlace.createProduct",
      offset: [1409, 1455],
      op: "SLOAD",
      path: "0",
    },
    1676: {
      op: "PUSH1",
      value: "0xFF",
    },
    1678: {
      op: "NOT",
    },
    1679: {
      fn: "MarketPlace.createProduct",
      offset: [1409, 1455],
      op: "AND",
      path: "0",
    },
    1680: {
      fn: "MarketPlace.createProduct",
      offset: [1409, 1455],
      op: "SWAP1",
      path: "0",
    },
    1681: {
      fn: "MarketPlace.createProduct",
      offset: [1409, 1455],
      op: "SSTORE",
      path: "0",
    },
    1682: {
      fn: "MarketPlace.createProduct",
      offset: [1490, 1503],
      op: "DUP3",
      path: "0",
      statement: 18,
    },
    1683: {
      fn: "MarketPlace.createProduct",
      offset: [1490, 1503],
      op: "SLOAD",
      path: "0",
    },
    1684: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1504],
      op: "DUP4",
      path: "0",
    },
    1685: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1504],
      op: "MSTORE",
      path: "0",
    },
    1686: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1489],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    1688: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1504],
      op: "DUP3",
      path: "0",
    },
    1689: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1504],
      op: "MSTORE",
      path: "0",
    },
    1690: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1504],
      op: "DUP1",
      path: "0",
    },
    1691: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1504],
      op: "DUP4",
      path: "0",
    },
    1692: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1504],
      op: "KECCAK256",
      path: "0",
    },
    1693: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1517],
      op: "DUP1",
      path: "0",
    },
    1694: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1517],
      op: "SLOAD",
      path: "0",
    },
    1695: {
      op: "PUSH1",
      value: "0x1",
    },
    1697: {
      op: "PUSH1",
      value: "0x1",
    },
    1699: {
      op: "PUSH1",
      value: "0xA0",
    },
    1701: {
      op: "SHL",
    },
    1702: {
      op: "SUB",
    },
    1703: {
      op: "NOT",
    },
    1704: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1517],
      op: "AND",
      path: "0",
    },
    1705: {
      fn: "MarketPlace.createProduct",
      offset: [1507, 1517],
      op: "CALLER",
      path: "0",
    },
    1706: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1517],
      op: "OR",
      path: "0",
    },
    1707: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1517],
      op: "SWAP1",
      path: "0",
    },
    1708: {
      fn: "MarketPlace.createProduct",
      offset: [1473, 1517],
      op: "SSTORE",
      path: "0",
    },
    1709: {
      fn: "MarketPlace.createProduct",
      offset: [1551, 1564],
      op: "DUP3",
      path: "0",
      statement: 19,
    },
    1710: {
      fn: "MarketPlace.createProduct",
      offset: [1551, 1564],
      op: "SLOAD",
      path: "0",
    },
    1711: {
      fn: "MarketPlace.createProduct",
      offset: [1527, 1565],
      op: "DUP4",
      path: "0",
    },
    1712: {
      fn: "MarketPlace.createProduct",
      offset: [1527, 1565],
      op: "MSTORE",
      path: "0",
    },
    1713: {
      fn: "MarketPlace.createProduct",
      offset: [1527, 1550],
      op: "PUSH1",
      path: "0",
      value: "0x7",
    },
    1715: {
      fn: "MarketPlace.createProduct",
      offset: [1527, 1565],
      op: "DUP3",
      path: "0",
    },
    1716: {
      fn: "MarketPlace.createProduct",
      offset: [1527, 1565],
      op: "MSTORE",
      path: "0",
    },
    1717: {
      fn: "MarketPlace.createProduct",
      offset: [1527, 1565],
      op: "DUP1",
      path: "0",
    },
    1718: {
      fn: "MarketPlace.createProduct",
      offset: [1527, 1565],
      op: "DUP4",
      path: "0",
    },
    1719: {
      fn: "MarketPlace.createProduct",
      offset: [1527, 1565],
      op: "KECCAK256",
      path: "0",
    },
    1720: {
      fn: "MarketPlace.createProduct",
      offset: [1527, 1569],
      op: "DUP4",
      path: "0",
    },
    1721: {
      fn: "MarketPlace.createProduct",
      offset: [1527, 1569],
      op: "SWAP1",
      path: "0",
    },
    1722: {
      fn: "MarketPlace.createProduct",
      offset: [1527, 1569],
      op: "SSTORE",
      path: "0",
    },
    1723: {
      fn: "MarketPlace.createProduct",
      offset: [1617, 1630],
      op: "SWAP2",
      path: "0",
      statement: 20,
    },
    1724: {
      fn: "MarketPlace.createProduct",
      offset: [1617, 1630],
      op: "SLOAD",
      path: "0",
    },
    1725: {
      fn: "MarketPlace.createProduct",
      offset: [1602, 1631],
      op: "SWAP2",
      path: "0",
    },
    1726: {
      fn: "MarketPlace.createProduct",
      offset: [1602, 1631],
      op: "MLOAD",
      path: "0",
    },
    1727: {
      op: "SWAP2",
    },
    1728: {
      op: "DUP3",
    },
    1729: {
      op: "MSTORE",
    },
    1730: {
      fn: "MarketPlace.createProduct",
      offset: [1602, 1631],
      op: "PUSH32",
      path: "0",
      value:
        "0x20C578752AF1D484981236C2162B1209554DCD31E8144357A880D134C99643AE",
    },
    1763: {
      fn: "MarketPlace.createProduct",
      offset: [1602, 1631],
      op: "SWAP2",
      path: "0",
    },
    1764: {
      op: "ADD",
    },
    1765: {
      fn: "MarketPlace.createProduct",
      offset: [1602, 1631],
      op: "PUSH2",
      path: "0",
      value: "0x403",
    },
    1768: {
      op: "JUMP",
    },
    1769: {
      offset: [139, 188],
      op: "JUMPDEST",
      path: "0",
    },
    1770: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    1772: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1774: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "MSTORE",
      path: "0",
    },
    1775: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    1777: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "SWAP1",
      path: "0",
    },
    1778: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "DUP2",
      path: "0",
    },
    1779: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "MSTORE",
      path: "0",
    },
    1780: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1782: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "SWAP1",
      path: "0",
    },
    1783: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "KECCAK256",
      path: "0",
    },
    1784: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "DUP1",
      path: "0",
    },
    1785: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "SLOAD",
      path: "0",
    },
    1786: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "PUSH2",
      path: "0",
      value: "0x588",
    },
    1789: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "SWAP1",
      path: "0",
    },
    1790: {
      fn: "MarketPlace.createProduct",
      offset: [139, 188],
      op: "PUSH2",
      path: "0",
      value: "0xDF4",
    },
    1793: {
      fn: "MarketPlace.createProduct",
      jump: "i",
      offset: [139, 188],
      op: "JUMP",
      path: "0",
    },
    1794: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "JUMPDEST",
      path: "0",
    },
    1795: {
      fn: "MarketPlace.getProductData",
      offset: [1743, 1750],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    1797: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "DUP2",
      path: "0",
      statement: 21,
    },
    1798: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "DUP2",
      path: "0",
    },
    1799: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "MSTORE",
      path: "0",
    },
    1800: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1794],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    1802: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1804: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "SWAP1",
      path: "0",
    },
    1805: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "DUP2",
      path: "0",
    },
    1806: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "MSTORE",
      path: "0",
    },
    1807: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1809: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "DUP1",
      path: "0",
    },
    1810: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "DUP4",
      path: "0",
    },
    1811: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "KECCAK256",
      path: "0",
    },
    1812: {
      fn: "MarketPlace.getProductData",
      offset: [1808, 1830],
      op: "PUSH1",
      path: "0",
      value: "0x2",
    },
    1814: {
      fn: "MarketPlace.getProductData",
      offset: [1808, 1842],
      op: "DUP4",
      path: "0",
    },
    1815: {
      fn: "MarketPlace.getProductData",
      offset: [1808, 1842],
      op: "MSTORE",
      path: "0",
    },
    1816: {
      fn: "MarketPlace.getProductData",
      offset: [1808, 1842],
      op: "DUP2",
      path: "0",
    },
    1817: {
      fn: "MarketPlace.getProductData",
      offset: [1808, 1842],
      op: "DUP5",
      path: "0",
    },
    1818: {
      fn: "MarketPlace.getProductData",
      offset: [1808, 1842],
      op: "KECCAK256",
      path: "0",
    },
    1819: {
      fn: "MarketPlace.getProductData",
      offset: [1844, 1863],
      op: "PUSH1",
      path: "0",
      value: "0x3",
    },
    1821: {
      fn: "MarketPlace.getProductData",
      offset: [1844, 1875],
      op: "DUP5",
      path: "0",
    },
    1822: {
      fn: "MarketPlace.getProductData",
      offset: [1844, 1875],
      op: "MSTORE",
      path: "0",
    },
    1823: {
      fn: "MarketPlace.getProductData",
      offset: [1844, 1875],
      op: "DUP3",
      path: "0",
    },
    1824: {
      fn: "MarketPlace.getProductData",
      offset: [1844, 1875],
      op: "DUP6",
      path: "0",
    },
    1825: {
      fn: "MarketPlace.getProductData",
      offset: [1844, 1875],
      op: "KECCAK256",
      path: "0",
    },
    1826: {
      fn: "MarketPlace.getProductData",
      offset: [1844, 1875],
      op: "SLOAD",
      path: "0",
    },
    1827: {
      fn: "MarketPlace.getProductData",
      offset: [1877, 1893],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    1829: {
      fn: "MarketPlace.getProductData",
      offset: [1877, 1905],
      op: "SWAP1",
      path: "0",
    },
    1830: {
      fn: "MarketPlace.getProductData",
      offset: [1877, 1905],
      op: "SWAP5",
      path: "0",
    },
    1831: {
      fn: "MarketPlace.getProductData",
      offset: [1877, 1905],
      op: "MSTORE",
      path: "0",
    },
    1832: {
      fn: "MarketPlace.getProductData",
      offset: [1877, 1905],
      op: "SWAP2",
      path: "0",
    },
    1833: {
      fn: "MarketPlace.getProductData",
      offset: [1877, 1905],
      op: "DUP5",
      path: "0",
    },
    1834: {
      fn: "MarketPlace.getProductData",
      offset: [1877, 1905],
      op: "KECCAK256",
      path: "0",
    },
    1835: {
      fn: "MarketPlace.getProductData",
      offset: [1877, 1905],
      op: "SLOAD",
      path: "0",
    },
    1836: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP2",
      path: "0",
    },
    1837: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SLOAD",
      path: "0",
    },
    1838: {
      fn: "MarketPlace.getProductData",
      offset: [1713, 1726],
      op: "PUSH1",
      path: "0",
      value: "0x60",
    },
    1840: {
      fn: "MarketPlace.getProductData",
      offset: [1713, 1726],
      op: "SWAP6",
      path: "0",
    },
    1841: {
      fn: "MarketPlace.getProductData",
      offset: [1713, 1726],
      op: "DUP7",
      path: "0",
    },
    1842: {
      fn: "MarketPlace.getProductData",
      offset: [1713, 1726],
      op: "SWAP6",
      path: "0",
    },
    1843: {
      fn: "MarketPlace.getProductData",
      offset: [1743, 1750],
      op: "SWAP1",
      path: "0",
    },
    1844: {
      fn: "MarketPlace.getProductData",
      offset: [1743, 1750],
      op: "SWAP5",
      path: "0",
    },
    1845: {
      fn: "MarketPlace.getProductData",
      offset: [1743, 1750],
      op: "DUP6",
      path: "0",
    },
    1846: {
      fn: "MarketPlace.getProductData",
      offset: [1743, 1750],
      op: "SWAP5",
      path: "0",
    },
    1847: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "SWAP4",
      path: "0",
    },
    1848: {
      fn: "MarketPlace.getProductData",
      offset: [1808, 1842],
      op: "SWAP1",
      path: "0",
    },
    1849: {
      fn: "MarketPlace.getProductData",
      offset: [1808, 1842],
      op: "SWAP3",
      path: "0",
    },
    1850: {
      op: "PUSH1",
      value: "0x1",
    },
    1852: {
      op: "PUSH1",
      value: "0x1",
    },
    1854: {
      op: "PUSH1",
      value: "0xA0",
    },
    1856: {
      op: "SHL",
    },
    1857: {
      op: "SUB",
    },
    1858: {
      fn: "MarketPlace.getProductData",
      offset: [1877, 1905],
      op: "SWAP1",
      path: "0",
    },
    1859: {
      fn: "MarketPlace.getProductData",
      offset: [1877, 1905],
      op: "SWAP2",
      path: "0",
    },
    1860: {
      fn: "MarketPlace.getProductData",
      offset: [1877, 1905],
      op: "AND",
      path: "0",
    },
    1861: {
      fn: "MarketPlace.getProductData",
      offset: [1877, 1905],
      op: "SWAP1",
      path: "0",
    },
    1862: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "DUP5",
      path: "0",
    },
    1863: {
      fn: "MarketPlace.getProductData",
      offset: [1779, 1806],
      op: "SWAP1",
      path: "0",
    },
    1864: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x750",
    },
    1867: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    1868: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0xDF4",
    },
    1871: {
      fn: "MarketPlace.getProductData",
      jump: "i",
      offset: [1771, 1906],
      op: "JUMP",
      path: "0",
    },
    1872: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPDEST",
      path: "0",
    },
    1873: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    1874: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x1F",
    },
    1876: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    1877: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1879: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    1880: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP2",
      path: "0",
    },
    1881: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DIV",
      path: "0",
    },
    1882: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MUL",
      path: "0",
    },
    1883: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1885: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    1886: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1888: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MLOAD",
      path: "0",
    },
    1889: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    1890: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP2",
      path: "0",
    },
    1891: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    1892: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    1894: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MSTORE",
      path: "0",
    },
    1895: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    1896: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP3",
      path: "0",
    },
    1897: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP2",
      path: "0",
    },
    1898: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    1899: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP2",
      path: "0",
    },
    1900: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP2",
      path: "0",
    },
    1901: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MSTORE",
      path: "0",
    },
    1902: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1904: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    1905: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP3",
      path: "0",
    },
    1906: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    1907: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SLOAD",
      path: "0",
    },
    1908: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x77C",
    },
    1911: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    1912: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0xDF4",
    },
    1915: {
      fn: "MarketPlace.getProductData",
      jump: "i",
      offset: [1771, 1906],
      op: "JUMP",
      path: "0",
    },
    1916: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPDEST",
      path: "0",
    },
    1917: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    1918: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ISZERO",
      path: "0",
    },
    1919: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x7C9",
    },
    1922: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPI",
      path: "0",
    },
    1923: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    1924: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x1F",
    },
    1926: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "LT",
      path: "0",
    },
    1927: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x79E",
    },
    1930: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPI",
      path: "0",
    },
    1931: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x100",
    },
    1934: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    1935: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP4",
      path: "0",
    },
    1936: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SLOAD",
      path: "0",
    },
    1937: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DIV",
      path: "0",
    },
    1938: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MUL",
      path: "0",
    },
    1939: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP4",
      path: "0",
    },
    1940: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MSTORE",
      path: "0",
    },
    1941: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP2",
      path: "0",
    },
    1942: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1944: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    1945: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP2",
      path: "0",
    },
    1946: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x7C9",
    },
    1949: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMP",
      path: "0",
    },
    1950: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPDEST",
      path: "0",
    },
    1951: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP3",
      path: "0",
    },
    1952: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    1953: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP2",
      path: "0",
    },
    1954: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    1955: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    1957: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MSTORE",
      path: "0",
    },
    1958: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1960: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    1962: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "KECCAK256",
      path: "0",
    },
    1963: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    1964: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPDEST",
      path: "0",
    },
    1965: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP2",
      path: "0",
    },
    1966: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SLOAD",
      path: "0",
    },
    1967: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP2",
      path: "0",
    },
    1968: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MSTORE",
      path: "0",
    },
    1969: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    1970: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    1972: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    1973: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    1974: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    1976: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    1977: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    1978: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP4",
      path: "0",
    },
    1979: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "GT",
      path: "0",
    },
    1980: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x7AC",
    },
    1983: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPI",
      path: "0",
    },
    1984: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP3",
      path: "0",
    },
    1985: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    1986: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SUB",
      path: "0",
    },
    1987: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x1F",
    },
    1989: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "AND",
      path: "0",
    },
    1990: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP3",
      path: "0",
    },
    1991: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    1992: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP2",
      path: "0",
    },
    1993: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPDEST",
      path: "0",
    },
    1994: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    1995: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    1996: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    1997: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    1998: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    1999: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP4",
      path: "0",
    },
    2000: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    2001: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP3",
      path: "0",
    },
    2002: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    2003: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SLOAD",
      path: "0",
    },
    2004: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x7DC",
    },
    2007: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    2008: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0xDF4",
    },
    2011: {
      fn: "MarketPlace.getProductData",
      jump: "i",
      offset: [1771, 1906],
      op: "JUMP",
      path: "0",
    },
    2012: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPDEST",
      path: "0",
    },
    2013: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    2014: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x1F",
    },
    2016: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    2017: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2019: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    2020: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP2",
      path: "0",
    },
    2021: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DIV",
      path: "0",
    },
    2022: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MUL",
      path: "0",
    },
    2023: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2025: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    2026: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    2028: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MLOAD",
      path: "0",
    },
    2029: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    2030: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP2",
      path: "0",
    },
    2031: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    2032: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    2034: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MSTORE",
      path: "0",
    },
    2035: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    2036: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP3",
      path: "0",
    },
    2037: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP2",
      path: "0",
    },
    2038: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    2039: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP2",
      path: "0",
    },
    2040: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP2",
      path: "0",
    },
    2041: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MSTORE",
      path: "0",
    },
    2042: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2044: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    2045: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP3",
      path: "0",
    },
    2046: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    2047: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SLOAD",
      path: "0",
    },
    2048: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x808",
    },
    2051: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    2052: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0xDF4",
    },
    2055: {
      fn: "MarketPlace.getProductData",
      jump: "i",
      offset: [1771, 1906],
      op: "JUMP",
      path: "0",
    },
    2056: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPDEST",
      path: "0",
    },
    2057: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    2058: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ISZERO",
      path: "0",
    },
    2059: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x855",
    },
    2062: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPI",
      path: "0",
    },
    2063: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    2064: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x1F",
    },
    2066: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "LT",
      path: "0",
    },
    2067: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x82A",
    },
    2070: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPI",
      path: "0",
    },
    2071: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x100",
    },
    2074: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    2075: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP4",
      path: "0",
    },
    2076: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SLOAD",
      path: "0",
    },
    2077: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DIV",
      path: "0",
    },
    2078: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MUL",
      path: "0",
    },
    2079: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP4",
      path: "0",
    },
    2080: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MSTORE",
      path: "0",
    },
    2081: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP2",
      path: "0",
    },
    2082: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2084: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    2085: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP2",
      path: "0",
    },
    2086: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x855",
    },
    2089: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMP",
      path: "0",
    },
    2090: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPDEST",
      path: "0",
    },
    2091: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP3",
      path: "0",
    },
    2092: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    2093: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP2",
      path: "0",
    },
    2094: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    2095: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2097: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MSTORE",
      path: "0",
    },
    2098: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2100: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2102: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "KECCAK256",
      path: "0",
    },
    2103: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    2104: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPDEST",
      path: "0",
    },
    2105: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP2",
      path: "0",
    },
    2106: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SLOAD",
      path: "0",
    },
    2107: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP2",
      path: "0",
    },
    2108: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "MSTORE",
      path: "0",
    },
    2109: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    2110: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    2112: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    2113: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    2114: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2116: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    2117: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP1",
      path: "0",
    },
    2118: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP4",
      path: "0",
    },
    2119: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "GT",
      path: "0",
    },
    2120: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH2",
      path: "0",
      value: "0x838",
    },
    2123: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPI",
      path: "0",
    },
    2124: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP3",
      path: "0",
    },
    2125: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP1",
      path: "0",
    },
    2126: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SUB",
      path: "0",
    },
    2127: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "PUSH1",
      path: "0",
      value: "0x1F",
    },
    2129: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "AND",
      path: "0",
    },
    2130: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "DUP3",
      path: "0",
    },
    2131: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "ADD",
      path: "0",
    },
    2132: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP2",
      path: "0",
    },
    2133: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "JUMPDEST",
      path: "0",
    },
    2134: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    2135: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    2136: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    2137: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    2138: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    2139: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP3",
      path: "0",
    },
    2140: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    2141: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP4",
      path: "0",
    },
    2142: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    2143: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP4",
      path: "0",
    },
    2144: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    2145: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP4",
      path: "0",
    },
    2146: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    2147: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "SWAP4",
      path: "0",
    },
    2148: {
      fn: "MarketPlace.getProductData",
      offset: [1771, 1906],
      op: "POP",
      path: "0",
    },
    2149: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "SWAP2",
      path: "0",
    },
    2150: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "SWAP4",
      path: "0",
    },
    2151: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "POP",
      path: "0",
    },
    2152: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "SWAP2",
      path: "0",
    },
    2153: {
      fn: "MarketPlace.getProductData",
      offset: [1647, 1913],
      op: "SWAP4",
      path: "0",
    },
    2154: {
      fn: "MarketPlace.getProductData",
      jump: "o",
      offset: [1647, 1913],
      op: "JUMP",
      path: "0",
    },
    2155: {
      fn: "MarketPlace.closeBid",
      offset: [3191, 4217],
      op: "JUMPDEST",
      path: "0",
    },
    2156: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3289],
      op: "PUSH1",
      path: "0",
      statement: 22,
      value: "0x0",
    },
    2158: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3289],
      op: "DUP2",
      path: "0",
    },
    2159: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3289],
      op: "DUP2",
      path: "0",
    },
    2160: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3289],
      op: "MSTORE",
      path: "0",
    },
    2161: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3277],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    2163: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3289],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2165: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3289],
      op: "MSTORE",
      path: "0",
    },
    2166: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3289],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    2168: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3289],
      op: "SWAP1",
      path: "0",
    },
    2169: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3289],
      op: "KECCAK256",
      path: "0",
    },
    2170: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3289],
      op: "SLOAD",
      path: "0",
    },
    2171: {
      op: "PUSH1",
      value: "0x1",
    },
    2173: {
      op: "PUSH1",
      value: "0x1",
    },
    2175: {
      op: "PUSH1",
      value: "0xA0",
    },
    2177: {
      op: "SHL",
    },
    2178: {
      op: "SUB",
    },
    2179: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3289],
      op: "AND",
      path: "0",
    },
    2180: {
      fn: "MarketPlace.closeBid",
      offset: [3293, 3303],
      op: "CALLER",
      path: "0",
    },
    2181: {
      branch: 35,
      fn: "MarketPlace.closeBid",
      offset: [3261, 3303],
      op: "EQ",
      path: "0",
    },
    2182: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3364],
      op: "DUP1",
      path: "0",
    },
    2183: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3364],
      op: "ISZERO",
      path: "0",
    },
    2184: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3364],
      op: "PUSH2",
      path: "0",
      value: "0x8AB",
    },
    2187: {
      branch: 35,
      fn: "MarketPlace.closeBid",
      offset: [3261, 3364],
      op: "JUMPI",
      path: "0",
    },
    2188: {
      op: "POP",
    },
    2189: {
      fn: "MarketPlace.closeBid",
      offset: [3363, 3364],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2191: {
      fn: "MarketPlace.closeBid",
      offset: [3324, 3359],
      op: "DUP2",
      path: "0",
    },
    2192: {
      fn: "MarketPlace.closeBid",
      offset: [3324, 3359],
      op: "DUP2",
      path: "0",
    },
    2193: {
      fn: "MarketPlace.closeBid",
      offset: [3324, 3359],
      op: "MSTORE",
      path: "0",
    },
    2194: {
      fn: "MarketPlace.closeBid",
      offset: [3324, 3347],
      op: "PUSH1",
      path: "0",
      value: "0x7",
    },
    2196: {
      fn: "MarketPlace.closeBid",
      offset: [3324, 3359],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2198: {
      fn: "MarketPlace.closeBid",
      offset: [3324, 3359],
      op: "SWAP1",
      path: "0",
    },
    2199: {
      fn: "MarketPlace.closeBid",
      offset: [3324, 3359],
      op: "DUP2",
      path: "0",
    },
    2200: {
      fn: "MarketPlace.closeBid",
      offset: [3324, 3359],
      op: "MSTORE",
      path: "0",
    },
    2201: {
      fn: "MarketPlace.closeBid",
      offset: [3324, 3359],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    2203: {
      fn: "MarketPlace.closeBid",
      offset: [3324, 3359],
      op: "DUP1",
      path: "0",
    },
    2204: {
      fn: "MarketPlace.closeBid",
      offset: [3324, 3359],
      op: "DUP4",
      path: "0",
    },
    2205: {
      fn: "MarketPlace.closeBid",
      offset: [3324, 3359],
      op: "KECCAK256",
      path: "0",
    },
    2206: {
      fn: "MarketPlace.closeBid",
      offset: [3324, 3359],
      op: "SLOAD",
      path: "0",
    },
    2207: {
      fn: "MarketPlace.closeBid",
      offset: [3307, 3360],
      op: "DUP4",
      path: "0",
    },
    2208: {
      fn: "MarketPlace.closeBid",
      offset: [3307, 3360],
      op: "MSTORE",
      path: "0",
    },
    2209: {
      fn: "MarketPlace.closeBid",
      offset: [3307, 3323],
      op: "PUSH1",
      path: "0",
      value: "0xC",
    },
    2211: {
      fn: "MarketPlace.closeBid",
      offset: [3307, 3360],
      op: "SWAP1",
      path: "0",
    },
    2212: {
      fn: "MarketPlace.closeBid",
      offset: [3307, 3360],
      op: "SWAP2",
      path: "0",
    },
    2213: {
      fn: "MarketPlace.closeBid",
      offset: [3307, 3360],
      op: "MSTORE",
      path: "0",
    },
    2214: {
      fn: "MarketPlace.closeBid",
      offset: [3307, 3360],
      op: "SWAP1",
      path: "0",
    },
    2215: {
      fn: "MarketPlace.closeBid",
      offset: [3307, 3360],
      op: "KECCAK256",
      path: "0",
    },
    2216: {
      fn: "MarketPlace.closeBid",
      offset: [3307, 3360],
      op: "SLOAD",
      path: "0",
    },
    2217: {
      fn: "MarketPlace.closeBid",
      offset: [3307, 3364],
      op: "ISZERO",
      path: "0",
    },
    2218: {
      branch: 36,
      fn: "MarketPlace.closeBid",
      offset: [3307, 3364],
      op: "ISZERO",
      path: "0",
    },
    2219: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3364],
      op: "JUMPDEST",
      path: "0",
    },
    2220: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3419],
      op: "DUP1",
      path: "0",
    },
    2221: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3419],
      op: "ISZERO",
      path: "0",
    },
    2222: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3419],
      op: "PUSH2",
      path: "0",
      value: "0x8C4",
    },
    2225: {
      branch: 36,
      fn: "MarketPlace.closeBid",
      offset: [3261, 3419],
      op: "JUMPI",
      path: "0",
    },
    2226: {
      op: "POP",
    },
    2227: {
      fn: "MarketPlace.closeBid",
      offset: [3386, 3419],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2229: {
      fn: "MarketPlace.closeBid",
      offset: [3386, 3419],
      op: "DUP2",
      path: "0",
    },
    2230: {
      fn: "MarketPlace.closeBid",
      offset: [3386, 3419],
      op: "DUP2",
      path: "0",
    },
    2231: {
      fn: "MarketPlace.closeBid",
      offset: [3386, 3419],
      op: "MSTORE",
      path: "0",
    },
    2232: {
      fn: "MarketPlace.closeBid",
      offset: [3386, 3407],
      op: "PUSH1",
      path: "0",
      value: "0x8",
    },
    2234: {
      fn: "MarketPlace.closeBid",
      offset: [3386, 3419],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2236: {
      fn: "MarketPlace.closeBid",
      offset: [3386, 3419],
      op: "MSTORE",
      path: "0",
    },
    2237: {
      fn: "MarketPlace.closeBid",
      offset: [3386, 3419],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    2239: {
      fn: "MarketPlace.closeBid",
      offset: [3386, 3419],
      op: "SWAP1",
      path: "0",
    },
    2240: {
      fn: "MarketPlace.closeBid",
      offset: [3386, 3419],
      op: "KECCAK256",
      path: "0",
    },
    2241: {
      fn: "MarketPlace.closeBid",
      offset: [3386, 3419],
      op: "SLOAD",
      path: "0",
    },
    2242: {
      fn: "MarketPlace.closeBid",
      offset: [3368, 3383],
      op: "TIMESTAMP",
      path: "0",
    },
    2243: {
      branch: 37,
      fn: "MarketPlace.closeBid",
      offset: [3368, 3419],
      op: "GT",
      path: "0",
    },
    2244: {
      fn: "MarketPlace.closeBid",
      offset: [3261, 3419],
      op: "JUMPDEST",
      path: "0",
    },
    2245: {
      fn: "MarketPlace.closeBid",
      offset: [3253, 3463],
      op: "PUSH2",
      path: "0",
      value: "0x8E0",
    },
    2248: {
      branch: 37,
      fn: "MarketPlace.closeBid",
      offset: [3253, 3463],
      op: "JUMPI",
      path: "0",
    },
    2249: {
      fn: "MarketPlace.closeBid",
      offset: [3253, 3463],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    2251: {
      fn: "MarketPlace.closeBid",
      offset: [3253, 3463],
      op: "MLOAD",
      path: "0",
    },
    2252: {
      op: "PUSH3",
      value: "0x461BCD",
    },
    2256: {
      op: "PUSH1",
      value: "0xE5",
    },
    2258: {
      op: "SHL",
    },
    2259: {
      fn: "MarketPlace.closeBid",
      offset: [3253, 3463],
      op: "DUP2",
      path: "0",
    },
    2260: {
      fn: "MarketPlace.closeBid",
      offset: [3253, 3463],
      op: "MSTORE",
      path: "0",
    },
    2261: {
      fn: "MarketPlace.closeBid",
      offset: [3253, 3463],
      op: "PUSH1",
      path: "0",
      value: "0x4",
    },
    2263: {
      fn: "MarketPlace.closeBid",
      offset: [3253, 3463],
      op: "ADD",
      path: "0",
    },
    2264: {
      fn: "MarketPlace.closeBid",
      offset: [3253, 3463],
      op: "PUSH2",
      path: "0",
      value: "0x3A0",
    },
    2267: {
      fn: "MarketPlace.closeBid",
      offset: [3253, 3463],
      op: "SWAP1",
      path: "0",
    },
    2268: {
      fn: "MarketPlace.closeBid",
      offset: [3253, 3463],
      op: "PUSH2",
      path: "0",
      value: "0xD7F",
    },
    2271: {
      fn: "MarketPlace.closeBid",
      jump: "i",
      offset: [3253, 3463],
      op: "JUMP",
      path: "0",
    },
    2272: {
      fn: "MarketPlace.closeBid",
      offset: [3253, 3463],
      op: "JUMPDEST",
      path: "0",
    },
    2273: {
      fn: "MarketPlace.closeBid",
      offset: [3473, 3492],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2275: {
      fn: "MarketPlace.closeBid",
      offset: [3495, 3530],
      op: "DUP2",
      path: "0",
    },
    2276: {
      fn: "MarketPlace.closeBid",
      offset: [3495, 3530],
      op: "DUP2",
      path: "0",
    },
    2277: {
      fn: "MarketPlace.closeBid",
      offset: [3495, 3530],
      op: "MSTORE",
      path: "0",
    },
    2278: {
      fn: "MarketPlace.closeBid",
      offset: [3495, 3518],
      op: "PUSH1",
      path: "0",
      value: "0x7",
    },
    2280: {
      fn: "MarketPlace.closeBid",
      offset: [3495, 3530],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2282: {
      fn: "MarketPlace.closeBid",
      offset: [3495, 3530],
      op: "MSTORE",
      path: "0",
    },
    2283: {
      fn: "MarketPlace.closeBid",
      offset: [3495, 3530],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    2285: {
      fn: "MarketPlace.closeBid",
      offset: [3495, 3530],
      op: "DUP2",
      path: "0",
    },
    2286: {
      fn: "MarketPlace.closeBid",
      offset: [3495, 3530],
      op: "KECCAK256",
      path: "0",
    },
    2287: {
      fn: "MarketPlace.closeBid",
      offset: [3495, 3530],
      op: "SLOAD",
      path: "0",
    },
    2288: {
      fn: "MarketPlace.closeBid",
      offset: [3495, 3530],
      op: "SWAP1",
      path: "0",
    },
    2289: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3564],
      op: "PUSH1",
      path: "0",
      value: "0xB",
    },
    2291: {
      fn: "MarketPlace.closeBid",
      offset: [3565, 3580],
      op: "PUSH2",
      path: "0",
      value: "0x8FD",
    },
    2294: {
      fn: "MarketPlace.closeBid",
      offset: [3579, 3580],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    2296: {
      fn: "MarketPlace.closeBid",
      offset: [3495, 3530],
      op: "DUP5",
      path: "0",
    },
    2297: {
      fn: "MarketPlace.closeBid",
      offset: [3565, 3580],
      op: "PUSH2",
      path: "0",
      value: "0xE2F",
    },
    2300: {
      fn: "MarketPlace.closeBid",
      jump: "i",
      offset: [3565, 3580],
      op: "JUMP",
      path: "0",
    },
    2301: {
      fn: "MarketPlace.closeBid",
      offset: [3565, 3580],
      op: "JUMPDEST",
      path: "0",
    },
    2302: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "DUP2",
      path: "0",
    },
    2303: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "SLOAD",
      path: "0",
    },
    2304: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "DUP2",
      path: "0",
    },
    2305: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "LT",
      path: "0",
    },
    2306: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "PUSH2",
      path: "0",
      value: "0x90D",
    },
    2309: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "JUMPI",
      path: "0",
    },
    2310: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "PUSH2",
      path: "0",
      value: "0x90D",
    },
    2313: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "PUSH2",
      path: "0",
      value: "0xE46",
    },
    2316: {
      fn: "MarketPlace.closeBid",
      jump: "i",
      offset: [3557, 3581],
      op: "JUMP",
      path: "0",
    },
    2317: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "JUMPDEST",
      path: "0",
    },
    2318: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2320: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "SWAP2",
      path: "0",
    },
    2321: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "DUP3",
      path: "0",
    },
    2322: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "MSTORE",
      path: "0",
    },
    2323: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2325: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "SWAP2",
      path: "0",
    },
    2326: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "DUP3",
      path: "0",
    },
    2327: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "SWAP1",
      path: "0",
    },
    2328: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "KECCAK256",
      path: "0",
    },
    2329: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "ADD",
      path: "0",
    },
    2330: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "SLOAD",
      path: "0",
    },
    2331: {
      fn: "MarketPlace.closeBid",
      offset: [3596, 3630],
      op: "PUSH1",
      path: "0",
      statement: 23,
      value: "0x40",
    },
    2333: {
      fn: "MarketPlace.closeBid",
      offset: [3596, 3630],
      op: "DUP1",
      path: "0",
    },
    2334: {
      fn: "MarketPlace.closeBid",
      offset: [3596, 3630],
      op: "MLOAD",
      path: "0",
    },
    2335: {
      op: "DUP7",
    },
    2336: {
      op: "DUP2",
    },
    2337: {
      op: "MSTORE",
    },
    2338: {
      op: "PUSH1",
      value: "0x1",
    },
    2340: {
      op: "PUSH1",
      value: "0x1",
    },
    2342: {
      op: "PUSH1",
      value: "0xA0",
    },
    2344: {
      op: "SHL",
    },
    2345: {
      op: "SUB",
    },
    2346: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "SWAP1",
      path: "0",
    },
    2347: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "SWAP3",
      path: "0",
    },
    2348: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "AND",
      path: "0",
    },
    2349: {
      op: "SWAP3",
    },
    2350: {
      op: "DUP3",
    },
    2351: {
      op: "ADD",
    },
    2352: {
      op: "DUP4",
    },
    2353: {
      op: "SWAP1",
    },
    2354: {
      op: "MSTORE",
    },
    2355: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "SWAP2",
      path: "0",
    },
    2356: {
      fn: "MarketPlace.closeBid",
      offset: [3557, 3581],
      op: "SWAP3",
      path: "0",
    },
    2357: {
      op: "POP",
    },
    2358: {
      fn: "MarketPlace.closeBid",
      offset: [3596, 3630],
      op: "PUSH32",
      path: "0",
      value:
        "0x973F33DE850171EF71730E5289657ABAFC3D4A1BA7971ACFEE9014227F8C9404",
    },
    2391: {
      fn: "MarketPlace.closeBid",
      offset: [3596, 3630],
      op: "SWAP2",
      path: "0",
    },
    2392: {
      op: "ADD",
    },
    2393: {
      fn: "MarketPlace.closeBid",
      offset: [3596, 3630],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    2395: {
      fn: "MarketPlace.closeBid",
      offset: [3596, 3630],
      op: "MLOAD",
      path: "0",
    },
    2396: {
      fn: "MarketPlace.closeBid",
      offset: [3596, 3630],
      op: "DUP1",
      path: "0",
    },
    2397: {
      fn: "MarketPlace.closeBid",
      offset: [3596, 3630],
      op: "SWAP2",
      path: "0",
    },
    2398: {
      fn: "MarketPlace.closeBid",
      offset: [3596, 3630],
      op: "SUB",
      path: "0",
    },
    2399: {
      fn: "MarketPlace.closeBid",
      offset: [3596, 3630],
      op: "SWAP1",
      path: "0",
    },
    2400: {
      fn: "MarketPlace.closeBid",
      offset: [3596, 3630],
      op: "LOG1",
      path: "0",
    },
    2401: {
      fn: "MarketPlace.closeBid",
      offset: [3640, 3661],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2403: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3738],
      op: "DUP3",
      path: "0",
      statement: 24,
    },
    2404: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3738],
      op: "DUP2",
      path: "0",
    },
    2405: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3738],
      op: "MSTORE",
      path: "0",
    },
    2406: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3725],
      op: "PUSH1",
      path: "0",
      value: "0xC",
    },
    2408: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3738],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2410: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3738],
      op: "MSTORE",
      path: "0",
    },
    2411: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3738],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    2413: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3738],
      op: "DUP1",
      path: "0",
    },
    2414: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3738],
      op: "DUP3",
      path: "0",
    },
    2415: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3738],
      op: "KECCAK256",
      path: "0",
    },
    2416: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3738],
      op: "SLOAD",
      path: "0",
    },
    2417: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "SWAP1",
      path: "0",
    },
    2418: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "MLOAD",
      path: "0",
    },
    2419: {
      fn: "MarketPlace.closeBid",
      offset: [3672, 3682],
      op: "CALLER",
      path: "0",
    },
    2420: {
      fn: "MarketPlace.closeBid",
      offset: [3672, 3682],
      op: "SWAP3",
      path: "0",
    },
    2421: {
      fn: "MarketPlace.closeBid",
      offset: [3672, 3682],
      op: "DUP4",
      path: "0",
    },
    2422: {
      fn: "MarketPlace.closeBid",
      offset: [3672, 3682],
      op: "SWAP3",
      path: "0",
    },
    2423: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "DUP1",
      path: "0",
    },
    2424: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "ISZERO",
      path: "0",
    },
    2425: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "PUSH2",
      path: "0",
      value: "0x8FC",
    },
    2428: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "MUL",
      path: "0",
    },
    2429: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "SWAP3",
      path: "0",
    },
    2430: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3738],
      op: "SWAP1",
      path: "0",
    },
    2431: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3738],
      op: "SWAP2",
      path: "0",
    },
    2432: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "DUP2",
      path: "0",
    },
    2433: {
      fn: "MarketPlace.closeBid",
      offset: [3640, 3661],
      op: "DUP2",
      path: "0",
    },
    2434: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "DUP2",
      path: "0",
    },
    2435: {
      fn: "MarketPlace.closeBid",
      offset: [3709, 3738],
      op: "DUP6",
      path: "0",
    },
    2436: {
      fn: "MarketPlace.closeBid",
      offset: [3672, 3682],
      op: "DUP9",
      path: "0",
    },
    2437: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "DUP9",
      path: "0",
    },
    2438: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "CALL",
      path: "0",
    },
    2439: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "SWAP4",
      path: "0",
    },
    2440: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "POP",
      path: "0",
    },
    2441: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "POP",
      path: "0",
    },
    2442: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "POP",
      path: "0",
    },
    2443: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "POP",
      path: "0",
    },
    2444: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "ISZERO",
      path: "0",
    },
    2445: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "DUP1",
      path: "0",
    },
    2446: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "ISZERO",
      path: "0",
    },
    2447: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "PUSH2",
      path: "0",
      value: "0x99C",
    },
    2450: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "JUMPI",
      path: "0",
    },
    2451: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "RETURNDATASIZE",
      path: "0",
    },
    2452: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2454: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "DUP1",
      path: "0",
    },
    2455: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "RETURNDATACOPY",
      path: "0",
    },
    2456: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "RETURNDATASIZE",
      path: "0",
    },
    2457: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2459: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "REVERT",
      path: "0",
    },
    2460: {
      fn: "MarketPlace.closeBid",
      offset: [3694, 3739],
      op: "JUMPDEST",
      path: "0",
    },
    2461: {
      op: "POP",
    },
    2462: {
      fn: "MarketPlace.closeBid",
      offset: [3766, 3767],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    2464: {
      fn: "MarketPlace.closeBid",
      offset: [3749, 4005],
      op: "JUMPDEST",
      path: "0",
    },
    2465: {
      fn: "MarketPlace.closeBid",
      offset: [3774, 3783],
      op: "PUSH1",
      path: "0",
      value: "0x9",
    },
    2467: {
      fn: "MarketPlace.closeBid",
      offset: [3774, 3783],
      op: "SLOAD",
      path: "0",
    },
    2468: {
      fn: "MarketPlace.closeBid",
      offset: [3769, 3770],
      op: "DUP2",
      path: "0",
    },
    2469: {
      fn: "MarketPlace.closeBid",
      offset: [3769, 3783],
      op: "GT",
      path: "0",
    },
    2470: {
      fn: "MarketPlace.closeBid",
      offset: [3749, 4005],
      op: "PUSH2",
      path: "0",
      value: "0xA8B",
    },
    2473: {
      fn: "MarketPlace.closeBid",
      offset: [3749, 4005],
      op: "JUMPI",
      path: "0",
    },
    2474: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3827],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2476: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3827],
      op: "DUP2",
      path: "0",
    },
    2477: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3827],
      op: "DUP2",
      path: "0",
    },
    2478: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3827],
      op: "MSTORE",
      path: "0",
    },
    2479: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3824],
      op: "PUSH1",
      path: "0",
      value: "0xA",
    },
    2481: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3827],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2483: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3827],
      op: "MSTORE",
      path: "0",
    },
    2484: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3827],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    2486: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3827],
      op: "SWAP1",
      path: "0",
    },
    2487: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3827],
      op: "KECCAK256",
      path: "0",
    },
    2488: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3827],
      op: "SLOAD",
      path: "0",
    },
    2489: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3841],
      op: "DUP6",
      path: "0",
    },
    2490: {
      branch: 38,
      fn: "MarketPlace.closeBid",
      offset: [3808, 3841],
      op: "EQ",
      path: "0",
    },
    2491: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3867],
      op: "DUP1",
      path: "0",
    },
    2492: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3867],
      op: "ISZERO",
      path: "0",
    },
    2493: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3867],
      op: "PUSH2",
      path: "0",
      value: "0xA00",
    },
    2496: {
      branch: 38,
      fn: "MarketPlace.closeBid",
      offset: [3808, 3867],
      op: "JUMPI",
      path: "0",
    },
    2497: {
      op: "POP",
    },
    2498: {
      op: "PUSH1",
      value: "0x1",
    },
    2500: {
      op: "PUSH1",
      value: "0x1",
    },
    2502: {
      op: "PUSH1",
      value: "0xA0",
    },
    2504: {
      op: "SHL",
    },
    2505: {
      op: "SUB",
    },
    2506: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3867],
      op: "DUP4",
      path: "0",
    },
    2507: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3867],
      op: "AND",
      path: "0",
    },
    2508: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3852],
      op: "PUSH1",
      path: "0",
      value: "0xB",
    },
    2510: {
      fn: "MarketPlace.closeBid",
      offset: [3853, 3856],
      op: "PUSH2",
      path: "0",
      value: "0x9D8",
    },
    2513: {
      fn: "MarketPlace.closeBid",
      offset: [3855, 3856],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    2515: {
      fn: "MarketPlace.closeBid",
      offset: [3853, 3854],
      op: "DUP5",
      path: "0",
    },
    2516: {
      fn: "MarketPlace.closeBid",
      offset: [3853, 3856],
      op: "PUSH2",
      path: "0",
      value: "0xE2F",
    },
    2519: {
      fn: "MarketPlace.closeBid",
      jump: "i",
      offset: [3853, 3856],
      op: "JUMP",
      path: "0",
    },
    2520: {
      fn: "MarketPlace.closeBid",
      offset: [3853, 3856],
      op: "JUMPDEST",
      path: "0",
    },
    2521: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "DUP2",
      path: "0",
    },
    2522: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "SLOAD",
      path: "0",
    },
    2523: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "DUP2",
      path: "0",
    },
    2524: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "LT",
      path: "0",
    },
    2525: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "PUSH2",
      path: "0",
      value: "0x9E8",
    },
    2528: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "JUMPI",
      path: "0",
    },
    2529: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "PUSH2",
      path: "0",
      value: "0x9E8",
    },
    2532: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "PUSH2",
      path: "0",
      value: "0xE46",
    },
    2535: {
      fn: "MarketPlace.closeBid",
      jump: "i",
      offset: [3845, 3857],
      op: "JUMP",
      path: "0",
    },
    2536: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "JUMPDEST",
      path: "0",
    },
    2537: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2539: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "SWAP2",
      path: "0",
    },
    2540: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "DUP3",
      path: "0",
    },
    2541: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "MSTORE",
      path: "0",
    },
    2542: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2544: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "SWAP1",
      path: "0",
    },
    2545: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "SWAP2",
      path: "0",
    },
    2546: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "KECCAK256",
      path: "0",
    },
    2547: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "ADD",
      path: "0",
    },
    2548: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "SLOAD",
      path: "0",
    },
    2549: {
      op: "PUSH1",
      value: "0x1",
    },
    2551: {
      op: "PUSH1",
      value: "0x1",
    },
    2553: {
      op: "PUSH1",
      value: "0xA0",
    },
    2555: {
      op: "SHL",
    },
    2556: {
      op: "SUB",
    },
    2557: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3857],
      op: "AND",
      path: "0",
    },
    2558: {
      fn: "MarketPlace.closeBid",
      offset: [3845, 3867],
      op: "EQ",
      path: "0",
    },
    2559: {
      branch: 39,
      fn: "MarketPlace.closeBid",
      offset: [3845, 3867],
      op: "ISZERO",
      path: "0",
    },
    2560: {
      fn: "MarketPlace.closeBid",
      offset: [3808, 3867],
      op: "JUMPDEST",
      path: "0",
    },
    2561: {
      fn: "MarketPlace.closeBid",
      offset: [3804, 3995],
      op: "ISZERO",
      path: "0",
    },
    2562: {
      fn: "MarketPlace.closeBid",
      offset: [3804, 3995],
      op: "PUSH2",
      path: "0",
      value: "0xA79",
    },
    2565: {
      branch: 39,
      fn: "MarketPlace.closeBid",
      offset: [3804, 3995],
      op: "JUMPI",
      path: "0",
    },
    2566: {
      fn: "MarketPlace.closeBid",
      offset: [3887, 3909],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2568: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3919],
      op: "PUSH1",
      path: "0",
      value: "0xB",
    },
    2570: {
      fn: "MarketPlace.closeBid",
      offset: [3920, 3925],
      op: "PUSH2",
      path: "0",
      value: "0xA14",
    },
    2573: {
      fn: "MarketPlace.closeBid",
      offset: [3924, 3925],
      op: "PUSH1",
      path: "0",
      value: "0x1",
    },
    2575: {
      fn: "MarketPlace.closeBid",
      offset: [3920, 3921],
      op: "DUP5",
      path: "0",
    },
    2576: {
      fn: "MarketPlace.closeBid",
      offset: [3920, 3925],
      op: "PUSH2",
      path: "0",
      value: "0xE2F",
    },
    2579: {
      fn: "MarketPlace.closeBid",
      jump: "i",
      offset: [3920, 3925],
      op: "JUMP",
      path: "0",
    },
    2580: {
      fn: "MarketPlace.closeBid",
      offset: [3920, 3925],
      op: "JUMPDEST",
      path: "0",
    },
    2581: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "DUP2",
      path: "0",
    },
    2582: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "SLOAD",
      path: "0",
    },
    2583: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "DUP2",
      path: "0",
    },
    2584: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "LT",
      path: "0",
    },
    2585: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "PUSH2",
      path: "0",
      value: "0xA24",
    },
    2588: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "JUMPI",
      path: "0",
    },
    2589: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "PUSH2",
      path: "0",
      value: "0xA24",
    },
    2592: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "PUSH2",
      path: "0",
      value: "0xE46",
    },
    2595: {
      fn: "MarketPlace.closeBid",
      jump: "i",
      offset: [3912, 3926],
      op: "JUMP",
      path: "0",
    },
    2596: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "JUMPDEST",
      path: "0",
    },
    2597: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2599: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "SWAP2",
      path: "0",
    },
    2600: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "DUP3",
      path: "0",
    },
    2601: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "MSTORE",
      path: "0",
    },
    2602: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2604: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "DUP1",
      path: "0",
    },
    2605: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "DUP4",
      path: "0",
    },
    2606: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "KECCAK256",
      path: "0",
    },
    2607: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "SWAP1",
      path: "0",
    },
    2608: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "SWAP2",
      path: "0",
    },
    2609: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "ADD",
      path: "0",
    },
    2610: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "SLOAD",
      path: "0",
    },
    2611: {
      fn: "MarketPlace.closeBid",
      offset: [3960, 3979],
      op: "DUP5",
      path: "0",
      statement: 25,
    },
    2612: {
      fn: "MarketPlace.closeBid",
      offset: [3960, 3979],
      op: "DUP4",
      path: "0",
    },
    2613: {
      fn: "MarketPlace.closeBid",
      offset: [3960, 3979],
      op: "MSTORE",
      path: "0",
    },
    2614: {
      fn: "MarketPlace.closeBid",
      offset: [3960, 3976],
      op: "PUSH1",
      path: "0",
      value: "0xC",
    },
    2616: {
      fn: "MarketPlace.closeBid",
      offset: [3960, 3979],
      op: "SWAP1",
      path: "0",
    },
    2617: {
      fn: "MarketPlace.closeBid",
      offset: [3960, 3979],
      op: "SWAP2",
      path: "0",
    },
    2618: {
      fn: "MarketPlace.closeBid",
      offset: [3960, 3979],
      op: "MSTORE",
      path: "0",
    },
    2619: {
      fn: "MarketPlace.closeBid",
      offset: [3960, 3979],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    2621: {
      fn: "MarketPlace.closeBid",
      offset: [3960, 3979],
      op: "DUP1",
      path: "0",
    },
    2622: {
      fn: "MarketPlace.closeBid",
      offset: [3960, 3979],
      op: "DUP4",
      path: "0",
    },
    2623: {
      fn: "MarketPlace.closeBid",
      offset: [3960, 3979],
      op: "KECCAK256",
      path: "0",
    },
    2624: {
      fn: "MarketPlace.closeBid",
      offset: [3960, 3979],
      op: "SLOAD",
      path: "0",
    },
    2625: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "SWAP1",
      path: "0",
    },
    2626: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "MLOAD",
      path: "0",
    },
    2627: {
      op: "PUSH1",
      value: "0x1",
    },
    2629: {
      op: "PUSH1",
      value: "0x1",
    },
    2631: {
      op: "PUSH1",
      value: "0xA0",
    },
    2633: {
      op: "SHL",
    },
    2634: {
      op: "SUB",
    },
    2635: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "SWAP1",
      path: "0",
    },
    2636: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "SWAP3",
      path: "0",
    },
    2637: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "AND",
      path: "0",
    },
    2638: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "SWAP4",
      path: "0",
    },
    2639: {
      op: "POP",
    },
    2640: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "DUP4",
      path: "0",
    },
    2641: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "SWAP3",
      path: "0",
    },
    2642: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "DUP2",
      path: "0",
    },
    2643: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "ISZERO",
      path: "0",
    },
    2644: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "PUSH2",
      path: "0",
      value: "0x8FC",
    },
    2647: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "MUL",
      path: "0",
    },
    2648: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "SWAP3",
      path: "0",
    },
    2649: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "SWAP1",
      path: "0",
    },
    2650: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "DUP2",
      path: "0",
    },
    2651: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "DUP2",
      path: "0",
    },
    2652: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "DUP2",
      path: "0",
    },
    2653: {
      fn: "MarketPlace.closeBid",
      offset: [3960, 3979],
      op: "DUP6",
      path: "0",
    },
    2654: {
      fn: "MarketPlace.closeBid",
      offset: [3912, 3926],
      op: "DUP9",
      path: "0",
    },
    2655: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "DUP9",
      path: "0",
    },
    2656: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "CALL",
      path: "0",
    },
    2657: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "SWAP4",
      path: "0",
    },
    2658: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "POP",
      path: "0",
    },
    2659: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "POP",
      path: "0",
    },
    2660: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "POP",
      path: "0",
    },
    2661: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "POP",
      path: "0",
    },
    2662: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "ISZERO",
      path: "0",
    },
    2663: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "DUP1",
      path: "0",
    },
    2664: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "ISZERO",
      path: "0",
    },
    2665: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "PUSH2",
      path: "0",
      value: "0xA76",
    },
    2668: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "JUMPI",
      path: "0",
    },
    2669: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "RETURNDATASIZE",
      path: "0",
    },
    2670: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2672: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "DUP1",
      path: "0",
    },
    2673: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "RETURNDATACOPY",
      path: "0",
    },
    2674: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "RETURNDATASIZE",
      path: "0",
    },
    2675: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "PUSH1",
      path: "0",
      value: "0x0",
    },
    2677: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "REVERT",
      path: "0",
    },
    2678: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "JUMPDEST",
      path: "0",
    },
    2679: {
      fn: "MarketPlace.closeBid",
      offset: [3944, 3980],
      op: "POP",
      path: "0",
    },
    2680: {
      fn: "MarketPlace.closeBid",
      offset: [3869, 3995],
      op: "POP",
      path: "0",
    },
    2681: {
      fn: "MarketPlace.closeBid",
      offset: [3804, 3995],
      op: "JUMPDEST",
      path: "0",
    },
    2682: {
      fn: "MarketPlace.closeBid",
      offset: [3785, 3788],
      op: "DUP1",
      path: "0",
      statement: 26,
    },
    2683: {
      fn: "MarketPlace.closeBid",
      offset: [3785, 3788],
      op: "PUSH2",
      path: "0",
      value: "0xA83",
    },
    2686: {
      fn: "MarketPlace.closeBid",
      offset: [3785, 3788],
      op: "DUP2",
      path: "0",
    },
    2687: {
      fn: "MarketPlace.closeBid",
      offset: [3785, 3788],
      op: "PUSH2",
      path: "0",
      value: "0xE5C",
    },
    2690: {
      fn: "MarketPlace.closeBid",
      jump: "i",
      offset: [3785, 3788],
      op: "JUMP",
      path: "0",
    },
    2691: {
      fn: "MarketPlace.closeBid",
      offset: [3785, 3788],
      op: "JUMPDEST",
      path: "0",
    },
    2692: {
      fn: "MarketPlace.closeBid",
      offset: [3785, 3788],
      op: "SWAP2",
      path: "0",
    },
    2693: {
      fn: "MarketPlace.closeBid",
      offset: [3785, 3788],
      op: "POP",
      path: "0",
    },
    2694: {
      fn: "MarketPlace.closeBid",
      offset: [3785, 3788],
      op: "POP",
      path: "0",
    },
    2695: {
      fn: "MarketPlace.closeBid",
      offset: [3749, 4005],
      op: "PUSH2",
      path: "0",
      value: "0x9A0",
    },
    2698: {
      fn: "MarketPlace.closeBid",
      offset: [3749, 4005],
      op: "JUMP",
      path: "0",
    },
    2699: {
      fn: "MarketPlace.closeBid",
      offset: [3749, 4005],
      op: "JUMPDEST",
      path: "0",
    },
    2700: {
      op: "POP",
    },
    2701: {
      op: "POP",
    },
    2702: {
      fn: "MarketPlace.closeBid",
      offset: [4051, 4052],
      op: "PUSH1",
      path: "0",
      statement: 27,
      value: "0x0",
    },
    2704: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4048],
      op: "SWAP3",
      path: "0",
    },
    2705: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4048],
      op: "DUP4",
      path: "0",
    },
    2706: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4048],
      op: "MSTORE",
      path: "0",
    },
    2707: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4036],
      op: "PUSH1",
      path: "0",
      value: "0x6",
    },
    2709: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4048],
      op: "PUSH1",
      path: "0",
      value: "0x20",
    },
    2711: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4048],
      op: "SWAP1",
      path: "0",
    },
    2712: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4048],
      op: "DUP2",
      path: "0",
    },
    2713: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4048],
      op: "MSTORE",
      path: "0",
    },
    2714: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4048],
      op: "PUSH1",
      path: "0",
      value: "0x40",
    },
    2716: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4048],
      op: "DUP1",
      path: "0",
    },
    2717: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4048],
      op: "DUP6",
      path: "0",
    },
    2718: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4048],
      op: "KECCAK256",
      path: "0",
    },
    2719: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4052],
      op: "DUP6",
      path: "0",
    },
    2720: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4052],
      op: "SWAP1",
      path: "0",
    },
    2721: {
      fn: "MarketPlace.closeBid",
      offset: [4015, 4052],
      op: "SSTORE",
      path: "0",
    },
    2722: {
      fn: "MarketPlace.closeBid",
      offset: [4062, 4085],
      op: "PUSH1",
      path: "0",
      statement: 28,
      value: "0x5",
    },
    2724: {
      fn: "MarketPlace.closeBid",
      offset: [4062, 4097],
      op: "DUP3",
      path: "0",
    },
    2725: {
      fn: "MarketPlace.closeBid",
      offset: [4062, 4097],
      op: "MSTORE",
      path: "0",
    },
    2726: {
      fn: "MarketPlace.closeBid",
      offset: [4062, 4097],
      op: "DUP1",
      path: "0",
    },
    2727: {
      fn: "MarketPlace.closeBid",
      offset: [4062, 4097],
      op: "DUP6",
      path: "0",
    },
    2728: {
      fn: "MarketPlace.closeBid",
      offset: [4062, 4097],
      op: "KECCAK256",
      path: "0",
    },
    2729: {
      fn: "MarketPlace.closeBid",
      offset: [4062, 4105],
      op: "DUP1",
      path: "0",
    },
    2730: {
      fn: "MarketPlace.closeBid",
      offset: [4062, 4105],
      op: "SLOAD",
      path: "0",
    },
    2731: {
      op: "PUSH1",
      value: "0xFF",
    },
    2733: {
      op: "NOT",
    },
    2734: {
      fn: "MarketPlace.closeBid",
      offset: [4062, 4105],
      op: "AND",
      path: "0",
    },
    2735: {
      fn: "MarketPlace.closeBid",
      offset: [4062, 4105],
      op: "SWAP1",
      path: "0",
    },
    2736: {
      fn: "MarketPlace.closeBid",
      offset: [4062, 4105],
      op: "SSTORE",
      path: "0",
    },
    2737: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4139],
      op: "PUSH1",
      path: "0",
      statement: 29,
      value: "0x4",
    },
    2739: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4151],
      op: "DUP3",
      path: "0",
    },
    2740: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4151],
      op: "MSTORE",
      path: "0",
    },
    2741: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4151],
      op: "DUP1",
      path: "0",
    },
    2742: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4151],
      op: "DUP6",
      path: "0",
    },
    2743: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4151],
      op: "KECCAK256",
      path: "0",
    },
    2744: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "DUP1",
      path: "0",
    },
    2745: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "SLOAD",
      path: "0",
    },
    2746: {
      op: "PUSH1",
      value: "0x1",
    },
    2748: {
      op: "PUSH1",
      value: "0x1",
    },
    2750: {
      op: "PUSH1",
      value: "0xA0",
    },
    2752: {
      op: "SHL",
    },
    2753: {
      op: "SUB",
    },
    2754: {
      op: "NOT",
    },
    2755: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "AND",
      path: "0",
    },
    2756: {
      op: "PUSH1",
      value: "0x1",
    },
    2758: {
      op: "PUSH1",
      value: "0x1",
    },
    2760: {
      op: "PUSH1",
      value: "0xA0",
    },
    2762: {
      op: "SHL",
    },
    2763: {
      op: "SUB",
    },
    2764: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "SWAP5",
      path: "0",
    },
    2765: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "SWAP1",
      path: "0",
    },
    2766: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "SWAP5",
      path: "0",
    },
    2767: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "AND",
      path: "0",
    },
    2768: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "SWAP4",
      path: "0",
    },
    2769: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "SWAP1",
      path: "0",
    },
    2770: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "SWAP4",
      path: "0",
    },
    2771: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "OR",
      path: "0",
    },
    2772: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "SWAP1",
      path: "0",
    },
    2773: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "SWAP3",
      path: "0",
    },
    2774: {
      fn: "MarketPlace.closeBid",
      offset: [4123, 4160],
      op: "SSTORE",
      path: "0",
    },
    2775: {
      fn: "MarketPlace.closeBid",
      offset: [4170, 4193],
      op: "PUSH1",
      path: "0",
      statement: 30,
      value: "0x7",
    },
    2777: {
      fn: "MarketPlace.closeBid",
      offset: [4170, 4205],
      op: "SWAP1",
      path: "0",
    },
    2778: {
      fn: "MarketPlace.closeBid",
      offset: [4170, 4205],
      op: "MSTORE",
      path: "0",
    },
    2779: {
      fn: "MarketPlace.closeBid",
      offset: [4170, 4205],
      op: "DUP3",
      path: "0",
    },
    2780: {
      fn: "MarketPlace.closeBid",
      offset: [4170, 4205],
      op: "KECCAK256",
      path: "0",
    },
    2781: {
      fn: "MarketPlace.closeBid",
      offset: [4170, 4209],
      op: "SWAP2",
      path: "0",
    },
    2782: {
      fn: "MarketPlace.closeBid",
      offset: [4170, 4209],
      op: "SWAP1",
      path: "0",
    },
    2783: {
      fn: "MarketPlace.closeBid",
      offset: [4170, 4209],
      op: "SWAP2",
      path: "0",
    },
    2784: {
      fn: "MarketPlace.closeBid",
      offset: [4170, 4209],
      op: "SSTORE",
      path: "0",
    },
    2785: {
      op: "POP",
    },
    2786: {
      fn: "MarketPlace.closeBid",
      jump: "o",
      offset: [3191, 4217],
      op: "JUMP",
      path: "0",
    },
    2787: {
      op: "JUMPDEST",
    },
    2788: {
      op: "DUP3",
    },
    2789: {
      op: "DUP1",
    },
    2790: {
      op: "SLOAD",
    },
    2791: {
      op: "PUSH2",
      value: "0xAEF",
    },
    2794: {
      op: "SWAP1",
    },
    2795: {
      op: "PUSH2",
      value: "0xDF4",
    },
    2798: {
      jump: "i",
      op: "JUMP",
    },
    2799: {
      op: "JUMPDEST",
    },
    2800: {
      op: "SWAP1",
    },
    2801: {
      op: "PUSH1",
      value: "0x0",
    },
    2803: {
      op: "MSTORE",
    },
    2804: {
      op: "PUSH1",
      value: "0x20",
    },
    2806: {
      op: "PUSH1",
      value: "0x0",
    },
    2808: {
      op: "KECCAK256",
    },
    2809: {
      op: "SWAP1",
    },
    2810: {
      op: "PUSH1",
      value: "0x1F",
    },
    2812: {
      op: "ADD",
    },
    2813: {
      op: "PUSH1",
      value: "0x20",
    },
    2815: {
      op: "SWAP1",
    },
    2816: {
      op: "DIV",
    },
    2817: {
      op: "DUP2",
    },
    2818: {
      op: "ADD",
    },
    2819: {
      op: "SWAP3",
    },
    2820: {
      op: "DUP3",
    },
    2821: {
      op: "PUSH2",
      value: "0xB11",
    },
    2824: {
      op: "JUMPI",
    },
    2825: {
      op: "PUSH1",
      value: "0x0",
    },
    2827: {
      op: "DUP6",
    },
    2828: {
      op: "SSTORE",
    },
    2829: {
      op: "PUSH2",
      value: "0xB57",
    },
    2832: {
      op: "JUMP",
    },
    2833: {
      op: "JUMPDEST",
    },
    2834: {
      op: "DUP3",
    },
    2835: {
      op: "PUSH1",
      value: "0x1F",
    },
    2837: {
      op: "LT",
    },
    2838: {
      op: "PUSH2",
      value: "0xB2A",
    },
    2841: {
      op: "JUMPI",
    },
    2842: {
      op: "DUP1",
    },
    2843: {
      op: "MLOAD",
    },
    2844: {
      op: "PUSH1",
      value: "0xFF",
    },
    2846: {
      op: "NOT",
    },
    2847: {
      op: "AND",
    },
    2848: {
      op: "DUP4",
    },
    2849: {
      op: "DUP1",
    },
    2850: {
      op: "ADD",
    },
    2851: {
      op: "OR",
    },
    2852: {
      op: "DUP6",
    },
    2853: {
      op: "SSTORE",
    },
    2854: {
      op: "PUSH2",
      value: "0xB57",
    },
    2857: {
      op: "JUMP",
    },
    2858: {
      op: "JUMPDEST",
    },
    2859: {
      op: "DUP3",
    },
    2860: {
      op: "DUP1",
    },
    2861: {
      op: "ADD",
    },
    2862: {
      op: "PUSH1",
      value: "0x1",
    },
    2864: {
      op: "ADD",
    },
    2865: {
      op: "DUP6",
    },
    2866: {
      op: "SSTORE",
    },
    2867: {
      op: "DUP3",
    },
    2868: {
      op: "ISZERO",
    },
    2869: {
      op: "PUSH2",
      value: "0xB57",
    },
    2872: {
      op: "JUMPI",
    },
    2873: {
      op: "SWAP2",
    },
    2874: {
      op: "DUP3",
    },
    2875: {
      op: "ADD",
    },
    2876: {
      op: "JUMPDEST",
    },
    2877: {
      op: "DUP3",
    },
    2878: {
      op: "DUP2",
    },
    2879: {
      op: "GT",
    },
    2880: {
      op: "ISZERO",
    },
    2881: {
      op: "PUSH2",
      value: "0xB57",
    },
    2884: {
      op: "JUMPI",
    },
    2885: {
      op: "DUP3",
    },
    2886: {
      op: "MLOAD",
    },
    2887: {
      op: "DUP3",
    },
    2888: {
      op: "SSTORE",
    },
    2889: {
      op: "SWAP2",
    },
    2890: {
      op: "PUSH1",
      value: "0x20",
    },
    2892: {
      op: "ADD",
    },
    2893: {
      op: "SWAP2",
    },
    2894: {
      op: "SWAP1",
    },
    2895: {
      op: "PUSH1",
      value: "0x1",
    },
    2897: {
      op: "ADD",
    },
    2898: {
      op: "SWAP1",
    },
    2899: {
      op: "PUSH2",
      value: "0xB3C",
    },
    2902: {
      op: "JUMP",
    },
    2903: {
      op: "JUMPDEST",
    },
    2904: {
      op: "POP",
    },
    2905: {
      op: "PUSH2",
      value: "0xB63",
    },
    2908: {
      op: "SWAP3",
    },
    2909: {
      op: "SWAP2",
    },
    2910: {
      op: "POP",
    },
    2911: {
      op: "PUSH2",
      value: "0xB67",
    },
    2914: {
      jump: "i",
      op: "JUMP",
    },
    2915: {
      op: "JUMPDEST",
    },
    2916: {
      op: "POP",
    },
    2917: {
      op: "SWAP1",
    },
    2918: {
      jump: "o",
      op: "JUMP",
    },
    2919: {
      op: "JUMPDEST",
    },
    2920: {
      op: "JUMPDEST",
    },
    2921: {
      op: "DUP1",
    },
    2922: {
      op: "DUP3",
    },
    2923: {
      op: "GT",
    },
    2924: {
      op: "ISZERO",
    },
    2925: {
      op: "PUSH2",
      value: "0xB63",
    },
    2928: {
      op: "JUMPI",
    },
    2929: {
      op: "PUSH1",
      value: "0x0",
    },
    2931: {
      op: "DUP2",
    },
    2932: {
      op: "SSTORE",
    },
    2933: {
      op: "PUSH1",
      value: "0x1",
    },
    2935: {
      op: "ADD",
    },
    2936: {
      op: "PUSH2",
      value: "0xB68",
    },
    2939: {
      op: "JUMP",
    },
    2940: {
      op: "JUMPDEST",
    },
    2941: {
      op: "PUSH1",
      value: "0x0",
    },
    2943: {
      op: "PUSH1",
      value: "0x20",
    },
    2945: {
      op: "DUP3",
    },
    2946: {
      op: "DUP5",
    },
    2947: {
      op: "SUB",
    },
    2948: {
      op: "SLT",
    },
    2949: {
      op: "ISZERO",
    },
    2950: {
      op: "PUSH2",
      value: "0xB8E",
    },
    2953: {
      op: "JUMPI",
    },
    2954: {
      op: "PUSH1",
      value: "0x0",
    },
    2956: {
      op: "DUP1",
    },
    2957: {
      op: "REVERT",
    },
    2958: {
      op: "JUMPDEST",
    },
    2959: {
      op: "POP",
    },
    2960: {
      op: "CALLDATALOAD",
    },
    2961: {
      op: "SWAP2",
    },
    2962: {
      op: "SWAP1",
    },
    2963: {
      op: "POP",
    },
    2964: {
      jump: "o",
      op: "JUMP",
    },
    2965: {
      op: "JUMPDEST",
    },
    2966: {
      op: "PUSH1",
      value: "0x0",
    },
    2968: {
      op: "DUP1",
    },
    2969: {
      op: "PUSH1",
      value: "0x0",
    },
    2971: {
      op: "PUSH1",
      value: "0x60",
    },
    2973: {
      op: "DUP5",
    },
    2974: {
      op: "DUP7",
    },
    2975: {
      op: "SUB",
    },
    2976: {
      op: "SLT",
    },
    2977: {
      op: "ISZERO",
    },
    2978: {
      op: "PUSH2",
      value: "0xBAA",
    },
    2981: {
      op: "JUMPI",
    },
    2982: {
      op: "PUSH1",
      value: "0x0",
    },
    2984: {
      op: "DUP1",
    },
    2985: {
      op: "REVERT",
    },
    2986: {
      op: "JUMPDEST",
    },
    2987: {
      op: "POP",
    },
    2988: {
      op: "POP",
    },
    2989: {
      op: "DUP2",
    },
    2990: {
      op: "CALLDATALOAD",
    },
    2991: {
      op: "SWAP4",
    },
    2992: {
      op: "PUSH1",
      value: "0x20",
    },
    2994: {
      op: "DUP4",
    },
    2995: {
      op: "ADD",
    },
    2996: {
      op: "CALLDATALOAD",
    },
    2997: {
      op: "SWAP4",
    },
    2998: {
      op: "POP",
    },
    2999: {
      op: "PUSH1",
      value: "0x40",
    },
    3001: {
      op: "SWAP1",
    },
    3002: {
      op: "SWAP3",
    },
    3003: {
      op: "ADD",
    },
    3004: {
      op: "CALLDATALOAD",
    },
    3005: {
      op: "SWAP2",
    },
    3006: {
      op: "SWAP1",
    },
    3007: {
      op: "POP",
    },
    3008: {
      jump: "o",
      op: "JUMP",
    },
    3009: {
      op: "JUMPDEST",
    },
    3010: {
      op: "PUSH1",
      value: "0x0",
    },
    3012: {
      op: "DUP2",
    },
    3013: {
      op: "MLOAD",
    },
    3014: {
      op: "DUP1",
    },
    3015: {
      op: "DUP5",
    },
    3016: {
      op: "MSTORE",
    },
    3017: {
      op: "PUSH1",
      value: "0x0",
    },
    3019: {
      op: "JUMPDEST",
    },
    3020: {
      op: "DUP2",
    },
    3021: {
      op: "DUP2",
    },
    3022: {
      op: "LT",
    },
    3023: {
      op: "ISZERO",
    },
    3024: {
      op: "PUSH2",
      value: "0xBE7",
    },
    3027: {
      op: "JUMPI",
    },
    3028: {
      op: "PUSH1",
      value: "0x20",
    },
    3030: {
      op: "DUP2",
    },
    3031: {
      op: "DUP6",
    },
    3032: {
      op: "ADD",
    },
    3033: {
      op: "DUP2",
    },
    3034: {
      op: "ADD",
    },
    3035: {
      op: "MLOAD",
    },
    3036: {
      op: "DUP7",
    },
    3037: {
      op: "DUP4",
    },
    3038: {
      op: "ADD",
    },
    3039: {
      op: "DUP3",
    },
    3040: {
      op: "ADD",
    },
    3041: {
      op: "MSTORE",
    },
    3042: {
      op: "ADD",
    },
    3043: {
      op: "PUSH2",
      value: "0xBCB",
    },
    3046: {
      op: "JUMP",
    },
    3047: {
      op: "JUMPDEST",
    },
    3048: {
      op: "DUP2",
    },
    3049: {
      op: "DUP2",
    },
    3050: {
      op: "GT",
    },
    3051: {
      op: "ISZERO",
    },
    3052: {
      op: "PUSH2",
      value: "0xBF9",
    },
    3055: {
      op: "JUMPI",
    },
    3056: {
      op: "PUSH1",
      value: "0x0",
    },
    3058: {
      op: "PUSH1",
      value: "0x20",
    },
    3060: {
      op: "DUP4",
    },
    3061: {
      op: "DUP8",
    },
    3062: {
      op: "ADD",
    },
    3063: {
      op: "ADD",
    },
    3064: {
      op: "MSTORE",
    },
    3065: {
      op: "JUMPDEST",
    },
    3066: {
      op: "POP",
    },
    3067: {
      op: "PUSH1",
      value: "0x1F",
    },
    3069: {
      op: "ADD",
    },
    3070: {
      op: "PUSH1",
      value: "0x1F",
    },
    3072: {
      op: "NOT",
    },
    3073: {
      op: "AND",
    },
    3074: {
      op: "SWAP3",
    },
    3075: {
      op: "SWAP1",
    },
    3076: {
      op: "SWAP3",
    },
    3077: {
      op: "ADD",
    },
    3078: {
      op: "PUSH1",
      value: "0x20",
    },
    3080: {
      op: "ADD",
    },
    3081: {
      op: "SWAP3",
    },
    3082: {
      op: "SWAP2",
    },
    3083: {
      op: "POP",
    },
    3084: {
      op: "POP",
    },
    3085: {
      jump: "o",
      op: "JUMP",
    },
    3086: {
      op: "JUMPDEST",
    },
    3087: {
      op: "PUSH1",
      value: "0x20",
    },
    3089: {
      op: "DUP2",
    },
    3090: {
      op: "MSTORE",
    },
    3091: {
      op: "PUSH1",
      value: "0x0",
    },
    3093: {
      op: "PUSH2",
      value: "0xC21",
    },
    3096: {
      op: "PUSH1",
      value: "0x20",
    },
    3098: {
      op: "DUP4",
    },
    3099: {
      op: "ADD",
    },
    3100: {
      op: "DUP5",
    },
    3101: {
      op: "PUSH2",
      value: "0xBC1",
    },
    3104: {
      jump: "i",
      op: "JUMP",
    },
    3105: {
      op: "JUMPDEST",
    },
    3106: {
      op: "SWAP4",
    },
    3107: {
      op: "SWAP3",
    },
    3108: {
      op: "POP",
    },
    3109: {
      op: "POP",
    },
    3110: {
      op: "POP",
    },
    3111: {
      jump: "o",
      op: "JUMP",
    },
    3112: {
      op: "JUMPDEST",
    },
    3113: {
      op: "PUSH4",
      value: "0x4E487B71",
    },
    3118: {
      op: "PUSH1",
      value: "0xE0",
    },
    3120: {
      op: "SHL",
    },
    3121: {
      op: "PUSH1",
      value: "0x0",
    },
    3123: {
      op: "MSTORE",
    },
    3124: {
      op: "PUSH1",
      value: "0x41",
    },
    3126: {
      op: "PUSH1",
      value: "0x4",
    },
    3128: {
      op: "MSTORE",
    },
    3129: {
      op: "PUSH1",
      value: "0x24",
    },
    3131: {
      op: "PUSH1",
      value: "0x0",
    },
    3133: {
      op: "REVERT",
    },
    3134: {
      op: "JUMPDEST",
    },
    3135: {
      op: "PUSH1",
      value: "0x0",
    },
    3137: {
      op: "DUP3",
    },
    3138: {
      op: "PUSH1",
      value: "0x1F",
    },
    3140: {
      op: "DUP4",
    },
    3141: {
      op: "ADD",
    },
    3142: {
      op: "SLT",
    },
    3143: {
      op: "PUSH2",
      value: "0xC4F",
    },
    3146: {
      op: "JUMPI",
    },
    3147: {
      op: "PUSH1",
      value: "0x0",
    },
    3149: {
      op: "DUP1",
    },
    3150: {
      op: "REVERT",
    },
    3151: {
      op: "JUMPDEST",
    },
    3152: {
      op: "DUP2",
    },
    3153: {
      op: "CALLDATALOAD",
    },
    3154: {
      op: "PUSH8",
      value: "0xFFFFFFFFFFFFFFFF",
    },
    3163: {
      op: "DUP1",
    },
    3164: {
      op: "DUP3",
    },
    3165: {
      op: "GT",
    },
    3166: {
      op: "ISZERO",
    },
    3167: {
      op: "PUSH2",
      value: "0xC6A",
    },
    3170: {
      op: "JUMPI",
    },
    3171: {
      op: "PUSH2",
      value: "0xC6A",
    },
    3174: {
      op: "PUSH2",
      value: "0xC28",
    },
    3177: {
      jump: "i",
      op: "JUMP",
    },
    3178: {
      op: "JUMPDEST",
    },
    3179: {
      op: "PUSH1",
      value: "0x40",
    },
    3181: {
      op: "MLOAD",
    },
    3182: {
      op: "PUSH1",
      value: "0x1F",
    },
    3184: {
      op: "DUP4",
    },
    3185: {
      op: "ADD",
    },
    3186: {
      op: "PUSH1",
      value: "0x1F",
    },
    3188: {
      op: "NOT",
    },
    3189: {
      op: "SWAP1",
    },
    3190: {
      op: "DUP2",
    },
    3191: {
      op: "AND",
    },
    3192: {
      op: "PUSH1",
      value: "0x3F",
    },
    3194: {
      op: "ADD",
    },
    3195: {
      op: "AND",
    },
    3196: {
      op: "DUP2",
    },
    3197: {
      op: "ADD",
    },
    3198: {
      op: "SWAP1",
    },
    3199: {
      op: "DUP3",
    },
    3200: {
      op: "DUP3",
    },
    3201: {
      op: "GT",
    },
    3202: {
      op: "DUP2",
    },
    3203: {
      op: "DUP4",
    },
    3204: {
      op: "LT",
    },
    3205: {
      op: "OR",
    },
    3206: {
      op: "ISZERO",
    },
    3207: {
      op: "PUSH2",
      value: "0xC92",
    },
    3210: {
      op: "JUMPI",
    },
    3211: {
      op: "PUSH2",
      value: "0xC92",
    },
    3214: {
      op: "PUSH2",
      value: "0xC28",
    },
    3217: {
      jump: "i",
      op: "JUMP",
    },
    3218: {
      op: "JUMPDEST",
    },
    3219: {
      op: "DUP2",
    },
    3220: {
      op: "PUSH1",
      value: "0x40",
    },
    3222: {
      op: "MSTORE",
    },
    3223: {
      op: "DUP4",
    },
    3224: {
      op: "DUP2",
    },
    3225: {
      op: "MSTORE",
    },
    3226: {
      op: "DUP7",
    },
    3227: {
      op: "PUSH1",
      value: "0x20",
    },
    3229: {
      op: "DUP6",
    },
    3230: {
      op: "DUP9",
    },
    3231: {
      op: "ADD",
    },
    3232: {
      op: "ADD",
    },
    3233: {
      op: "GT",
    },
    3234: {
      op: "ISZERO",
    },
    3235: {
      op: "PUSH2",
      value: "0xCAB",
    },
    3238: {
      op: "JUMPI",
    },
    3239: {
      op: "PUSH1",
      value: "0x0",
    },
    3241: {
      op: "DUP1",
    },
    3242: {
      op: "REVERT",
    },
    3243: {
      op: "JUMPDEST",
    },
    3244: {
      op: "DUP4",
    },
    3245: {
      op: "PUSH1",
      value: "0x20",
    },
    3247: {
      op: "DUP8",
    },
    3248: {
      op: "ADD",
    },
    3249: {
      op: "PUSH1",
      value: "0x20",
    },
    3251: {
      op: "DUP4",
    },
    3252: {
      op: "ADD",
    },
    3253: {
      op: "CALLDATACOPY",
    },
    3254: {
      op: "PUSH1",
      value: "0x0",
    },
    3256: {
      op: "PUSH1",
      value: "0x20",
    },
    3258: {
      op: "DUP6",
    },
    3259: {
      op: "DUP4",
    },
    3260: {
      op: "ADD",
    },
    3261: {
      op: "ADD",
    },
    3262: {
      op: "MSTORE",
    },
    3263: {
      op: "DUP1",
    },
    3264: {
      op: "SWAP5",
    },
    3265: {
      op: "POP",
    },
    3266: {
      op: "POP",
    },
    3267: {
      op: "POP",
    },
    3268: {
      op: "POP",
    },
    3269: {
      op: "POP",
    },
    3270: {
      op: "SWAP3",
    },
    3271: {
      op: "SWAP2",
    },
    3272: {
      op: "POP",
    },
    3273: {
      op: "POP",
    },
    3274: {
      jump: "o",
      op: "JUMP",
    },
    3275: {
      op: "JUMPDEST",
    },
    3276: {
      op: "PUSH1",
      value: "0x0",
    },
    3278: {
      op: "DUP1",
    },
    3279: {
      op: "PUSH1",
      value: "0x0",
    },
    3281: {
      op: "PUSH1",
      value: "0x60",
    },
    3283: {
      op: "DUP5",
    },
    3284: {
      op: "DUP7",
    },
    3285: {
      op: "SUB",
    },
    3286: {
      op: "SLT",
    },
    3287: {
      op: "ISZERO",
    },
    3288: {
      op: "PUSH2",
      value: "0xCE0",
    },
    3291: {
      op: "JUMPI",
    },
    3292: {
      op: "PUSH1",
      value: "0x0",
    },
    3294: {
      op: "DUP1",
    },
    3295: {
      op: "REVERT",
    },
    3296: {
      op: "JUMPDEST",
    },
    3297: {
      op: "DUP4",
    },
    3298: {
      op: "CALLDATALOAD",
    },
    3299: {
      op: "PUSH8",
      value: "0xFFFFFFFFFFFFFFFF",
    },
    3308: {
      op: "DUP1",
    },
    3309: {
      op: "DUP3",
    },
    3310: {
      op: "GT",
    },
    3311: {
      op: "ISZERO",
    },
    3312: {
      op: "PUSH2",
      value: "0xCF8",
    },
    3315: {
      op: "JUMPI",
    },
    3316: {
      op: "PUSH1",
      value: "0x0",
    },
    3318: {
      op: "DUP1",
    },
    3319: {
      op: "REVERT",
    },
    3320: {
      op: "JUMPDEST",
    },
    3321: {
      op: "PUSH2",
      value: "0xD04",
    },
    3324: {
      op: "DUP8",
    },
    3325: {
      op: "DUP4",
    },
    3326: {
      op: "DUP9",
    },
    3327: {
      op: "ADD",
    },
    3328: {
      op: "PUSH2",
      value: "0xC3E",
    },
    3331: {
      jump: "i",
      op: "JUMP",
    },
    3332: {
      op: "JUMPDEST",
    },
    3333: {
      op: "SWAP5",
    },
    3334: {
      op: "POP",
    },
    3335: {
      op: "PUSH1",
      value: "0x20",
    },
    3337: {
      op: "DUP7",
    },
    3338: {
      op: "ADD",
    },
    3339: {
      op: "CALLDATALOAD",
    },
    3340: {
      op: "SWAP2",
    },
    3341: {
      op: "POP",
    },
    3342: {
      op: "DUP1",
    },
    3343: {
      op: "DUP3",
    },
    3344: {
      op: "GT",
    },
    3345: {
      op: "ISZERO",
    },
    3346: {
      op: "PUSH2",
      value: "0xD1A",
    },
    3349: {
      op: "JUMPI",
    },
    3350: {
      op: "PUSH1",
      value: "0x0",
    },
    3352: {
      op: "DUP1",
    },
    3353: {
      op: "REVERT",
    },
    3354: {
      op: "JUMPDEST",
    },
    3355: {
      op: "POP",
    },
    3356: {
      op: "PUSH2",
      value: "0xD27",
    },
    3359: {
      op: "DUP7",
    },
    3360: {
      op: "DUP3",
    },
    3361: {
      op: "DUP8",
    },
    3362: {
      op: "ADD",
    },
    3363: {
      op: "PUSH2",
      value: "0xC3E",
    },
    3366: {
      jump: "i",
      op: "JUMP",
    },
    3367: {
      op: "JUMPDEST",
    },
    3368: {
      op: "SWAP3",
    },
    3369: {
      op: "POP",
    },
    3370: {
      op: "POP",
    },
    3371: {
      op: "PUSH1",
      value: "0x40",
    },
    3373: {
      op: "DUP5",
    },
    3374: {
      op: "ADD",
    },
    3375: {
      op: "CALLDATALOAD",
    },
    3376: {
      op: "SWAP1",
    },
    3377: {
      op: "POP",
    },
    3378: {
      op: "SWAP3",
    },
    3379: {
      op: "POP",
    },
    3380: {
      op: "SWAP3",
    },
    3381: {
      op: "POP",
    },
    3382: {
      op: "SWAP3",
    },
    3383: {
      jump: "o",
      op: "JUMP",
    },
    3384: {
      op: "JUMPDEST",
    },
    3385: {
      op: "PUSH1",
      value: "0x80",
    },
    3387: {
      op: "DUP2",
    },
    3388: {
      op: "MSTORE",
    },
    3389: {
      op: "PUSH1",
      value: "0x0",
    },
    3391: {
      op: "PUSH2",
      value: "0xD4B",
    },
    3394: {
      op: "PUSH1",
      value: "0x80",
    },
    3396: {
      op: "DUP4",
    },
    3397: {
      op: "ADD",
    },
    3398: {
      op: "DUP8",
    },
    3399: {
      op: "PUSH2",
      value: "0xBC1",
    },
    3402: {
      jump: "i",
      op: "JUMP",
    },
    3403: {
      op: "JUMPDEST",
    },
    3404: {
      op: "DUP3",
    },
    3405: {
      op: "DUP2",
    },
    3406: {
      op: "SUB",
    },
    3407: {
      op: "PUSH1",
      value: "0x20",
    },
    3409: {
      op: "DUP5",
    },
    3410: {
      op: "ADD",
    },
    3411: {
      op: "MSTORE",
    },
    3412: {
      op: "PUSH2",
      value: "0xD5D",
    },
    3415: {
      op: "DUP2",
    },
    3416: {
      op: "DUP8",
    },
    3417: {
      op: "PUSH2",
      value: "0xBC1",
    },
    3420: {
      jump: "i",
      op: "JUMP",
    },
    3421: {
      op: "JUMPDEST",
    },
    3422: {
      op: "PUSH1",
      value: "0x40",
    },
    3424: {
      op: "DUP5",
    },
    3425: {
      op: "ADD",
    },
    3426: {
      op: "SWAP6",
    },
    3427: {
      op: "SWAP1",
    },
    3428: {
      op: "SWAP6",
    },
    3429: {
      op: "MSTORE",
    },
    3430: {
      op: "POP",
    },
    3431: {
      op: "POP",
    },
    3432: {
      op: "PUSH1",
      value: "0x1",
    },
    3434: {
      op: "PUSH1",
      value: "0x1",
    },
    3436: {
      op: "PUSH1",
      value: "0xA0",
    },
    3438: {
      op: "SHL",
    },
    3439: {
      op: "SUB",
    },
    3440: {
      op: "SWAP2",
    },
    3441: {
      op: "SWAP1",
    },
    3442: {
      op: "SWAP2",
    },
    3443: {
      op: "AND",
    },
    3444: {
      op: "PUSH1",
      value: "0x60",
    },
    3446: {
      op: "SWAP1",
    },
    3447: {
      op: "SWAP2",
    },
    3448: {
      op: "ADD",
    },
    3449: {
      op: "MSTORE",
    },
    3450: {
      op: "SWAP3",
    },
    3451: {
      op: "SWAP2",
    },
    3452: {
      op: "POP",
    },
    3453: {
      op: "POP",
    },
    3454: {
      jump: "o",
      op: "JUMP",
    },
    3455: {
      op: "JUMPDEST",
    },
    3456: {
      op: "PUSH1",
      value: "0x20",
    },
    3458: {
      op: "DUP1",
    },
    3459: {
      op: "DUP3",
    },
    3460: {
      op: "MSTORE",
    },
    3461: {
      op: "PUSH1",
      value: "0x27",
    },
    3463: {
      op: "SWAP1",
    },
    3464: {
      op: "DUP3",
    },
    3465: {
      op: "ADD",
    },
    3466: {
      op: "MSTORE",
    },
    3467: {
      op: "PUSH32",
      value:
        "0x43616C6C6572206973206E6F7420746865206F776E6572206F66207468697320",
    },
    3500: {
      op: "PUSH1",
      value: "0x40",
    },
    3502: {
      op: "DUP3",
    },
    3503: {
      op: "ADD",
    },
    3504: {
      op: "MSTORE",
    },
    3505: {
      op: "PUSH7",
      value: "0x1C1C9BD91D58DD",
    },
    3513: {
      op: "PUSH1",
      value: "0xCA",
    },
    3515: {
      op: "SHL",
    },
    3516: {
      op: "PUSH1",
      value: "0x60",
    },
    3518: {
      op: "DUP3",
    },
    3519: {
      op: "ADD",
    },
    3520: {
      op: "MSTORE",
    },
    3521: {
      op: "PUSH1",
      value: "0x80",
    },
    3523: {
      op: "ADD",
    },
    3524: {
      op: "SWAP1",
    },
    3525: {
      jump: "o",
      op: "JUMP",
    },
    3526: {
      op: "JUMPDEST",
    },
    3527: {
      op: "PUSH4",
      value: "0x4E487B71",
    },
    3532: {
      op: "PUSH1",
      value: "0xE0",
    },
    3534: {
      op: "SHL",
    },
    3535: {
      op: "PUSH1",
      value: "0x0",
    },
    3537: {
      op: "MSTORE",
    },
    3538: {
      op: "PUSH1",
      value: "0x11",
    },
    3540: {
      op: "PUSH1",
      value: "0x4",
    },
    3542: {
      op: "MSTORE",
    },
    3543: {
      op: "PUSH1",
      value: "0x24",
    },
    3545: {
      op: "PUSH1",
      value: "0x0",
    },
    3547: {
      op: "REVERT",
    },
    3548: {
      op: "JUMPDEST",
    },
    3549: {
      op: "PUSH1",
      value: "0x0",
    },
    3551: {
      op: "DUP3",
    },
    3552: {
      op: "NOT",
    },
    3553: {
      op: "DUP3",
    },
    3554: {
      op: "GT",
    },
    3555: {
      op: "ISZERO",
    },
    3556: {
      op: "PUSH2",
      value: "0xDEF",
    },
    3559: {
      op: "JUMPI",
    },
    3560: {
      op: "PUSH2",
      value: "0xDEF",
    },
    3563: {
      op: "PUSH2",
      value: "0xDC6",
    },
    3566: {
      jump: "i",
      op: "JUMP",
    },
    3567: {
      op: "JUMPDEST",
    },
    3568: {
      op: "POP",
    },
    3569: {
      op: "ADD",
    },
    3570: {
      op: "SWAP1",
    },
    3571: {
      jump: "o",
      op: "JUMP",
    },
    3572: {
      op: "JUMPDEST",
    },
    3573: {
      op: "PUSH1",
      value: "0x1",
    },
    3575: {
      op: "DUP2",
    },
    3576: {
      op: "DUP2",
    },
    3577: {
      op: "SHR",
    },
    3578: {
      op: "SWAP1",
    },
    3579: {
      op: "DUP3",
    },
    3580: {
      op: "AND",
    },
    3581: {
      op: "DUP1",
    },
    3582: {
      op: "PUSH2",
      value: "0xE08",
    },
    3585: {
      op: "JUMPI",
    },
    3586: {
      op: "PUSH1",
      value: "0x7F",
    },
    3588: {
      op: "DUP3",
    },
    3589: {
      op: "AND",
    },
    3590: {
      op: "SWAP2",
    },
    3591: {
      op: "POP",
    },
    3592: {
      op: "JUMPDEST",
    },
    3593: {
      op: "PUSH1",
      value: "0x20",
    },
    3595: {
      op: "DUP3",
    },
    3596: {
      op: "LT",
    },
    3597: {
      op: "DUP2",
    },
    3598: {
      op: "EQ",
    },
    3599: {
      op: "ISZERO",
    },
    3600: {
      op: "PUSH2",
      value: "0xE29",
    },
    3603: {
      op: "JUMPI",
    },
    3604: {
      op: "PUSH4",
      value: "0x4E487B71",
    },
    3609: {
      op: "PUSH1",
      value: "0xE0",
    },
    3611: {
      op: "SHL",
    },
    3612: {
      op: "PUSH1",
      value: "0x0",
    },
    3614: {
      op: "MSTORE",
    },
    3615: {
      op: "PUSH1",
      value: "0x22",
    },
    3617: {
      op: "PUSH1",
      value: "0x4",
    },
    3619: {
      op: "MSTORE",
    },
    3620: {
      op: "PUSH1",
      value: "0x24",
    },
    3622: {
      op: "PUSH1",
      value: "0x0",
    },
    3624: {
      op: "REVERT",
    },
    3625: {
      op: "JUMPDEST",
    },
    3626: {
      op: "POP",
    },
    3627: {
      op: "SWAP2",
    },
    3628: {
      op: "SWAP1",
    },
    3629: {
      op: "POP",
    },
    3630: {
      jump: "o",
      op: "JUMP",
    },
    3631: {
      op: "JUMPDEST",
    },
    3632: {
      op: "PUSH1",
      value: "0x0",
    },
    3634: {
      op: "DUP3",
    },
    3635: {
      op: "DUP3",
    },
    3636: {
      op: "LT",
    },
    3637: {
      op: "ISZERO",
    },
    3638: {
      op: "PUSH2",
      value: "0xE41",
    },
    3641: {
      op: "JUMPI",
    },
    3642: {
      op: "PUSH2",
      value: "0xE41",
    },
    3645: {
      op: "PUSH2",
      value: "0xDC6",
    },
    3648: {
      jump: "i",
      op: "JUMP",
    },
    3649: {
      op: "JUMPDEST",
    },
    3650: {
      op: "POP",
    },
    3651: {
      op: "SUB",
    },
    3652: {
      op: "SWAP1",
    },
    3653: {
      jump: "o",
      op: "JUMP",
    },
    3654: {
      op: "JUMPDEST",
    },
    3655: {
      op: "PUSH4",
      value: "0x4E487B71",
    },
    3660: {
      op: "PUSH1",
      value: "0xE0",
    },
    3662: {
      op: "SHL",
    },
    3663: {
      op: "PUSH1",
      value: "0x0",
    },
    3665: {
      op: "MSTORE",
    },
    3666: {
      op: "PUSH1",
      value: "0x32",
    },
    3668: {
      op: "PUSH1",
      value: "0x4",
    },
    3670: {
      op: "MSTORE",
    },
    3671: {
      op: "PUSH1",
      value: "0x24",
    },
    3673: {
      op: "PUSH1",
      value: "0x0",
    },
    3675: {
      op: "REVERT",
    },
    3676: {
      op: "JUMPDEST",
    },
    3677: {
      op: "PUSH1",
      value: "0x0",
    },
    3679: {
      op: "PUSH1",
      value: "0x0",
    },
    3681: {
      op: "NOT",
    },
    3682: {
      op: "DUP3",
    },
    3683: {
      op: "EQ",
    },
    3684: {
      op: "ISZERO",
    },
    3685: {
      op: "PUSH2",
      value: "0xE70",
    },
    3688: {
      op: "JUMPI",
    },
    3689: {
      op: "PUSH2",
      value: "0xE70",
    },
    3692: {
      op: "PUSH2",
      value: "0xDC6",
    },
    3695: {
      jump: "i",
      op: "JUMP",
    },
    3696: {
      op: "JUMPDEST",
    },
    3697: {
      op: "POP",
    },
    3698: {
      op: "PUSH1",
      value: "0x1",
    },
    3700: {
      op: "ADD",
    },
    3701: {
      op: "SWAP1",
    },
    3702: {
      jump: "o",
      op: "JUMP",
    },
  },
  sha1: "b6a415c1fa88c7191f16bbb923e74845ae1d21bf",
  source:
    '//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\ncontract MarketPlace { \n\n    // Product data\n    uint256 public productNumber;\n    mapping(uint256 => string) public productIdToName;\n    mapping(uint256 => string) public productIdToDescription;\n    mapping(uint256 => uint256) public productIdToQuantity;    \n    mapping(uint256 => address) public productIdToOwner;\n    mapping(uint256 => bool) public productIdToAvailability;\n    mapping(uint256 => uint256) public productIdToFloorPrice;\n    mapping(uint256 => uint256) productIdToHighestBidId;\n    mapping(uint256 => uint256) public productIdToLaunchTime;  \n    // Bid data\n    uint256 bidNumber;\n    mapping(uint256 => uint256) bidIdToProductId;\n    address payable[] bidders;\n    mapping(uint256 => uint256) bidIdToBidAmount;\n\n    // Events\n    event productCreated(uint256 _productId);\n    event saleCreated(uint256 _productId);\n    event winnerDeclared(uint256 _productId, address _winner );\n\n\n    constructor () {\n        productNumber = 0;\n        bidNumber = 0;\n    }   \n\n    function createProduct(string memory _name, string memory _description, uint256 _quantity) public {\n        productNumber = productNumber + 1;\n        productIdToName[productNumber] = _name;\n        productIdToDescription[productNumber] = _description;\n        productIdToQuantity[productNumber] = _quantity;\n        productIdToFloorPrice[productNumber] = 0;\n        productIdToAvailability[productNumber] = false;        \n        productIdToOwner[productNumber] = msg.sender;\n        productIdToHighestBidId[productNumber] = 0;                  \n        emit productCreated(productNumber);\n    }   \n\n    function getProductData (uint256 _productId) public view returns (string memory, string memory, uint256, address) {\n        return (productIdToName[_productId], productIdToDescription[_productId], productIdToQuantity[_productId], productIdToOwner[_productId]);\n    }\n\n    function getProductSaleData(uint256 _productId) public view returns (bool, uint256, uint256) {\n        return (productIdToAvailability[_productId], productIdToFloorPrice[_productId], productIdToLaunchTime[_productId]);\n    }\n\n   \n    function putUpForSale(uint256 _productId, uint256 _floorPrice, uint256 _launchtime) public {\n        require(msg.sender == productIdToOwner[_productId], "Caller is not the owner of this product");\n        productIdToAvailability[_productId] = true;\n        productIdToFloorPrice[_productId] = _floorPrice;\n        productIdToLaunchTime[_productId] = _launchtime;\n        emit saleCreated(_productId);\n    }\n\n    function placeBid(uint256 _productId) public payable{\n        require(productIdToAvailability[_productId] == true && block.timestamp < productIdToLaunchTime[_productId] && msg.value >= productIdToFloorPrice[_productId] , "Requested product is not taking bids or bid price too low");\n        bidNumber = bidNumber + 1;\n        bidIdToProductId[bidNumber] = _productId;\n        bidders.push(payable(msg.sender));\n        bidIdToBidAmount[bidNumber] = msg.value;\n        if (msg.value > bidIdToBidAmount[productIdToHighestBidId[_productId]]) {\n            productIdToHighestBidId[_productId] = bidNumber;\n        }\n    }\n  \n\n    function closeBid(uint256 _productId) public payable{\n        require(productIdToOwner[_productId] == msg.sender && bidIdToBidAmount[productIdToHighestBidId[_productId]] > 0 && block.timestamp > productIdToLaunchTime[_productId], "Caller is not the owner of this product");\n        uint256 winnerBidId = productIdToHighestBidId[_productId];\n        address winner = bidders[winnerBidId - 1];\n        emit winnerDeclared(_productId, winner);\n        address payable owner = payable(msg.sender); \n        owner.transfer(bidIdToBidAmount[winnerBidId]);\n        for (uint256 i = 1; i <= bidNumber; i++) {\n            if (bidIdToProductId[i] == _productId && bidders[i-1] != winner) {\n                address payable bidder = bidders[i - 1];\n                bidder.transfer(bidIdToBidAmount[i]);\n            }\n        }\n\n        productIdToFloorPrice[_productId] = 0;\n        productIdToAvailability[_productId] = false;        \n        productIdToOwner[_productId] = winner;\n        productIdToHighestBidId[_productId] = 0;\n\n    }\n\n}',
  sourceMap:
    "56:4164:0:-:0;;;961:72;;;;;;;;;-1:-1:-1;1002:1:0;986:17;;;1013:9;:13;56:4164;;;;;;",
  sourcePath: "contracts/MarketPlace2.sol",
  type: "contract",
};

export default market_place_contract;
